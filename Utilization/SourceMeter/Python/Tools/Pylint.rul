<?xml version="1.0" encoding="UTF-8"?>
<Rul xmlns = "http://www.frontendart.com" xmlns:xsi = "http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation = "http://www.frontendart.com rul.xsd">
  <ToolDescription>
    <Configuration name = "Default">
      <ToolDescriptionItem name = "ID">Pylint</ToolDescriptionItem>
    </Configuration>
  </ToolDescription>
  <Configurations/>
  <Views/>
  <Edges/>
  <Metric id = "Basic Rules">
    <Configuration name = "Default">
      <Enabled>true</Enabled>
      <Visible>true</Visible>
      <Group>summarized</Group>
      <Language lang = "eng">
        <Warning>true</Warning>
        <DisplayName>Basic Rules</DisplayName>
        <Description>Basic Rules</Description>
        <HelpText>Basic Rules</HelpText>
      </Language>
      <Baselines/>
      <Settings>
        <Setting name = "Priority" editable = "true">Minor</Setting>
      </Settings>
      <Calculated/>
    </Configuration>
  </Metric>
  <Metric id = "Class Rules">
    <Configuration name = "Default">
      <Enabled>true</Enabled>
      <Visible>true</Visible>
      <Group>summarized</Group>
      <Language lang = "eng">
        <Warning>true</Warning>
        <DisplayName>Class Rules</DisplayName>
        <Description>Class Rules</Description>
        <HelpText>Class Rules</HelpText>
      </Language>
      <Baselines/>
      <Settings>
        <Setting name = "Priority" editable = "true">Minor</Setting>
      </Settings>
      <Calculated/>
    </Configuration>
  </Metric>
  <Metric id = "Design Rules">
    <Configuration name = "Default">
      <Enabled>true</Enabled>
      <Visible>true</Visible>
      <Group>summarized</Group>
      <Language lang = "eng">
        <Warning>true</Warning>
        <DisplayName>Design Rules</DisplayName>
        <Description>Design Rules</Description>
        <HelpText>Design Rules</HelpText>
      </Language>
      <Baselines/>
      <Settings>
        <Setting name = "Priority" editable = "true">Minor</Setting>
      </Settings>
      <Calculated/>
    </Configuration>
  </Metric>
  <Metric id = "Exception Rules">
    <Configuration name = "Default">
      <Enabled>true</Enabled>
      <Visible>true</Visible>
      <Group>summarized</Group>
      <Language lang = "eng">
        <Warning>true</Warning>
        <DisplayName>Exception Rules</DisplayName>
        <Description>Exception Rules</Description>
        <HelpText>Exception Rules</HelpText>
      </Language>
      <Baselines/>
      <Settings>
        <Setting name = "Priority" editable = "true">Minor</Setting>
      </Settings>
      <Calculated/>
    </Configuration>
  </Metric>
  <Metric id = "Format Rules">
    <Configuration name = "Default">
      <Enabled>true</Enabled>
      <Visible>true</Visible>
      <Group>summarized</Group>
      <Language lang = "eng">
        <Warning>true</Warning>
        <DisplayName>Format Rules</DisplayName>
        <Description>Format Rules</Description>
        <HelpText>Format Rules</HelpText>
      </Language>
      <Baselines/>
      <Settings>
        <Setting name = "Priority" editable = "true">Minor</Setting>
      </Settings>
      <Calculated/>
    </Configuration>
  </Metric>
  <Metric id = "Import Rules">
    <Configuration name = "Default">
      <Enabled>true</Enabled>
      <Visible>true</Visible>
      <Group>summarized</Group>
      <Language lang = "eng">
        <Warning>true</Warning>
        <DisplayName>Import Rules</DisplayName>
        <Description>Import Rules</Description>
        <HelpText>Import Rules</HelpText>
      </Language>
      <Baselines/>
      <Settings>
        <Setting name = "Priority" editable = "true">Minor</Setting>
      </Settings>
      <Calculated/>
    </Configuration>
  </Metric>
  <Metric id = "Logging Rules">
    <Configuration name = "Default">
      <Enabled>true</Enabled>
      <Visible>true</Visible>
      <Group>summarized</Group>
      <Language lang = "eng">
        <Warning>true</Warning>
        <DisplayName>Logging Rules</DisplayName>
        <Description>Logging Rules</Description>
        <HelpText>Logging Rules</HelpText>
      </Language>
      <Baselines/>
      <Settings>
        <Setting name = "Priority" editable = "true">Minor</Setting>
      </Settings>
      <Calculated/>
    </Configuration>
  </Metric>
  <Metric id = "Miscellaneous Rules">
    <Configuration name = "Default">
      <Enabled>true</Enabled>
      <Visible>true</Visible>
      <Group>summarized</Group>
      <Language lang = "eng">
        <Warning>true</Warning>
        <DisplayName>Miscellaneous Rules</DisplayName>
        <Description>Miscellaneous Rules</Description>
        <HelpText>Miscellaneous Rules</HelpText>
      </Language>
      <Baselines/>
      <Settings>
        <Setting name = "Priority" editable = "true">Minor</Setting>
      </Settings>
      <Calculated/>
    </Configuration>
  </Metric>
  <Metric id = "Newstyle Rules">
    <Configuration name = "Default">
      <Enabled>true</Enabled>
      <Visible>true</Visible>
      <Group>summarized</Group>
      <Language lang = "eng">
        <Warning>true</Warning>
        <DisplayName>Newstyle Rules</DisplayName>
        <Description>Newstyle Rules</Description>
        <HelpText>Newstyle Rules</HelpText>
      </Language>
      <Baselines/>
      <Settings>
        <Setting name = "Priority" editable = "true">Minor</Setting>
      </Settings>
      <Calculated/>
    </Configuration>
  </Metric>
  <Metric id = "PYLINT_AB">
    <Configuration name = "Default">
      <Enabled>true</Enabled>
      <Visible>true</Visible>
      <Group>false</Group>
      <OriginalId>apply-builtin</OriginalId>
      <GroupMember>Python3 Rules</GroupMember>
      <Language lang = "eng">
        <Warning>true</Warning>
        <DisplayName>Apply Builtin</DisplayName>
        <Description>Used when the apply built-in function is referenced (missing from Python 3) This message can&apos;t be emitted when using Python &gt;= 3.0.</Description>
        <HelpText>Used when the apply built-in function is referenced (missing from Python 3) This message can&apos;t be emitted when using Python &gt;= 3.0.</HelpText>
        <WarningText>apply built-in referenced</WarningText>
      </Language>
      <Baselines/>
      <Settings>
        <Setting name = "Priority" editable = "true">Major</Setting>
      </Settings>
      <Calculated/>
    </Configuration>
  </Metric>
  <Metric id = "PYLINT_ABIS">
    <Configuration name = "Default">
      <Enabled>true</Enabled>
      <Visible>true</Visible>
      <Group>false</Group>
      <OriginalId>anomalous-backslash-in-string</OriginalId>
      <GroupMember>String Constant Rules</GroupMember>
      <Language lang = "eng">
        <Warning>true</Warning>
        <DisplayName>Anomalous Backslash In String</DisplayName>
        <Description>Used when a backslash is in a literal string but not as an escape.</Description>
        <HelpText>Used when a backslash is in a literal string but not as an escape.</HelpText>
        <WarningText>Anomalous backslash in string: &apos;%s&apos;. String constant might be missing an r prefix.</WarningText>
      </Language>
      <Baselines/>
      <Settings>
        <Setting name = "Priority" editable = "true">Major</Setting>
      </Settings>
      <Calculated/>
    </Configuration>
  </Metric>
  <Metric id = "PYLINT_ACI">
    <Configuration name = "Default">
      <Enabled>true</Enabled>
      <Visible>true</Visible>
      <Group>false</Group>
      <OriginalId>abstract-class-instantiated</OriginalId>
      <GroupMember>Basic Rules</GroupMember>
      <Language lang = "eng">
        <Warning>true</Warning>
        <DisplayName>Abstract Class Instantiated</DisplayName>
        <Description>Used when an abstract class with `abc.ABCMeta` as metaclass has abstract methods and is instantiated.</Description>
        <HelpText>Used when an abstract class with `abc.ABCMeta` as metaclass has abstract methods and is instantiated.</HelpText>
        <WarningText>Abstract class %r with abstract methods instantiated</WarningText>
      </Language>
      <Baselines/>
      <Settings>
        <Setting name = "Priority" editable = "true">Critical</Setting>
      </Settings>
      <Calculated/>
    </Configuration>
  </Metric>
  <Metric id = "PYLINT_ACLU">
    <Configuration name = "Default">
      <Enabled>true</Enabled>
      <Visible>true</Visible>
      <Group>false</Group>
      <OriginalId>abstract-class-little-used</OriginalId>
      <GroupMember>Design Rules</GroupMember>
      <Language lang = "eng">
        <Warning>true</Warning>
        <DisplayName>Abstract Class Little Used</DisplayName>
        <Description>Used when an abstract class is used less than X times as ancestor.</Description>
        <HelpText>Used when an abstract class is used less than X times as ancestor.</HelpText>
        <WarningText>Abstract class is only referenced %s times</WarningText>
      </Language>
      <Baselines/>
      <Settings>
        <Setting name = "Priority" editable = "true">Minor</Setting>
      </Settings>
      <Calculated/>
    </Configuration>
  </Metric>
  <Metric id = "PYLINT_ACNU">
    <Configuration name = "Default">
      <Enabled>true</Enabled>
      <Visible>true</Visible>
      <Group>false</Group>
      <OriginalId>abstract-class-not-used</OriginalId>
      <GroupMember>Design Rules</GroupMember>
      <Language lang = "eng">
        <Warning>true</Warning>
        <DisplayName>Abstract Class Not Used</DisplayName>
        <Description>Used when an abstract class is not used as ancestor anywhere.</Description>
        <HelpText>Used when an abstract class is not used as ancestor anywhere.</HelpText>
        <WarningText>Abstract class not referenced</WarningText>
      </Language>
      <Baselines/>
      <Settings>
        <Setting name = "Priority" editable = "true">Minor</Setting>
      </Settings>
      <Calculated/>
    </Configuration>
  </Metric>
  <Metric id = "PYLINT_AD">
    <Configuration name = "Default">
      <Enabled>true</Enabled>
      <Visible>true</Visible>
      <Group>false</Group>
      <OriginalId>arguments-differ</OriginalId>
      <GroupMember>Class Rules</GroupMember>
      <Language lang = "eng">
        <Warning>true</Warning>
        <DisplayName>Arguments Differ</DisplayName>
        <Description>Used when a method has a different number of arguments than in the implemented interface or in an overridden method.</Description>
        <HelpText>Used when a method has a different number of arguments than in the implemented interface or in an overridden method.</HelpText>
        <WarningText>Arguments number differs from %s %r method</WarningText>
      </Language>
      <Baselines/>
      <Settings>
        <Setting name = "Priority" editable = "true">Major</Setting>
      </Settings>
      <Calculated/>
    </Configuration>
  </Metric>
  <Metric id = "PYLINT_ADOI">
    <Configuration name = "Default">
      <Enabled>true</Enabled>
      <Visible>true</Visible>
      <Group>false</Group>
      <OriginalId>attribute-defined-outside-init</OriginalId>
      <GroupMember>Class Rules</GroupMember>
      <Language lang = "eng">
        <Warning>true</Warning>
        <DisplayName>Attribute Defined Outside Init</DisplayName>
        <Description>Used when an instance attribute is defined outside the __init__ method.</Description>
        <HelpText>Used when an instance attribute is defined outside the __init__ method.</HelpText>
        <WarningText>Attribute %r defined outside __init__</WarningText>
      </Language>
      <Baselines/>
      <Settings>
        <Setting name = "Priority" editable = "true">Major</Setting>
      </Settings>
      <Calculated/>
    </Configuration>
  </Metric>
  <Metric id = "PYLINT_AE">
    <Configuration name = "Default">
      <Enabled>false</Enabled>
      <Visible>true</Visible>
      <Group>false</Group>
      <OriginalId>astroid-error</OriginalId>
      <GroupMember>Pylint Checker Rules</GroupMember>
      <Language lang = "eng">
        <Warning>true</Warning>
        <DisplayName>Astroid Error</DisplayName>
        <Description>Used when an unexpected error occurred while building the Astroid representation. This is usually accompanied by a traceback. Please report such errors !</Description>
        <HelpText>Used when an unexpected error occurred while building the Astroid representation. This is usually accompanied by a traceback. Please report such errors !</HelpText>
        <WarningText>%s: %s</WarningText>
      </Language>
      <Baselines/>
      <Settings>
        <Setting name = "Priority" editable = "true">Blocker</Setting>
      </Settings>
      <Calculated/>
    </Configuration>
  </Metric>
  <Metric id = "PYLINT_AFN">
    <Configuration name = "Default">
      <Enabled>true</Enabled>
      <Visible>true</Visible>
      <Group>false</Group>
      <OriginalId>assignment-from-none</OriginalId>
      <GroupMember>Typecheck Rules</GroupMember>
      <Language lang = "eng">
        <Warning>true</Warning>
        <DisplayName>Assignment From None</DisplayName>
        <Description>Used when an assignment is done on a function call but the inferred function returns nothing but None.</Description>
        <HelpText>Used when an assignment is done on a function call but the inferred function returns nothing but None.</HelpText>
        <WarningText>Assigning to function call which only returns None</WarningText>
      </Language>
      <Baselines/>
      <Settings>
        <Setting name = "Priority" editable = "true">Major</Setting>
      </Settings>
      <Calculated/>
    </Configuration>
  </Metric>
  <Metric id = "PYLINT_AFNR">
    <Configuration name = "Default">
      <Enabled>true</Enabled>
      <Visible>true</Visible>
      <Group>false</Group>
      <OriginalId>assignment-from-no-return</OriginalId>
      <GroupMember>Typecheck Rules</GroupMember>
      <Language lang = "eng">
        <Warning>true</Warning>
        <DisplayName>Assignment From No Return</DisplayName>
        <Description>Used when an assignment is done on a function call but the inferred function doesn&apos;t return anything.</Description>
        <HelpText>Used when an assignment is done on a function call but the inferred function doesn&apos;t return anything.</HelpText>
        <WarningText>Assigning to function call which doesn&apos;t return</WarningText>
      </Language>
      <Baselines/>
      <Settings>
        <Setting name = "Priority" editable = "true">Critical</Setting>
      </Settings>
      <Calculated/>
    </Configuration>
  </Metric>
  <Metric id = "PYLINT_AM">
    <Configuration name = "Default">
      <Enabled>true</Enabled>
      <Visible>true</Visible>
      <Group>false</Group>
      <OriginalId>abstract-method</OriginalId>
      <GroupMember>Class Rules</GroupMember>
      <Language lang = "eng">
        <Warning>true</Warning>
        <DisplayName>Abstract Method</DisplayName>
        <Description>Used when an abstract method (i.e. raise NotImplementedError) is not overridden in concrete class.</Description>
        <HelpText>Used when an abstract method (i.e. raise NotImplementedError) is not overridden in concrete class.</HelpText>
        <WarningText>Method %r is abstract in class %r but is not overridden</WarningText>
      </Language>
      <Baselines/>
      <Settings>
        <Setting name = "Priority" editable = "true">Major</Setting>
      </Settings>
      <Calculated/>
    </Configuration>
  </Metric>
  <Metric id = "PYLINT_AMBD">
    <Configuration name = "Default">
      <Enabled>true</Enabled>
      <Visible>true</Visible>
      <Group>false</Group>
      <OriginalId>access-member-before-definition</OriginalId>
      <GroupMember>Class Rules</GroupMember>
      <Language lang = "eng">
        <Warning>true</Warning>
        <DisplayName>Access Member Before Definition</DisplayName>
        <Description>Used when an instance member is accessed before it&apos;s actually assigned.</Description>
        <HelpText>Used when an instance member is accessed before it&apos;s actually assigned.</HelpText>
        <WarningText>Access to member %r before its definition line %s</WarningText>
      </Language>
      <Baselines/>
      <Settings>
        <Setting name = "Priority" editable = "true">Critical</Setting>
      </Settings>
      <Calculated/>
    </Configuration>
  </Metric>
  <Metric id = "PYLINT_ANS">
    <Configuration name = "Default">
      <Enabled>true</Enabled>
      <Visible>true</Visible>
      <Group>false</Group>
      <OriginalId>assigning-non-slot</OriginalId>
      <GroupMember>Class Rules</GroupMember>
      <Language lang = "eng">
        <Warning>true</Warning>
        <DisplayName>Assigning Non Slot</DisplayName>
        <Description>Used when assigning to an attribute not defined in the class slots.</Description>
        <HelpText>Used when assigning to an attribute not defined in the class slots.</HelpText>
        <WarningText>Assigning to attribute %r not defined in class slots</WarningText>
      </Language>
      <Baselines/>
      <Settings>
        <Setting name = "Priority" editable = "true">Critical</Setting>
      </Settings>
      <Calculated/>
    </Configuration>
  </Metric>
  <Metric id = "PYLINT_AOT">
    <Configuration name = "Default">
      <Enabled>true</Enabled>
      <Visible>true</Visible>
      <Group>false</Group>
      <OriginalId>assert-on-tuple</OriginalId>
      <GroupMember>Basic Rules</GroupMember>
      <Language lang = "eng">
        <Warning>true</Warning>
        <DisplayName>Assert On Tuple</DisplayName>
        <Description>A call of assert on a tuple will always evaluate to true if the tuple is not empty, and will always evaluate to false if it is.</Description>
        <HelpText>A call of assert on a tuple will always evaluate to true if the tuple is not empty, and will always evaluate to false if it is.</HelpText>
        <WarningText>Assert called on a 2-uple. Did you mean &apos;assert x,y&apos;?</WarningText>
      </Language>
      <Baselines/>
      <Settings>
        <Setting name = "Priority" editable = "true">Major</Setting>
      </Settings>
      <Calculated/>
    </Configuration>
  </Metric>
  <Metric id = "PYLINT_AUEIS">
    <Configuration name = "Default">
      <Enabled>true</Enabled>
      <Visible>true</Visible>
      <Group>false</Group>
      <OriginalId>anomalous-unicode-escape-in-string</OriginalId>
      <GroupMember>String Constant Rules</GroupMember>
      <Language lang = "eng">
        <Warning>true</Warning>
        <DisplayName>Anomalous Unicode Escape In String</DisplayName>
        <Description>Used when an escape like \u is encountered in a byte string where it has no effect.</Description>
        <HelpText>Used when an escape like \u is encountered in a byte string where it has no effect.</HelpText>
        <WarningText>Anomalous Unicode escape in byte string: &apos;%s&apos;. String constant might be missing an r or u prefix.</WarningText>
      </Language>
      <Baselines/>
      <Settings>
        <Setting name = "Priority" editable = "true">Major</Setting>
      </Settings>
      <Calculated/>
    </Configuration>
  </Metric>
  <Metric id = "PYLINT_B">
    <Configuration name = "Default">
      <Enabled>true</Enabled>
      <Visible>true</Visible>
      <Group>false</Group>
      <OriginalId>backtick</OriginalId>
      <GroupMember>Python3 Rules</GroupMember>
      <Language lang = "eng">
        <Warning>true</Warning>
        <DisplayName>Backtick</DisplayName>
        <Description>Used when the deprecated &quot;``&quot; (backtick) operator is used instead of the str() function. This message can&apos;t be emitted when using Python &gt;= 3.0.</Description>
        <HelpText>Used when the deprecated &quot;``&quot; (backtick) operator is used instead of the str() function. This message can&apos;t be emitted when using Python &gt;= 3.0.</HelpText>
        <WarningText>Use of the `` operator</WarningText>
      </Language>
      <Baselines/>
      <Settings>
        <Setting name = "Priority" editable = "true">Critical</Setting>
      </Settings>
      <Calculated/>
    </Configuration>
  </Metric>
  <Metric id = "PYLINT_BB">
    <Configuration name = "Default">
      <Enabled>true</Enabled>
      <Visible>true</Visible>
      <Group>false</Group>
      <OriginalId>bad-builtin</OriginalId>
      <GroupMember>Basic Rules</GroupMember>
      <Language lang = "eng">
        <Warning>true</Warning>
        <DisplayName>Bad Builtin</DisplayName>
        <Description>Used when a black listed builtin function is used (see the bad-function option). Usual black listed functions are the ones like map, or filter , where Python offers now some cleaner alternative like list comprehension.</Description>
        <HelpText>Used when a black listed builtin function is used (see the bad-function option). Usual black listed functions are the ones like map, or filter , where Python offers now some cleaner alternative like list comprehension.</HelpText>
        <WarningText>Used builtin function %r</WarningText>
      </Language>
      <Baselines/>
      <Settings>
        <Setting name = "Priority" editable = "true">Major</Setting>
      </Settings>
      <Calculated/>
    </Configuration>
  </Metric>
  <Metric id = "PYLINT_BC">
    <Configuration name = "Default">
      <Enabled>true</Enabled>
      <Visible>true</Visible>
      <Group>false</Group>
      <OriginalId>bad-continuation</OriginalId>
      <GroupMember>Format Rules</GroupMember>
      <Language lang = "eng">
        <Warning>true</Warning>
        <DisplayName>Bad Continuation</DisplayName>
        <Description>TODO</Description>
        <HelpText>TODO</HelpText>
        <WarningText>Wrong %s indentation%s.</WarningText>
      </Language>
      <Baselines/>
      <Settings>
        <Setting name = "Priority" editable = "true">Minor</Setting>
      </Settings>
      <Calculated/>
    </Configuration>
  </Metric>
  <Metric id = "PYLINT_BCA">
    <Configuration name = "Default">
      <Enabled>true</Enabled>
      <Visible>true</Visible>
      <Group>false</Group>
      <OriginalId>bad-classmethod-argument</OriginalId>
      <GroupMember>Class Rules</GroupMember>
      <Language lang = "eng">
        <Warning>true</Warning>
        <DisplayName>Bad Classmethod Argument</DisplayName>
        <Description>Used when a class method has a first argument named differently than the value specified in valid-classmethod-first-arg option (default to &quot;cls&quot;), recommended to easily differentiate them from regular instance methods.</Description>
        <HelpText>Used when a class method has a first argument named differently than the value specified in valid-classmethod-first-arg option (default to &quot;cls&quot;), recommended to easily differentiate them from regular instance methods.</HelpText>
        <WarningText>Class method %s should have %s as first argument</WarningText>
      </Language>
      <Baselines/>
      <Settings>
        <Setting name = "Priority" editable = "true">Minor</Setting>
      </Settings>
      <Calculated/>
    </Configuration>
  </Metric>
  <Metric id = "PYLINT_BCM">
    <Configuration name = "Default">
      <Enabled>true</Enabled>
      <Visible>true</Visible>
      <Group>false</Group>
      <OriginalId>bad-context-manager</OriginalId>
      <GroupMember>Class Rules</GroupMember>
      <Language lang = "eng">
        <Warning>true</Warning>
        <DisplayName>Bad Context Manager</DisplayName>
        <Description>Used when the __exit__ special method, belonging to a context manager, does not accept 3 arguments (type, value, traceback).</Description>
        <HelpText>Used when the __exit__ special method, belonging to a context manager, does not accept 3 arguments (type, value, traceback).</HelpText>
        <WarningText>__exit__ must accept 3 arguments: type, value, traceback</WarningText>
      </Language>
      <Baselines/>
      <Settings>
        <Setting name = "Priority" editable = "true">Critical</Setting>
      </Settings>
      <Calculated/>
    </Configuration>
  </Metric>
  <Metric id = "PYLINT_BD">
    <Configuration name = "Default">
      <Enabled>true</Enabled>
      <Visible>true</Visible>
      <Group>false</Group>
      <OriginalId>boolean-datetime</OriginalId>
      <GroupMember>Stdlib Rules</GroupMember>
      <Language lang = "eng">
        <Warning>true</Warning>
        <DisplayName>Boolean Datetime</DisplayName>
        <Description>Using datetetime.time in a boolean context can hide subtle bugs when the time they represent matches midnight UTC. This behaviour was fixed in Python 3.5. See http://bugs.python.org/issue13936 for reference. This message can&apos;t be emitted when using Python &gt;= 3.5.</Description>
        <HelpText>Using datetetime.time in a boolean context can hide subtle bugs when the time they represent matches midnight UTC. This behaviour was fixed in Python 3.5. See http://bugs.python.org/issue13936 for reference. This message can&apos;t be emitted when using Python &gt;= 3.5.</HelpText>
        <WarningText>Using datetime.time in a boolean context.</WarningText>
      </Language>
      <Baselines/>
      <Settings>
        <Setting name = "Priority" editable = "true">Major</Setting>
      </Settings>
      <Calculated/>
    </Configuration>
  </Metric>
  <Metric id = "PYLINT_BE">
    <Configuration name = "Default">
      <Enabled>true</Enabled>
      <Visible>true</Visible>
      <Group>false</Group>
      <OriginalId>bare-except</OriginalId>
      <GroupMember>Exception Rules</GroupMember>
      <Language lang = "eng">
        <Warning>true</Warning>
        <DisplayName>Bare Except</DisplayName>
        <Description>Used when an except clause doesn&apos;t specify exceptions type to catch.</Description>
        <HelpText>Used when an except clause doesn&apos;t specify exceptions type to catch.</HelpText>
        <WarningText>No exception type(s) specified</WarningText>
      </Language>
      <Baselines/>
      <Settings>
        <Setting name = "Priority" editable = "true">Major</Setting>
      </Settings>
      <Calculated/>
    </Configuration>
  </Metric>
  <Metric id = "PYLINT_BEC">
    <Configuration name = "Default">
      <Enabled>true</Enabled>
      <Visible>true</Visible>
      <Group>false</Group>
      <OriginalId>bad-exception-context</OriginalId>
      <GroupMember>Exception Rules</GroupMember>
      <Language lang = "eng">
        <Warning>true</Warning>
        <DisplayName>Bad Exception Context</DisplayName>
        <Description>Used when using the syntax &quot;raise ... from ...&quot;, where the exception context is not an exception, nor None. This message can&apos;t be emitted when using Python &lt; 3.0.</Description>
        <HelpText>Used when using the syntax &quot;raise ... from ...&quot;, where the exception context is not an exception, nor None. This message can&apos;t be emitted when using Python &lt; 3.0.</HelpText>
        <WarningText>Exception context set to something which is not an exception, nor None</WarningText>
      </Language>
      <Baselines/>
      <Settings>
        <Setting name = "Priority" editable = "true">Critical</Setting>
      </Settings>
      <Calculated/>
    </Configuration>
  </Metric>
  <Metric id = "PYLINT_BEO">
    <Configuration name = "Default">
      <Enabled>true</Enabled>
      <Visible>true</Visible>
      <Group>false</Group>
      <OriginalId>bad-except-order</OriginalId>
      <GroupMember>Exception Rules</GroupMember>
      <Language lang = "eng">
        <Warning>true</Warning>
        <DisplayName>Bad Except Order</DisplayName>
        <Description>Used when except clauses are not in the correct order (from the more specific to the more generic). If you don&apos;t fix the order, some exceptions may not be catched by the most specific handler.</Description>
        <HelpText>Used when except clauses are not in the correct order (from the more specific to the more generic). If you don&apos;t fix the order, some exceptions may not be catched by the most specific handler.</HelpText>
        <WarningText>Bad except clauses order (%s)</WarningText>
      </Language>
      <Baselines/>
      <Settings>
        <Setting name = "Priority" editable = "true">Critical</Setting>
      </Settings>
      <Calculated/>
    </Configuration>
  </Metric>
  <Metric id = "PYLINT_BFC">
    <Configuration name = "Default">
      <Enabled>true</Enabled>
      <Visible>true</Visible>
      <Group>false</Group>
      <OriginalId>bad-format-character</OriginalId>
      <GroupMember>String Rules</GroupMember>
      <Language lang = "eng">
        <Warning>true</Warning>
        <DisplayName>Bad Format Character</DisplayName>
        <Description>Used when a unsupported format character is used in a format string.</Description>
        <HelpText>Used when a unsupported format character is used in a format string.</HelpText>
        <WarningText>Unsupported format character %r (%#02x) at index %d</WarningText>
      </Language>
      <Baselines/>
      <Settings>
        <Setting name = "Priority" editable = "true">Critical</Setting>
      </Settings>
      <Calculated/>
    </Configuration>
  </Metric>
  <Metric id = "PYLINT_BFS">
    <Configuration name = "Default">
      <Enabled>true</Enabled>
      <Visible>true</Visible>
      <Group>false</Group>
      <OriginalId>bad-format-string</OriginalId>
      <GroupMember>String Rules</GroupMember>
      <Language lang = "eng">
        <Warning>true</Warning>
        <DisplayName>Bad Format String</DisplayName>
        <Description>Used when a PEP 3101 format string is invalid. This message can&apos;t be emitted when using Python &lt; 2.7.</Description>
        <HelpText>Used when a PEP 3101 format string is invalid. This message can&apos;t be emitted when using Python &lt; 2.7.</HelpText>
        <WarningText>Invalid format string</WarningText>
      </Language>
      <Baselines/>
      <Settings>
        <Setting name = "Priority" editable = "true">Major</Setting>
      </Settings>
      <Calculated/>
    </Configuration>
  </Metric>
  <Metric id = "PYLINT_BFSK">
    <Configuration name = "Default">
      <Enabled>true</Enabled>
      <Visible>true</Visible>
      <Group>false</Group>
      <OriginalId>bad-format-string-key</OriginalId>
      <GroupMember>String Rules</GroupMember>
      <Language lang = "eng">
        <Warning>true</Warning>
        <DisplayName>Bad Format String Key</DisplayName>
        <Description>Used when a format string that uses named conversion specifiers is used with a dictionary whose keys are not all strings.</Description>
        <HelpText>Used when a format string that uses named conversion specifiers is used with a dictionary whose keys are not all strings.</HelpText>
        <WarningText>Format string dictionary key should be a string, not %s</WarningText>
      </Language>
      <Baselines/>
      <Settings>
        <Setting name = "Priority" editable = "true">Major</Setting>
      </Settings>
      <Calculated/>
    </Configuration>
  </Metric>
  <Metric id = "PYLINT_BI">
    <Configuration name = "Default">
      <Enabled>true</Enabled>
      <Visible>true</Visible>
      <Group>false</Group>
      <OriginalId>bad-indentation</OriginalId>
      <GroupMember>Format Rules</GroupMember>
      <Language lang = "eng">
        <Warning>true</Warning>
        <DisplayName>Bad Indentation</DisplayName>
        <Description>Used when an unexpected number of indentation&apos;s tabulations or spaces has been found.</Description>
        <HelpText>Used when an unexpected number of indentation&apos;s tabulations or spaces has been found.</HelpText>
        <WarningText>Bad indentation. Found %s %s, expected %s</WarningText>
      </Language>
      <Baselines/>
      <Settings>
        <Setting name = "Priority" editable = "true">Major</Setting>
      </Settings>
      <Calculated/>
    </Configuration>
  </Metric>
  <Metric id = "PYLINT_BIO">
    <Configuration name = "Default">
      <Enabled>false</Enabled>
      <Visible>true</Visible>
      <Group>false</Group>
      <OriginalId>bad-inline-option</OriginalId>
      <GroupMember>Pylint Checker Rules</GroupMember>
      <Language lang = "eng">
        <Warning>true</Warning>
        <DisplayName>Bad Inline Option</DisplayName>
        <Description>Used when an inline option is either badly formatted or can&apos;t be used inside modules.</Description>
        <HelpText>Used when an inline option is either badly formatted or can&apos;t be used inside modules.</HelpText>
        <WarningText>Unable to consider inline option %r</WarningText>
      </Language>
      <Baselines/>
      <Settings>
        <Setting name = "Priority" editable = "true">Minor</Setting>
      </Settings>
      <Calculated/>
    </Configuration>
  </Metric>
  <Metric id = "PYLINT_BMCA">
    <Configuration name = "Default">
      <Enabled>true</Enabled>
      <Visible>true</Visible>
      <Group>false</Group>
      <OriginalId>bad-mcs-classmethod-argument</OriginalId>
      <GroupMember>Class Rules</GroupMember>
      <Language lang = "eng">
        <Warning>true</Warning>
        <DisplayName>Bad Mcs Classmethod Argument</DisplayName>
        <Description>Used when a metaclass class method has a first argument named differently than the value specified in valid-metaclass-classmethod-first-arg option (default to &quot;mcs&quot;), recommended to easily differentiate them from regular instance methods.</Description>
        <HelpText>Used when a metaclass class method has a first argument named differently than the value specified in valid-metaclass-classmethod-first-arg option (default to &quot;mcs&quot;), recommended to easily differentiate them from regular instance methods.</HelpText>
        <WarningText>Metaclass class method %s should have %s as first argument</WarningText>
      </Language>
      <Baselines/>
      <Settings>
        <Setting name = "Priority" editable = "true">Minor</Setting>
      </Settings>
      <Calculated/>
    </Configuration>
  </Metric>
  <Metric id = "PYLINT_BMMA">
    <Configuration name = "Default">
      <Enabled>true</Enabled>
      <Visible>true</Visible>
      <Group>false</Group>
      <OriginalId>bad-mcs-method-argument</OriginalId>
      <GroupMember>Class Rules</GroupMember>
      <Language lang = "eng">
        <Warning>true</Warning>
        <DisplayName>Bad Mcs Method Argument</DisplayName>
        <Description>Used when a metaclass method has a first agument named differently than the value specified in valid-classmethod-first-arg option (default to &quot;cls&quot;), recommended to easily differentiate them from regular instance methods.</Description>
        <HelpText>Used when a metaclass method has a first agument named differently than the value specified in valid-classmethod-first-arg option (default to &quot;cls&quot;), recommended to easily differentiate them from regular instance methods.</HelpText>
        <WarningText>Metaclass method %s should have %s as first argument</WarningText>
      </Language>
      <Baselines/>
      <Settings>
        <Setting name = "Priority" editable = "true">Minor</Setting>
      </Settings>
      <Calculated/>
    </Configuration>
  </Metric>
  <Metric id = "PYLINT_BN">
    <Configuration name = "Default">
      <Enabled>true</Enabled>
      <Visible>true</Visible>
      <Group>false</Group>
      <OriginalId>blacklisted-name</OriginalId>
      <GroupMember>Basic Rules</GroupMember>
      <Language lang = "eng">
        <Warning>true</Warning>
        <DisplayName>Blacklisted Name</DisplayName>
        <Description>Used when the name is listed in the black list (unauthorized names).</Description>
        <HelpText>Used when the name is listed in the black list (unauthorized names).</HelpText>
        <WarningText>Black listed name &quot;%s&quot;</WarningText>
      </Language>
      <Baselines/>
      <Settings>
        <Setting name = "Priority" editable = "true">Minor</Setting>
      </Settings>
      <Calculated/>
    </Configuration>
  </Metric>
  <Metric id = "PYLINT_BOE">
    <Configuration name = "Default">
      <Enabled>true</Enabled>
      <Visible>true</Visible>
      <Group>false</Group>
      <OriginalId>binary-op-exception</OriginalId>
      <GroupMember>Exception Rules</GroupMember>
      <Language lang = "eng">
        <Warning>true</Warning>
        <DisplayName>Binary Op Exception</DisplayName>
        <Description>Used when the exception to catch is of the form &quot;except A or B:&quot;. If intending to catch multiple, rewrite as &quot;except (A, B):&quot;</Description>
        <HelpText>Used when the exception to catch is of the form &quot;except A or B:&quot;. If intending to catch multiple, rewrite as &quot;except (A, B):&quot;</HelpText>
        <WarningText>Exception to catch is the result of a binary &quot;%s&quot; operation</WarningText>
      </Language>
      <Baselines/>
      <Settings>
        <Setting name = "Priority" editable = "true">Major</Setting>
      </Settings>
      <Calculated/>
    </Configuration>
  </Metric>
  <Metric id = "PYLINT_BOM">
    <Configuration name = "Default">
      <Enabled>true</Enabled>
      <Visible>true</Visible>
      <Group>false</Group>
      <OriginalId>bad-open-mode</OriginalId>
      <GroupMember>Stdlib Rules</GroupMember>
      <Language lang = "eng">
        <Warning>true</Warning>
        <DisplayName>Bad Open Mode</DisplayName>
        <Description>Python supports: r, w, a[, x] modes with b, +, and U (only with r) options. See http://docs.python.org/2/library/functions.html#open</Description>
        <HelpText>Python supports: r, w, a[, x] modes with b, +, and U (only with r) options. See http://docs.python.org/2/library/functions.html#open</HelpText>
        <WarningText>&quot;%s&quot; is not a valid mode for open.</WarningText>
      </Language>
      <Baselines/>
      <Settings>
        <Setting name = "Priority" editable = "true">Major</Setting>
      </Settings>
      <Calculated/>
    </Configuration>
  </Metric>
  <Metric id = "PYLINT_BOV">
    <Configuration name = "Default">
      <Enabled>false</Enabled>
      <Visible>true</Visible>
      <Group>false</Group>
      <OriginalId>bad-option-value</OriginalId>
      <GroupMember>Pylint Checker Rules</GroupMember>
      <Language lang = "eng">
        <Warning>true</Warning>
        <DisplayName>Bad Option Value</DisplayName>
        <Description>Used when a bad value for an inline option is encountered.</Description>
        <HelpText>Used when a bad value for an inline option is encountered.</HelpText>
        <WarningText>Bad option value %r</WarningText>
      </Language>
      <Baselines/>
      <Settings>
        <Setting name = "Priority" editable = "true">Critical</Setting>
      </Settings>
      <Calculated/>
    </Configuration>
  </Metric>
  <Metric id = "PYLINT_BRS">
    <Configuration name = "Default">
      <Enabled>true</Enabled>
      <Visible>true</Visible>
      <Group>false</Group>
      <OriginalId>bad-reversed-sequence</OriginalId>
      <GroupMember>Basic Rules</GroupMember>
      <Language lang = "eng">
        <Warning>true</Warning>
        <DisplayName>Bad Reversed Sequence</DisplayName>
        <Description>Used when the first argument to reversed() builtin isn&apos;t a sequence (does not implement __reversed__, nor __getitem__ and __len__</Description>
        <HelpText>Used when the first argument to reversed() builtin isn&apos;t a sequence (does not implement __reversed__, nor __getitem__ and __len__</HelpText>
        <WarningText>The first reversed() argument is not a sequence</WarningText>
      </Language>
      <Baselines/>
      <Settings>
        <Setting name = "Priority" editable = "true">Critical</Setting>
      </Settings>
      <Calculated/>
    </Configuration>
  </Metric>
  <Metric id = "PYLINT_BSA">
    <Configuration name = "Default">
      <Enabled>true</Enabled>
      <Visible>true</Visible>
      <Group>false</Group>
      <OriginalId>bad-staticmethod-argument</OriginalId>
      <GroupMember>Class Rules</GroupMember>
      <Language lang = "eng">
        <Warning>true</Warning>
        <DisplayName>Bad Staticmethod Argument</DisplayName>
        <Description>Used when a static method has &quot;self&quot; or a value specified in valid-classmethod-first-arg option or valid-metaclass-classmethod-first-arg option as first argument.</Description>
        <HelpText>Used when a static method has &quot;self&quot; or a value specified in valid-classmethod-first-arg option or valid-metaclass-classmethod-first-arg option as first argument.</HelpText>
        <WarningText>Static method with %r as first argument</WarningText>
      </Language>
      <Baselines/>
      <Settings>
        <Setting name = "Priority" editable = "true">Major</Setting>
      </Settings>
      <Calculated/>
    </Configuration>
  </Metric>
  <Metric id = "PYLINT_BSC">
    <Configuration name = "Default">
      <Enabled>true</Enabled>
      <Visible>true</Visible>
      <Group>false</Group>
      <OriginalId>bad-super-call</OriginalId>
      <GroupMember>Newstyle Rules</GroupMember>
      <Language lang = "eng">
        <Warning>true</Warning>
        <DisplayName>Bad Super Call</DisplayName>
        <Description>Used when another argument than the current class is given as first argument of the super builtin.</Description>
        <HelpText>Used when another argument than the current class is given as first argument of the super builtin.</HelpText>
        <WarningText>Bad first argument %r given to super()</WarningText>
      </Language>
      <Baselines/>
      <Settings>
        <Setting name = "Priority" editable = "true">Critical</Setting>
      </Settings>
      <Calculated/>
    </Configuration>
  </Metric>
  <Metric id = "PYLINT_BSSC">
    <Configuration name = "Default">
      <Enabled>true</Enabled>
      <Visible>true</Visible>
      <Group>false</Group>
      <OriginalId>bad-str-strip-call</OriginalId>
      <GroupMember>String Rules</GroupMember>
      <Language lang = "eng">
        <Warning>true</Warning>
        <DisplayName>Bad Str Strip Call</DisplayName>
        <Description>The argument to a str.{l,r,}strip call contains a duplicate character,</Description>
        <HelpText>The argument to a str.{l,r,}strip call contains a duplicate character,</HelpText>
        <WarningText>Suspicious argument in %s.%s call</WarningText>
      </Language>
      <Baselines/>
      <Settings>
        <Setting name = "Priority" editable = "true">Critical</Setting>
      </Settings>
      <Calculated/>
    </Configuration>
  </Metric>
  <Metric id = "PYLINT_BW">
    <Configuration name = "Default">
      <Enabled>true</Enabled>
      <Visible>true</Visible>
      <Group>false</Group>
      <OriginalId>bad-whitespace</OriginalId>
      <GroupMember>Format Rules</GroupMember>
      <Language lang = "eng">
        <Warning>true</Warning>
        <DisplayName>Bad Whitespace</DisplayName>
        <Description>Used when a wrong number of spaces is used around an operator, bracket or block opener.</Description>
        <HelpText>Used when a wrong number of spaces is used around an operator, bracket or block opener.</HelpText>
        <WarningText>%s space %s %s %s</WarningText>
      </Language>
      <Baselines/>
      <Settings>
        <Setting name = "Priority" editable = "true">Minor</Setting>
      </Settings>
      <Calculated/>
    </Configuration>
  </Metric>
  <Metric id = "PYLINT_BaB">
    <Configuration name = "Default">
      <Enabled>true</Enabled>
      <Visible>true</Visible>
      <Group>false</Group>
      <OriginalId>basestring-builtin</OriginalId>
      <GroupMember>Python3 Rules</GroupMember>
      <Language lang = "eng">
        <Warning>true</Warning>
        <DisplayName>Basestring Builtin</DisplayName>
        <Description>Used when the basestring built-in function is referenced (missing from Python 3) This message can&apos;t be emitted when using Python &gt;= 3.0.</Description>
        <HelpText>Used when the basestring built-in function is referenced (missing from Python 3) This message can&apos;t be emitted when using Python &gt;= 3.0.</HelpText>
        <WarningText>basestring built-in referenced</WarningText>
      </Language>
      <Baselines/>
      <Settings>
        <Setting name = "Priority" editable = "true">Major</Setting>
      </Settings>
      <Calculated/>
    </Configuration>
  </Metric>
  <Metric id = "PYLINT_BrE">
    <Configuration name = "Default">
      <Enabled>true</Enabled>
      <Visible>true</Visible>
      <Group>false</Group>
      <OriginalId>broad-except</OriginalId>
      <GroupMember>Exception Rules</GroupMember>
      <Language lang = "eng">
        <Warning>true</Warning>
        <DisplayName>Broad Except</DisplayName>
        <Description>Used when an except catches a too general exception, possibly burying unrelated errors.</Description>
        <HelpText>Used when an except catches a too general exception, possibly burying unrelated errors.</HelpText>
        <WarningText>Catching too general exception %s</WarningText>
      </Language>
      <Baselines/>
      <Settings>
        <Setting name = "Priority" editable = "true">Major</Setting>
      </Settings>
      <Calculated/>
    </Configuration>
  </Metric>
  <Metric id = "PYLINT_BuB">
    <Configuration name = "Default">
      <Enabled>true</Enabled>
      <Visible>true</Visible>
      <Group>false</Group>
      <OriginalId>buffer-builtin</OriginalId>
      <GroupMember>Python3 Rules</GroupMember>
      <Language lang = "eng">
        <Warning>true</Warning>
        <DisplayName>Buffer Builtin</DisplayName>
        <Description>Used when the buffer built-in function is referenced (missing from Python 3) This message can&apos;t be emitted when using Python &gt;= 3.0.</Description>
        <HelpText>Used when the buffer built-in function is referenced (missing from Python 3) This message can&apos;t be emitted when using Python &gt;= 3.0.</HelpText>
        <WarningText>buffer built-in referenced</WarningText>
      </Language>
      <Baselines/>
      <Settings>
        <Setting name = "Priority" editable = "true">Major</Setting>
      </Settings>
      <Calculated/>
    </Configuration>
  </Metric>
  <Metric id = "PYLINT_CB">
    <Configuration name = "Default">
      <Enabled>true</Enabled>
      <Visible>true</Visible>
      <Group>false</Group>
      <OriginalId>cmp-builtin</OriginalId>
      <GroupMember>Python3 Rules</GroupMember>
      <Language lang = "eng">
        <Warning>true</Warning>
        <DisplayName>Cmp Builtin</DisplayName>
        <Description>Used when the cmp built-in function is referenced (missing from Python 3) This message can&apos;t be emitted when using Python &gt;= 3.0.</Description>
        <HelpText>Used when the cmp built-in function is referenced (missing from Python 3) This message can&apos;t be emitted when using Python &gt;= 3.0.</HelpText>
        <WarningText>cmp built-in referenced</WarningText>
      </Language>
      <Baselines/>
      <Settings>
        <Setting name = "Priority" editable = "true">Major</Setting>
      </Settings>
      <Calculated/>
    </Configuration>
  </Metric>
  <Metric id = "PYLINT_CI">
    <Configuration name = "Default">
      <Enabled>true</Enabled>
      <Visible>true</Visible>
      <Group>false</Group>
      <OriginalId>cyclic-import</OriginalId>
      <GroupMember>Import Rules</GroupMember>
      <Language lang = "eng">
        <Warning>true</Warning>
        <DisplayName>Cyclic Import</DisplayName>
        <Description>Used when a cyclic import between two or more modules is detected.</Description>
        <HelpText>Used when a cyclic import between two or more modules is detected.</HelpText>
        <WarningText>Cyclic import (%s)</WarningText>
      </Language>
      <Baselines/>
      <Settings>
        <Setting name = "Priority" editable = "true">Minor</Setting>
      </Settings>
      <Calculated/>
    </Configuration>
  </Metric>
  <Metric id = "PYLINT_CM">
    <Configuration name = "Default">
      <Enabled>true</Enabled>
      <Visible>true</Visible>
      <Group>false</Group>
      <OriginalId>cmp-method</OriginalId>
      <GroupMember>Python3 Rules</GroupMember>
      <Language lang = "eng">
        <Warning>true</Warning>
        <DisplayName>Cmp Method</DisplayName>
        <Description>Used when a __cmp__ method is defined (method is not used by Python 3) This message can&apos;t be emitted when using Python &gt;= 3.0.</Description>
        <HelpText>Used when a __cmp__ method is defined (method is not used by Python 3) This message can&apos;t be emitted when using Python &gt;= 3.0.</HelpText>
        <WarningText>__cmp__ method defined</WarningText>
      </Language>
      <Baselines/>
      <Settings>
        <Setting name = "Priority" editable = "true">Major</Setting>
      </Settings>
      <Calculated/>
    </Configuration>
  </Metric>
  <Metric id = "PYLINT_CNE">
    <Configuration name = "Default">
      <Enabled>true</Enabled>
      <Visible>true</Visible>
      <Group>false</Group>
      <OriginalId>catching-non-exception</OriginalId>
      <GroupMember>Exception Rules</GroupMember>
      <Language lang = "eng">
        <Warning>true</Warning>
        <DisplayName>Catching Non Exception</DisplayName>
        <Description>Used when a class which doesn&apos;t inherit from BaseException is used as an exception in an except clause.</Description>
        <HelpText>Used when a class which doesn&apos;t inherit from BaseException is used as an exception in an except clause.</HelpText>
        <WarningText>Catching an exception which doesn&apos;t inherit from BaseException: %s</WarningText>
      </Language>
      <Baselines/>
      <Settings>
        <Setting name = "Priority" editable = "true">Critical</Setting>
      </Settings>
      <Calculated/>
    </Configuration>
  </Metric>
  <Metric id = "PYLINT_CVFL">
    <Configuration name = "Default">
      <Enabled>true</Enabled>
      <Visible>true</Visible>
      <Group>false</Group>
      <OriginalId>cell-var-from-loop</OriginalId>
      <GroupMember>Variable Rules</GroupMember>
      <Language lang = "eng">
        <Warning>true</Warning>
        <DisplayName>Cell Var From Loop</DisplayName>
        <Description>A variable used in a closure is defined in a loop. This will result in all closures using the same value for the closed-over variable.</Description>
        <HelpText>A variable used in a closure is defined in a loop. This will result in all closures using the same value for the closed-over variable.</HelpText>
        <WarningText>Cell variable %s defined in loop</WarningText>
      </Language>
      <Baselines/>
      <Settings>
        <Setting name = "Priority" editable = "true">Major</Setting>
      </Settings>
      <Calculated/>
    </Configuration>
  </Metric>
  <Metric id = "PYLINT_CoB">
    <Configuration name = "Default">
      <Enabled>true</Enabled>
      <Visible>true</Visible>
      <Group>false</Group>
      <OriginalId>coerce-builtin</OriginalId>
      <GroupMember>Python3 Rules</GroupMember>
      <Language lang = "eng">
        <Warning>true</Warning>
        <DisplayName>Coerce Builtin</DisplayName>
        <Description>Used when the coerce built-in function is referenced (missing from Python 3) This message can&apos;t be emitted when using Python &gt;= 3.0.</Description>
        <HelpText>Used when the coerce built-in function is referenced (missing from Python 3) This message can&apos;t be emitted when using Python &gt;= 3.0.</HelpText>
        <WarningText>coerce built-in referenced</WarningText>
      </Language>
      <Baselines/>
      <Settings>
        <Setting name = "Priority" editable = "true">Major</Setting>
      </Settings>
      <Calculated/>
    </Configuration>
  </Metric>
  <Metric id = "PYLINT_CoM">
    <Configuration name = "Default">
      <Enabled>true</Enabled>
      <Visible>true</Visible>
      <Group>false</Group>
      <OriginalId>coerce-method</OriginalId>
      <GroupMember>Python3 Rules</GroupMember>
      <Language lang = "eng">
        <Warning>true</Warning>
        <DisplayName>Coerce Method</DisplayName>
        <Description>Used when a __coerce__ method is defined (method is not used by Python 3) This message can&apos;t be emitted when using Python &gt;= 3.0.</Description>
        <HelpText>Used when a __coerce__ method is defined (method is not used by Python 3) This message can&apos;t be emitted when using Python &gt;= 3.0.</HelpText>
        <WarningText>__coerce__ method defined</WarningText>
      </Language>
      <Baselines/>
      <Settings>
        <Setting name = "Priority" editable = "true">Major</Setting>
      </Settings>
      <Calculated/>
    </Configuration>
  </Metric>
  <Metric id = "PYLINT_DAN">
    <Configuration name = "Default">
      <Enabled>true</Enabled>
      <Visible>true</Visible>
      <Group>false</Group>
      <OriginalId>duplicate-argument-name</OriginalId>
      <GroupMember>Basic Rules</GroupMember>
      <Language lang = "eng">
        <Warning>true</Warning>
        <DisplayName>Duplicate Argument Name</DisplayName>
        <Description>Duplicate argument names in function definitions are syntax errors.</Description>
        <HelpText>Duplicate argument names in function definitions are syntax errors.</HelpText>
        <WarningText>Duplicate argument name %s in function definition</WarningText>
      </Language>
      <Baselines/>
      <Settings>
        <Setting name = "Priority" editable = "true">Critical</Setting>
      </Settings>
      <Calculated/>
    </Configuration>
  </Metric>
  <Metric id = "PYLINT_DC">
    <Configuration name = "Default">
      <Enabled>false</Enabled>
      <Visible>true</Visible>
      <Group>false</Group>
      <OriginalId>duplicate-code</OriginalId>
      <GroupMember>Similarity Rules</GroupMember>
      <Language lang = "eng">
        <Warning>true</Warning>
        <DisplayName>Duplicate Code</DisplayName>
        <Description>Indicates that a set of similar lines has been detected among multiple file. This usually means that the code should be refactored to avoid this duplication.</Description>
        <HelpText>Indicates that a set of similar lines has been detected among multiple file. This usually means that the code should be refactored to avoid this duplication.</HelpText>
        <WarningText>Similar lines in %s files</WarningText>
      </Language>
      <Baselines/>
      <Settings>
        <Setting name = "Priority" editable = "true">Minor</Setting>
      </Settings>
      <Calculated/>
    </Configuration>
  </Metric>
  <Metric id = "PYLINT_DDV">
    <Configuration name = "Default">
      <Enabled>true</Enabled>
      <Visible>true</Visible>
      <Group>false</Group>
      <OriginalId>dangerous-default-value</OriginalId>
      <GroupMember>Basic Rules</GroupMember>
      <Language lang = "eng">
        <Warning>true</Warning>
        <DisplayName>Dangerous Default Value</DisplayName>
        <Description>Used when a mutable value as list or dictionary is detected in a default value for an argument.</Description>
        <HelpText>Used when a mutable value as list or dictionary is detected in a default value for an argument.</HelpText>
        <WarningText>Dangerous default value %s as argument</WarningText>
      </Language>
      <Baselines/>
      <Settings>
        <Setting name = "Priority" editable = "true">Major</Setting>
      </Settings>
      <Calculated/>
    </Configuration>
  </Metric>
  <Metric id = "PYLINT_DIM">
    <Configuration name = "Default">
      <Enabled>true</Enabled>
      <Visible>true</Visible>
      <Group>false</Group>
      <OriginalId>dict-iter-method</OriginalId>
      <GroupMember>Python3 Rules</GroupMember>
      <Language lang = "eng">
        <Warning>true</Warning>
        <DisplayName>Dict Iter Method</DisplayName>
        <Description>Used for calls to dict.iterkeys(), itervalues() or iteritems() (Python 3 lacks these methods) This message can&apos;t be emitted when using Python &gt;= 3.0.</Description>
        <HelpText>Used for calls to dict.iterkeys(), itervalues() or iteritems() (Python 3 lacks these methods) This message can&apos;t be emitted when using Python &gt;= 3.0.</HelpText>
        <WarningText>Calling a dict.iter*() method</WarningText>
      </Language>
      <Baselines/>
      <Settings>
        <Setting name = "Priority" editable = "true">Major</Setting>
      </Settings>
      <Calculated/>
    </Configuration>
  </Metric>
  <Metric id = "PYLINT_DK">
    <Configuration name = "Default">
      <Enabled>true</Enabled>
      <Visible>true</Visible>
      <Group>false</Group>
      <OriginalId>duplicate-key</OriginalId>
      <GroupMember>Basic Rules</GroupMember>
      <Language lang = "eng">
        <Warning>true</Warning>
        <DisplayName>Duplicate Key</DisplayName>
        <Description>Used when a dictionary expression binds the same key multiple times.</Description>
        <HelpText>Used when a dictionary expression binds the same key multiple times.</HelpText>
        <WarningText>Duplicate key %r in dictionary</WarningText>
      </Language>
      <Baselines/>
      <Settings>
        <Setting name = "Priority" editable = "true">Major</Setting>
      </Settings>
      <Calculated/>
    </Configuration>
  </Metric>
  <Metric id = "PYLINT_DL">
    <Configuration name = "Default">
      <Enabled>true</Enabled>
      <Visible>true</Visible>
      <Group>false</Group>
      <OriginalId>deprecated-lambda</OriginalId>
      <GroupMember>Basic Rules</GroupMember>
      <Language lang = "eng">
        <Warning>true</Warning>
        <DisplayName>Deprecated Lambda</DisplayName>
        <Description>Used when a lambda is the first argument to &quot;map&quot; or &quot;filter&quot;. It could be clearer as a list comprehension or generator expression. This message can&apos;t be emitted when using Python &gt;= 3.0.</Description>
        <HelpText>Used when a lambda is the first argument to &quot;map&quot; or &quot;filter&quot;. It could be clearer as a list comprehension or generator expression. This message can&apos;t be emitted when using Python &gt;= 3.0.</HelpText>
        <WarningText>map/filter on lambda could be replaced by comprehension</WarningText>
      </Language>
      <Baselines/>
      <Settings>
        <Setting name = "Priority" editable = "true">Major</Setting>
      </Settings>
      <Calculated/>
    </Configuration>
  </Metric>
  <Metric id = "PYLINT_DM">
    <Configuration name = "Default">
      <Enabled>true</Enabled>
      <Visible>true</Visible>
      <Group>false</Group>
      <OriginalId>delslice-method</OriginalId>
      <GroupMember>Python3 Rules</GroupMember>
      <Language lang = "eng">
        <Warning>true</Warning>
        <DisplayName>Delslice Method</DisplayName>
        <Description>Used when a __delslice__ method is defined (method is not used by Python 3) This message can&apos;t be emitted when using Python &gt;= 3.0.</Description>
        <HelpText>Used when a __delslice__ method is defined (method is not used by Python 3) This message can&apos;t be emitted when using Python &gt;= 3.0.</HelpText>
        <WarningText>__delslice__ method defined</WarningText>
      </Language>
      <Baselines/>
      <Settings>
        <Setting name = "Priority" editable = "true">Major</Setting>
      </Settings>
      <Calculated/>
    </Configuration>
  </Metric>
  <Metric id = "PYLINT_DP">
    <Configuration name = "Default">
      <Enabled>false</Enabled>
      <Visible>true</Visible>
      <Group>false</Group>
      <OriginalId>deprecated-pragma</OriginalId>
      <GroupMember>Pylint Checker Rules</GroupMember>
      <Language lang = "eng">
        <Warning>true</Warning>
        <DisplayName>Deprecated Pragma</DisplayName>
        <Description>Some inline pylint options have been renamed or reworked, only the most recent form should be used. NOTE:skip-all is only available with pylint &gt;= 0.26</Description>
        <HelpText>Some inline pylint options have been renamed or reworked, only the most recent form should be used. NOTE:skip-all is only available with pylint &gt;= 0.26</HelpText>
        <WarningText>Pragma &quot;%s&quot; is deprecated, use &quot;%s&quot; instead</WarningText>
      </Language>
      <Baselines/>
      <Settings>
        <Setting name = "Priority" editable = "true">Minor</Setting>
      </Settings>
      <Calculated/>
    </Configuration>
  </Metric>
  <Metric id = "PYLINT_DVM">
    <Configuration name = "Default">
      <Enabled>true</Enabled>
      <Visible>true</Visible>
      <Group>false</Group>
      <OriginalId>dict-view-method</OriginalId>
      <GroupMember>Python3 Rules</GroupMember>
      <Language lang = "eng">
        <Warning>true</Warning>
        <DisplayName>Dict View Method</DisplayName>
        <Description>Used for calls to dict.viewkeys(), viewvalues() or viewitems() (Python 3 lacks these methods) This message can&apos;t be emitted when using Python &gt;= 3.0.</Description>
        <HelpText>Used for calls to dict.viewkeys(), viewvalues() or viewitems() (Python 3 lacks these methods) This message can&apos;t be emitted when using Python &gt;= 3.0.</HelpText>
        <WarningText>Calling a dict.view*() method</WarningText>
      </Language>
      <Baselines/>
      <Settings>
        <Setting name = "Priority" editable = "true">Major</Setting>
      </Settings>
      <Calculated/>
    </Configuration>
  </Metric>
  <Metric id = "PYLINT_DeM">
    <Configuration name = "Default">
      <Enabled>true</Enabled>
      <Visible>true</Visible>
      <Group>false</Group>
      <OriginalId>deprecated-module</OriginalId>
      <GroupMember>Import Rules</GroupMember>
      <Language lang = "eng">
        <Warning>true</Warning>
        <DisplayName>Deprecated Module</DisplayName>
        <Description>Used a module marked as deprecated is imported.</Description>
        <HelpText>Used a module marked as deprecated is imported.</HelpText>
        <WarningText>Uses of a deprecated module %r</WarningText>
      </Language>
      <Baselines/>
      <Settings>
        <Setting name = "Priority" editable = "true">Major</Setting>
      </Settings>
      <Calculated/>
    </Configuration>
  </Metric>
  <Metric id = "PYLINT_EB">
    <Configuration name = "Default">
      <Enabled>true</Enabled>
      <Visible>true</Visible>
      <Group>false</Group>
      <OriginalId>execfile-builtin</OriginalId>
      <GroupMember>Python3 Rules</GroupMember>
      <Language lang = "eng">
        <Warning>true</Warning>
        <DisplayName>Execfile Builtin</DisplayName>
        <Description>Used when the execfile built-in function is referenced (missing from Python 3) This message can&apos;t be emitted when using Python &gt;= 3.0.</Description>
        <HelpText>Used when the execfile built-in function is referenced (missing from Python 3) This message can&apos;t be emitted when using Python &gt;= 3.0.</HelpText>
        <WarningText>execfile built-in referenced</WarningText>
      </Language>
      <Baselines/>
      <Settings>
        <Setting name = "Priority" editable = "true">Major</Setting>
      </Settings>
      <Calculated/>
    </Configuration>
  </Metric>
  <Metric id = "PYLINT_ED">
    <Configuration name = "Default">
      <Enabled>true</Enabled>
      <Visible>true</Visible>
      <Group>false</Group>
      <OriginalId>empty-docstring</OriginalId>
      <GroupMember>Basic Rules</GroupMember>
      <Language lang = "eng">
        <Warning>true</Warning>
        <DisplayName>Empty Docstring</DisplayName>
        <Description>Used when a module, function, class or method has an empty docstring (it would be too easy ;).</Description>
        <HelpText>Used when a module, function, class or method has an empty docstring (it would be too easy ;).</HelpText>
        <WarningText>Empty %s docstring</WarningText>
      </Language>
      <Baselines/>
      <Settings>
        <Setting name = "Priority" editable = "true">Minor</Setting>
      </Settings>
      <Calculated/>
    </Configuration>
  </Metric>
  <Metric id = "PYLINT_ENA">
    <Configuration name = "Default">
      <Enabled>true</Enabled>
      <Visible>true</Visible>
      <Group>false</Group>
      <OriginalId>expression-not-assigned</OriginalId>
      <GroupMember>Basic Rules</GroupMember>
      <Language lang = "eng">
        <Warning>true</Warning>
        <DisplayName>Expression Not Assigned</DisplayName>
        <Description>Used when an expression that is not a function call is assigned to nothing. Probably something else was intended.</Description>
        <HelpText>Used when an expression that is not a function call is assigned to nothing. Probably something else was intended.</HelpText>
        <WarningText>Expression &quot;%s&quot; is assigned to nothing</WarningText>
      </Language>
      <Baselines/>
      <Settings>
        <Setting name = "Priority" editable = "true">Major</Setting>
      </Settings>
      <Calculated/>
    </Configuration>
  </Metric>
  <Metric id = "PYLINT_EU">
    <Configuration name = "Default">
      <Enabled>true</Enabled>
      <Visible>true</Visible>
      <Group>false</Group>
      <OriginalId>eval-used</OriginalId>
      <GroupMember>Basic Rules</GroupMember>
      <Language lang = "eng">
        <Warning>true</Warning>
        <DisplayName>Eval Used</DisplayName>
        <Description>Used when you use the &quot;eval&quot; function, to discourage its usage. Consider using `ast.literal_eval` for safely evaluating strings containing Python expressions from untrusted sources.</Description>
        <HelpText>Used when you use the &quot;eval&quot; function, to discourage its usage. Consider using `ast.literal_eval` for safely evaluating strings containing Python expressions from untrusted sources.</HelpText>
        <WarningText>Use of eval</WarningText>
      </Language>
      <Baselines/>
      <Settings>
        <Setting name = "Priority" editable = "true">Major</Setting>
      </Settings>
      <Calculated/>
    </Configuration>
  </Metric>
  <Metric id = "PYLINT_ExU">
    <Configuration name = "Default">
      <Enabled>true</Enabled>
      <Visible>true</Visible>
      <Group>false</Group>
      <OriginalId>exec-used</OriginalId>
      <GroupMember>Basic Rules</GroupMember>
      <Language lang = "eng">
        <Warning>true</Warning>
        <DisplayName>Exec Used</DisplayName>
        <Description>Used when you use the &quot;exec&quot; statement (function for Python 3), to discourage its usage. That doesn&apos;t mean you can not use it !</Description>
        <HelpText>Used when you use the &quot;exec&quot; statement (function for Python 3), to discourage its usage. That doesn&apos;t mean you can not use it !</HelpText>
        <WarningText>Use of exec</WarningText>
      </Language>
      <Baselines/>
      <Settings>
        <Setting name = "Priority" editable = "true">Major</Setting>
      </Settings>
      <Calculated/>
    </Configuration>
  </Metric>
  <Metric id = "PYLINT_F">
    <Configuration name = "Default">
      <Enabled>false</Enabled>
      <Visible>true</Visible>
      <Group>false</Group>
      <OriginalId>fatal</OriginalId>
      <GroupMember>Pylint Checker Rules</GroupMember>
      <Language lang = "eng">
        <Warning>true</Warning>
        <DisplayName>Fatal</DisplayName>
        <Description>Used when an error occurred preventing the analysis of a module (unable to find it for instance).</Description>
        <HelpText>Used when an error occurred preventing the analysis of a module (unable to find it for instance).</HelpText>
        <WarningText></WarningText>
      </Language>
      <Baselines/>
      <Settings>
        <Setting name = "Priority" editable = "true">Blocker</Setting>
      </Settings>
      <Calculated/>
    </Configuration>
  </Metric>
  <Metric id = "PYLINT_FB">
    <Configuration name = "Default">
      <Enabled>true</Enabled>
      <Visible>true</Visible>
      <Group>false</Group>
      <OriginalId>file-builtin</OriginalId>
      <GroupMember>Python3 Rules</GroupMember>
      <Language lang = "eng">
        <Warning>true</Warning>
        <DisplayName>File Builtin</DisplayName>
        <Description>Used when the file built-in function is referenced (missing from Python 3) This message can&apos;t be emitted when using Python &gt;= 3.0.</Description>
        <HelpText>Used when the file built-in function is referenced (missing from Python 3) This message can&apos;t be emitted when using Python &gt;= 3.0.</HelpText>
        <WarningText>file built-in referenced</WarningText>
      </Language>
      <Baselines/>
      <Settings>
        <Setting name = "Priority" editable = "true">Major</Setting>
      </Settings>
      <Calculated/>
    </Configuration>
  </Metric>
  <Metric id = "PYLINT_FCS">
    <Configuration name = "Default">
      <Enabled>true</Enabled>
      <Visible>true</Visible>
      <Group>false</Group>
      <OriginalId>format-combined-specification</OriginalId>
      <GroupMember>String Rules</GroupMember>
      <Language lang = "eng">
        <Warning>true</Warning>
        <DisplayName>Format Combined Specification</DisplayName>
        <Description>Usen when a PEP 3101 format string contains both automatic field numbering (e.g. &apos;{}&apos;) and manual field specification (e.g. &apos;{0}&apos;). This message can&apos;t be emitted when using Python &lt; 2.7.</Description>
        <HelpText>Usen when a PEP 3101 format string contains both automatic field numbering (e.g. &apos;{}&apos;) and manual field specification (e.g. &apos;{0}&apos;). This message can&apos;t be emitted when using Python &lt; 2.7.</HelpText>
        <WarningText>Format string contains both automatic field numbering and manual field specification</WarningText>
      </Language>
      <Baselines/>
      <Settings>
        <Setting name = "Priority" editable = "true">Major</Setting>
      </Settings>
      <Calculated/>
    </Configuration>
  </Metric>
  <Metric id = "PYLINT_FI">
    <Configuration name = "Default">
      <Enabled>false</Enabled>
      <Visible>true</Visible>
      <Group>false</Group>
      <OriginalId>file-ignored</OriginalId>
      <GroupMember>Pylint Checker Rules</GroupMember>
      <Language lang = "eng">
        <Warning>true</Warning>
        <DisplayName>File Ignored</DisplayName>
        <Description>Used to inform that the file will not be checked</Description>
        <HelpText>Used to inform that the file will not be checked</HelpText>
        <WarningText>Ignoring entire file</WarningText>
      </Language>
      <Baselines/>
      <Settings>
        <Setting name = "Priority" editable = "true">Minor</Setting>
      </Settings>
      <Calculated/>
    </Configuration>
  </Metric>
  <Metric id = "PYLINT_FNM">
    <Configuration name = "Default">
      <Enabled>true</Enabled>
      <Visible>true</Visible>
      <Group>false</Group>
      <OriginalId>format-needs-mapping</OriginalId>
      <GroupMember>String Rules</GroupMember>
      <Language lang = "eng">
        <Warning>true</Warning>
        <DisplayName>Format Needs Mapping</DisplayName>
        <Description>Used when a format string that uses named conversion specifiers is used with an argument that is not a mapping.</Description>
        <HelpText>Used when a format string that uses named conversion specifiers is used with an argument that is not a mapping.</HelpText>
        <WarningText>Expected mapping for format string, not %s</WarningText>
      </Language>
      <Baselines/>
      <Settings>
        <Setting name = "Priority" editable = "true">Critical</Setting>
      </Settings>
      <Calculated/>
    </Configuration>
  </Metric>
  <Metric id = "PYLINT_FR">
    <Configuration name = "Default">
      <Enabled>true</Enabled>
      <Visible>true</Visible>
      <Group>false</Group>
      <OriginalId>function-redefined</OriginalId>
      <GroupMember>Basic Rules</GroupMember>
      <Language lang = "eng">
        <Warning>true</Warning>
        <DisplayName>Function Redefined</DisplayName>
        <Description>Used when a function / class / method is redefined.</Description>
        <HelpText>Used when a function / class / method is redefined.</HelpText>
        <WarningText>%s already defined line %s</WarningText>
      </Language>
      <Baselines/>
      <Settings>
        <Setting name = "Priority" editable = "true">Critical</Setting>
      </Settings>
      <Calculated/>
    </Configuration>
  </Metric>
  <Metric id = "PYLINT_Fi">
    <Configuration name = "Default">
      <Enabled>true</Enabled>
      <Visible>true</Visible>
      <Group>false</Group>
      <OriginalId>fixme</OriginalId>
      <GroupMember>Miscellaneous Rules</GroupMember>
      <Language lang = "eng">
        <Warning>true</Warning>
        <DisplayName>Fixme</DisplayName>
        <Description>Used when a warning note as FIXME or XXX is detected.</Description>
        <HelpText>Used when a warning note as FIXME or XXX is detected.</HelpText>
        <WarningText></WarningText>
      </Language>
      <Baselines/>
      <Settings>
        <Setting name = "Priority" editable = "true">Major</Setting>
      </Settings>
      <Calculated/>
    </Configuration>
  </Metric>
  <Metric id = "PYLINT_GAML">
    <Configuration name = "Default">
      <Enabled>true</Enabled>
      <Visible>true</Visible>
      <Group>false</Group>
      <OriginalId>global-at-module-level</OriginalId>
      <GroupMember>Variable Rules</GroupMember>
      <Language lang = "eng">
        <Warning>true</Warning>
        <DisplayName>Global At Module Level</DisplayName>
        <Description>Used when you use the &quot;global&quot; statement at the module level since it has no effect</Description>
        <HelpText>Used when you use the &quot;global&quot; statement at the module level since it has no effect</HelpText>
        <WarningText>Using the global statement at the module level</WarningText>
      </Language>
      <Baselines/>
      <Settings>
        <Setting name = "Priority" editable = "true">Major</Setting>
      </Settings>
      <Calculated/>
    </Configuration>
  </Metric>
  <Metric id = "PYLINT_GM">
    <Configuration name = "Default">
      <Enabled>true</Enabled>
      <Visible>true</Visible>
      <Group>false</Group>
      <OriginalId>getslice-method</OriginalId>
      <GroupMember>Python3 Rules</GroupMember>
      <Language lang = "eng">
        <Warning>true</Warning>
        <DisplayName>Getslice Method</DisplayName>
        <Description>Used when a __getslice__ method is defined (method is not used by Python 3) This message can&apos;t be emitted when using Python &gt;= 3.0.</Description>
        <HelpText>Used when a __getslice__ method is defined (method is not used by Python 3) This message can&apos;t be emitted when using Python &gt;= 3.0.</HelpText>
        <WarningText>__getslice__ method defined</WarningText>
      </Language>
      <Baselines/>
      <Settings>
        <Setting name = "Priority" editable = "true">Major</Setting>
      </Settings>
      <Calculated/>
    </Configuration>
  </Metric>
  <Metric id = "PYLINT_GS">
    <Configuration name = "Default">
      <Enabled>true</Enabled>
      <Visible>true</Visible>
      <Group>false</Group>
      <OriginalId>global-statement</OriginalId>
      <GroupMember>Variable Rules</GroupMember>
      <Language lang = "eng">
        <Warning>true</Warning>
        <DisplayName>Global Statement</DisplayName>
        <Description>Used when you use the &quot;global&quot; statement to update a global variable. Pylint just try to discourage this usage. That doesn&apos;t mean you can not use it !</Description>
        <HelpText>Used when you use the &quot;global&quot; statement to update a global variable. Pylint just try to discourage this usage. That doesn&apos;t mean you can not use it !</HelpText>
        <WarningText>Using the global statement</WarningText>
      </Language>
      <Baselines/>
      <Settings>
        <Setting name = "Priority" editable = "true">Major</Setting>
      </Settings>
      <Calculated/>
    </Configuration>
  </Metric>
  <Metric id = "PYLINT_GVNA">
    <Configuration name = "Default">
      <Enabled>true</Enabled>
      <Visible>true</Visible>
      <Group>false</Group>
      <OriginalId>global-variable-not-assigned</OriginalId>
      <GroupMember>Variable Rules</GroupMember>
      <Language lang = "eng">
        <Warning>true</Warning>
        <DisplayName>Global Variable Not Assigned</DisplayName>
        <Description>Used when a variable is defined through the &quot;global&quot; statement but no assignment to this variable is done.</Description>
        <HelpText>Used when a variable is defined through the &quot;global&quot; statement but no assignment to this variable is done.</HelpText>
        <WarningText>Using global for %r but no assignment is done</WarningText>
      </Language>
      <Baselines/>
      <Settings>
        <Setting name = "Priority" editable = "true">Major</Setting>
      </Settings>
      <Calculated/>
    </Configuration>
  </Metric>
  <Metric id = "PYLINT_GVU">
    <Configuration name = "Default">
      <Enabled>true</Enabled>
      <Visible>true</Visible>
      <Group>false</Group>
      <OriginalId>global-variable-undefined</OriginalId>
      <GroupMember>Variable Rules</GroupMember>
      <Language lang = "eng">
        <Warning>true</Warning>
        <DisplayName>Global Variable Undefined</DisplayName>
        <Description>Used when a variable is defined through the &quot;global&quot; statement but the variable is not defined in the module scope.</Description>
        <HelpText>Used when a variable is defined through the &quot;global&quot; statement but the variable is not defined in the module scope.</HelpText>
        <WarningText>Global variable %r undefined at the module level</WarningText>
      </Language>
      <Baselines/>
      <Settings>
        <Setting name = "Priority" editable = "true">Major</Setting>
      </Settings>
      <Calculated/>
    </Configuration>
  </Metric>
  <Metric id = "PYLINT_HM">
    <Configuration name = "Default">
      <Enabled>true</Enabled>
      <Visible>true</Visible>
      <Group>false</Group>
      <OriginalId>hex-method</OriginalId>
      <GroupMember>Python3 Rules</GroupMember>
      <Language lang = "eng">
        <Warning>true</Warning>
        <DisplayName>Hex Method</DisplayName>
        <Description>Used when a __hex__ method is defined (method is not used by Python 3) This message can&apos;t be emitted when using Python &gt;= 3.0.</Description>
        <HelpText>Used when a __hex__ method is defined (method is not used by Python 3) This message can&apos;t be emitted when using Python &gt;= 3.0.</HelpText>
        <WarningText>__hex__ method defined</WarningText>
      </Language>
      <Baselines/>
      <Settings>
        <Setting name = "Priority" editable = "true">Major</Setting>
      </Settings>
      <Calculated/>
    </Configuration>
  </Metric>
  <Metric id = "PYLINT_IAO">
    <Configuration name = "Default">
      <Enabled>true</Enabled>
      <Visible>true</Visible>
      <Group>false</Group>
      <OriginalId>invalid-all-object</OriginalId>
      <GroupMember>Variable Rules</GroupMember>
      <Language lang = "eng">
        <Warning>true</Warning>
        <DisplayName>Invalid All Object</DisplayName>
        <Description>Used when an invalid (non-string) object occurs in __all__.</Description>
        <HelpText>Used when an invalid (non-string) object occurs in __all__.</HelpText>
        <WarningText>Invalid object %r in __all__, must contain only strings</WarningText>
      </Language>
      <Baselines/>
      <Settings>
        <Setting name = "Priority" editable = "true">Critical</Setting>
      </Settings>
      <Calculated/>
    </Configuration>
  </Metric>
  <Metric id = "PYLINT_IB">
    <Configuration name = "Default">
      <Enabled>true</Enabled>
      <Visible>true</Visible>
      <Group>false</Group>
      <OriginalId>input-builtin</OriginalId>
      <GroupMember>Python3 Rules</GroupMember>
      <Language lang = "eng">
        <Warning>true</Warning>
        <DisplayName>Input Builtin</DisplayName>
        <Description>Used when the input built-in is referenced (backwards-incompatible semantics in Python 3) This message can&apos;t be emitted when using Python &gt;= 3.0.</Description>
        <HelpText>Used when the input built-in is referenced (backwards-incompatible semantics in Python 3) This message can&apos;t be emitted when using Python &gt;= 3.0.</HelpText>
        <WarningText>input built-in referenced</WarningText>
      </Language>
      <Baselines/>
      <Settings>
        <Setting name = "Priority" editable = "true">Major</Setting>
      </Settings>
      <Calculated/>
    </Configuration>
  </Metric>
  <Metric id = "PYLINT_IBM">
    <Configuration name = "Default">
      <Enabled>false</Enabled>
      <Visible>true</Visible>
      <Group>false</Group>
      <OriginalId>ignored-builtin-module</OriginalId>
      <GroupMember>Pylint Checker Rules</GroupMember>
      <Language lang = "eng">
        <Warning>true</Warning>
        <DisplayName>Ignored Builtin Module</DisplayName>
        <Description>Used to indicate that the user asked to analyze a builtin module which has been skipped.</Description>
        <HelpText>Used to indicate that the user asked to analyze a builtin module which has been skipped.</HelpText>
        <WarningText>ignored builtin module %s</WarningText>
      </Language>
      <Baselines/>
      <Settings>
        <Setting name = "Priority" editable = "true">Blocker</Setting>
      </Settings>
      <Calculated/>
    </Configuration>
  </Metric>
  <Metric id = "PYLINT_IE">
    <Configuration name = "Default">
      <Enabled>false</Enabled>
      <Visible>true</Visible>
      <Group>false</Group>
      <OriginalId>import-error</OriginalId>
      <GroupMember>Import Rules</GroupMember>
      <Language lang = "eng">
        <Warning>true</Warning>
        <DisplayName>Import Error</DisplayName>
        <Description>Used when pylint has been unable to import a module.</Description>
        <HelpText>Used when pylint has been unable to import a module.</HelpText>
        <WarningText>Unable to import %s</WarningText>
      </Language>
      <Baselines/>
      <Settings>
        <Setting name = "Priority" editable = "true">Blocker</Setting>
      </Settings>
      <Calculated/>
    </Configuration>
  </Metric>
  <Metric id = "PYLINT_IED">
    <Configuration name = "Default">
      <Enabled>true</Enabled>
      <Visible>true</Visible>
      <Group>false</Group>
      <OriginalId>invalid-encoded-data</OriginalId>
      <GroupMember>Miscellaneous Rules</GroupMember>
      <Language lang = "eng">
        <Warning>true</Warning>
        <DisplayName>Invalid Encoded Data</DisplayName>
        <Description>Used when a source line cannot be decoded using the specified source file encoding. This message can&apos;t be emitted when using Python &gt;= 3.0.</Description>
        <HelpText>Used when a source line cannot be decoded using the specified source file encoding. This message can&apos;t be emitted when using Python &gt;= 3.0.</HelpText>
        <WarningText>Cannot decode using encoding &quot;%s&quot;, unexpected byte at position %d</WarningText>
      </Language>
      <Baselines/>
      <Settings>
        <Setting name = "Priority" editable = "true">Major</Setting>
      </Settings>
      <Calculated/>
    </Configuration>
  </Metric>
  <Metric id = "PYLINT_IFI">
    <Configuration name = "Default">
      <Enabled>true</Enabled>
      <Visible>true</Visible>
      <Group>false</Group>
      <OriginalId>invalid-format-index</OriginalId>
      <GroupMember>String Rules</GroupMember>
      <Language lang = "eng">
        <Warning>true</Warning>
        <DisplayName>Invalid Format Index</DisplayName>
        <Description>Used when a PEP 3101 format string uses a lookup specifier ({a[1]}), but the argument passed for formatting doesn&apos;t contain or doesn&apos;t have that key as an attribute. This message can&apos;t be emitted when using Python &lt; 2.7.</Description>
        <HelpText>Used when a PEP 3101 format string uses a lookup specifier ({a[1]}), but the argument passed for formatting doesn&apos;t contain or doesn&apos;t have that key as an attribute. This message can&apos;t be emitted when using Python &lt; 2.7.</HelpText>
        <WarningText>Using invalid lookup key %r in format specifier %r</WarningText>
      </Language>
      <Baselines/>
      <Settings>
        <Setting name = "Priority" editable = "true">Major</Setting>
      </Settings>
      <Calculated/>
    </Configuration>
  </Metric>
  <Metric id = "PYLINT_IIG">
    <Configuration name = "Default">
      <Enabled>true</Enabled>
      <Visible>true</Visible>
      <Group>false</Group>
      <OriginalId>init-is-generator</OriginalId>
      <GroupMember>Basic Rules</GroupMember>
      <Language lang = "eng">
        <Warning>true</Warning>
        <DisplayName>Init Is Generator</DisplayName>
        <Description>Used when the special class method __init__ is turned into a generator by a yield in its body.</Description>
        <HelpText>Used when the special class method __init__ is turned into a generator by a yield in its body.</HelpText>
        <WarningText>__init__ method is a generator</WarningText>
      </Language>
      <Baselines/>
      <Settings>
        <Setting name = "Priority" editable = "true">Critical</Setting>
      </Settings>
      <Calculated/>
    </Configuration>
  </Metric>
  <Metric id = "PYLINT_IINC">
    <Configuration name = "Default">
      <Enabled>true</Enabled>
      <Visible>true</Visible>
      <Group>false</Group>
      <OriginalId>interface-is-not-class</OriginalId>
      <GroupMember>Class Rules</GroupMember>
      <Language lang = "eng">
        <Warning>true</Warning>
        <DisplayName>Interface Is Not Class</DisplayName>
        <Description>Used when a class claims to implement an interface which is not a class.</Description>
        <HelpText>Used when a class claims to implement an interface which is not a class.</HelpText>
        <WarningText>Interface resolved to %s is not a class</WarningText>
      </Language>
      <Baselines/>
      <Settings>
        <Setting name = "Priority" editable = "true">Critical</Setting>
      </Settings>
      <Calculated/>
    </Configuration>
  </Metric>
  <Metric id = "PYLINT_IME">
    <Configuration name = "Default">
      <Enabled>true</Enabled>
      <Visible>true</Visible>
      <Group>false</Group>
      <OriginalId>implicit-map-evaluation</OriginalId>
      <GroupMember>Python3 Rules</GroupMember>
      <Language lang = "eng">
        <Warning>true</Warning>
        <DisplayName>Implicit Map Evaluation</DisplayName>
        <Description>Used when the map builtin is used as implicitly evaluated call, as in &quot;map(func, args)&quot; on a single line. This behaviour will not work in Python 3, where map is a generator and must be evaluated. Prefer a for-loop as alternative. This message can&apos;t be emitted when using Python &gt;= 3.0.</Description>
        <HelpText>Used when the map builtin is used as implicitly evaluated call, as in &quot;map(func, args)&quot; on a single line. This behaviour will not work in Python 3, where map is a generator and must be evaluated. Prefer a for-loop as alternative. This message can&apos;t be emitted when using Python &gt;= 3.0.</HelpText>
        <WarningText>map is used as implicitly evaluated call</WarningText>
      </Language>
      <Baselines/>
      <Settings>
        <Setting name = "Priority" editable = "true">Major</Setting>
      </Settings>
      <Calculated/>
    </Configuration>
  </Metric>
  <Metric id = "PYLINT_IN">
    <Configuration name = "Default">
      <Enabled>true</Enabled>
      <Visible>true</Visible>
      <Group>false</Group>
      <OriginalId>invalid-name</OriginalId>
      <GroupMember>Basic Rules</GroupMember>
      <Language lang = "eng">
        <Warning>true</Warning>
        <DisplayName>Invalid Name</DisplayName>
        <Description>Used when the name doesn&apos;t match the regular expression associated to its type (constant, variable, class...).</Description>
        <HelpText>Used when the name doesn&apos;t match the regular expression associated to its type (constant, variable, class...).</HelpText>
        <WarningText>Invalid %s name &quot;%s&quot;%s</WarningText>
      </Language>
      <Baselines/>
      <Settings>
        <Setting name = "Priority" editable = "true">Minor</Setting>
      </Settings>
      <Calculated/>
    </Configuration>
  </Metric>
  <Metric id = "PYLINT_INC">
    <Configuration name = "Default">
      <Enabled>true</Enabled>
      <Visible>true</Visible>
      <Group>false</Group>
      <OriginalId>inherit-non-class</OriginalId>
      <GroupMember>Class Rules</GroupMember>
      <Language lang = "eng">
        <Warning>true</Warning>
        <DisplayName>Inherit Non Class</DisplayName>
        <Description>Used when a class inherits from something which is not a class.</Description>
        <HelpText>Used when a class inherits from something which is not a class.</HelpText>
        <WarningText>Inheriting %r, which is not a class.</WarningText>
      </Language>
      <Baselines/>
      <Settings>
        <Setting name = "Priority" editable = "true">Critical</Setting>
      </Settings>
      <Calculated/>
    </Configuration>
  </Metric>
  <Metric id = "PYLINT_INI">
    <Configuration name = "Default">
      <Enabled>true</Enabled>
      <Visible>true</Visible>
      <Group>false</Group>
      <OriginalId>interface-not-implemented</OriginalId>
      <GroupMember>Design Rules</GroupMember>
      <Language lang = "eng">
        <Warning>true</Warning>
        <DisplayName>Interface Not Implemented</DisplayName>
        <Description>Used when an interface class is not implemented anywhere.</Description>
        <HelpText>Used when an interface class is not implemented anywhere.</HelpText>
        <WarningText>Interface not implemented</WarningText>
      </Language>
      <Baselines/>
      <Settings>
        <Setting name = "Priority" editable = "true">Minor</Setting>
      </Settings>
      <Calculated/>
    </Configuration>
  </Metric>
  <Metric id = "PYLINT_IS">
    <Configuration name = "Default">
      <Enabled>true</Enabled>
      <Visible>true</Visible>
      <Group>false</Group>
      <OriginalId>import-self</OriginalId>
      <GroupMember>Import Rules</GroupMember>
      <Language lang = "eng">
        <Warning>true</Warning>
        <DisplayName>Import Self</DisplayName>
        <Description>Used when a module is importing itself.</Description>
        <HelpText>Used when a module is importing itself.</HelpText>
        <WarningText>Module import itself</WarningText>
      </Language>
      <Baselines/>
      <Settings>
        <Setting name = "Priority" editable = "true">Major</Setting>
      </Settings>
      <Calculated/>
    </Configuration>
  </Metric>
  <Metric id = "PYLINT_ISI">
    <Configuration name = "Default">
      <Enabled>true</Enabled>
      <Visible>true</Visible>
      <Group>false</Group>
      <OriginalId>invalid-sequence-index</OriginalId>
      <GroupMember>Typecheck Rules</GroupMember>
      <Language lang = "eng">
        <Warning>true</Warning>
        <DisplayName>Invalid Sequence Index</DisplayName>
        <Description>Used when a sequence type is indexed with an invalid type. Valid types are ints, slices, and objects with an __index__ method.</Description>
        <HelpText>Used when a sequence type is indexed with an invalid type. Valid types are ints, slices, and objects with an __index__ method.</HelpText>
        <WarningText>Sequence index is not an int, slice, or instance with __index__</WarningText>
      </Language>
      <Baselines/>
      <Settings>
        <Setting name = "Priority" editable = "true">Critical</Setting>
      </Settings>
      <Calculated/>
    </Configuration>
  </Metric>
  <Metric id = "PYLINT_ISO">
    <Configuration name = "Default">
      <Enabled>true</Enabled>
      <Visible>true</Visible>
      <Group>false</Group>
      <OriginalId>invalid-slots-object</OriginalId>
      <GroupMember>Class Rules</GroupMember>
      <Language lang = "eng">
        <Warning>true</Warning>
        <DisplayName>Invalid Slots Object</DisplayName>
        <Description>Used when an invalid (non-string) object occurs in __slots__.</Description>
        <HelpText>Used when an invalid (non-string) object occurs in __slots__.</HelpText>
        <WarningText>Invalid object %r in __slots__, must contain only non empty strings</WarningText>
      </Language>
      <Baselines/>
      <Settings>
        <Setting name = "Priority" editable = "true">Critical</Setting>
      </Settings>
      <Calculated/>
    </Configuration>
  </Metric>
  <Metric id = "PYLINT_InE">
    <Configuration name = "Default">
      <Enabled>true</Enabled>
      <Visible>true</Visible>
      <Group>false</Group>
      <OriginalId>indexing-exception</OriginalId>
      <GroupMember>Python3 Rules</GroupMember>
      <Language lang = "eng">
        <Warning>true</Warning>
        <DisplayName>Indexing Exception</DisplayName>
        <Description>Indexing exceptions will not work on Python 3. Use `exception.args[index]` instead. This message can&apos;t be emitted when using Python &gt;= 3.0.</Description>
        <HelpText>Indexing exceptions will not work on Python 3. Use `exception.args[index]` instead. This message can&apos;t be emitted when using Python &gt;= 3.0.</HelpText>
        <WarningText>Indexing exceptions will not work on Python 3</WarningText>
      </Language>
      <Baselines/>
      <Settings>
        <Setting name = "Priority" editable = "true">Major</Setting>
      </Settings>
      <Calculated/>
    </Configuration>
  </Metric>
  <Metric id = "PYLINT_InS">
    <Configuration name = "Default">
      <Enabled>true</Enabled>
      <Visible>true</Visible>
      <Group>false</Group>
      <OriginalId>invalid-slots</OriginalId>
      <GroupMember>Class Rules</GroupMember>
      <Language lang = "eng">
        <Warning>true</Warning>
        <DisplayName>Invalid Slots</DisplayName>
        <Description>Used when an invalid __slots__ is found in class. Only a string, an iterable or a sequence is permitted.</Description>
        <HelpText>Used when an invalid __slots__ is found in class. Only a string, an iterable or a sequence is permitted.</HelpText>
        <WarningText>Invalid __slots__ object</WarningText>
      </Language>
      <Baselines/>
      <Settings>
        <Setting name = "Priority" editable = "true">Critical</Setting>
      </Settings>
      <Calculated/>
    </Configuration>
  </Metric>
  <Metric id = "PYLINT_InSI">
    <Configuration name = "Default">
      <Enabled>true</Enabled>
      <Visible>true</Visible>
      <Group>false</Group>
      <OriginalId>invalid-slice-index</OriginalId>
      <GroupMember>Typecheck Rules</GroupMember>
      <Language lang = "eng">
        <Warning>true</Warning>
        <DisplayName>Invalid Slice Index</DisplayName>
        <Description>Used when a slice index is not an integer, None, or an object with an __index__ method.</Description>
        <HelpText>Used when a slice index is not an integer, None, or an object with an __index__ method.</HelpText>
        <WarningText>Slice index is not an int, None, or instance with __index__</WarningText>
      </Language>
      <Baselines/>
      <Settings>
        <Setting name = "Priority" editable = "true">Critical</Setting>
      </Settings>
      <Calculated/>
    </Configuration>
  </Metric>
  <Metric id = "PYLINT_LB">
    <Configuration name = "Default">
      <Enabled>true</Enabled>
      <Visible>true</Visible>
      <Group>false</Group>
      <OriginalId>long-builtin</OriginalId>
      <GroupMember>Python3 Rules</GroupMember>
      <Language lang = "eng">
        <Warning>true</Warning>
        <DisplayName>Long Builtin</DisplayName>
        <Description>Used when the long built-in function is referenced (missing from Python 3) This message can&apos;t be emitted when using Python &gt;= 3.0.</Description>
        <HelpText>Used when the long built-in function is referenced (missing from Python 3) This message can&apos;t be emitted when using Python &gt;= 3.0.</HelpText>
        <WarningText>long built-in referenced</WarningText>
      </Language>
      <Baselines/>
      <Settings>
        <Setting name = "Priority" editable = "true">Major</Setting>
      </Settings>
      <Calculated/>
    </Configuration>
  </Metric>
  <Metric id = "PYLINT_LD">
    <Configuration name = "Default">
      <Enabled>false</Enabled>
      <Visible>true</Visible>
      <Group>false</Group>
      <OriginalId>locally-disabled</OriginalId>
      <GroupMember>Pylint Checker Rules</GroupMember>
      <Language lang = "eng">
        <Warning>true</Warning>
        <DisplayName>Locally Disabled</DisplayName>
        <Description>Used when an inline option disables a message or a messages category.</Description>
        <HelpText>Used when an inline option disables a message or a messages category.</HelpText>
        <WarningText>Locally disabling %s (%s)</WarningText>
      </Language>
      <Baselines/>
      <Settings>
        <Setting name = "Priority" editable = "true">Minor</Setting>
      </Settings>
      <Calculated/>
    </Configuration>
  </Metric>
  <Metric id = "PYLINT_LE">
    <Configuration name = "Default">
      <Enabled>false</Enabled>
      <Visible>true</Visible>
      <Group>false</Group>
      <OriginalId>locally-enabled</OriginalId>
      <GroupMember>Pylint Checker Rules</GroupMember>
      <Language lang = "eng">
        <Warning>true</Warning>
        <DisplayName>Locally Enabled</DisplayName>
        <Description>Used when an inline option enables a message or a messages category.</Description>
        <HelpText>Used when an inline option enables a message or a messages category.</HelpText>
        <WarningText>Locally enabling %s (%s)</WarningText>
      </Language>
      <Baselines/>
      <Settings>
        <Setting name = "Priority" editable = "true">Minor</Setting>
      </Settings>
      <Calculated/>
    </Configuration>
  </Metric>
  <Metric id = "PYLINT_LFI">
    <Configuration name = "Default">
      <Enabled>true</Enabled>
      <Visible>true</Visible>
      <Group>false</Group>
      <OriginalId>logging-format-interpolation</OriginalId>
      <GroupMember>Logging Rules</GroupMember>
      <Language lang = "eng">
        <Warning>true</Warning>
        <DisplayName>Logging Format Interpolation</DisplayName>
        <Description>Used when a logging statement has a call form of &quot;logging.&lt;logging method&gt;(format_string.format(format_args...))&quot;. Such calls should use % formatting instead, but leave interpolation to the logging function by passing the parameters as arguments.</Description>
        <HelpText>Used when a logging statement has a call form of &quot;logging.&lt;logging method&gt;(format_string.format(format_args...))&quot;. Such calls should use % formatting instead, but leave interpolation to the logging function by passing the parameters as arguments.</HelpText>
        <WarningText>Use % formatting in logging functions but pass the % parameters as arguments</WarningText>
      </Language>
      <Baselines/>
      <Settings>
        <Setting name = "Priority" editable = "true">Major</Setting>
      </Settings>
      <Calculated/>
    </Configuration>
  </Metric>
  <Metric id = "PYLINT_LFT">
    <Configuration name = "Default">
      <Enabled>true</Enabled>
      <Visible>true</Visible>
      <Group>false</Group>
      <OriginalId>logging-format-truncated</OriginalId>
      <GroupMember>Logging Rules</GroupMember>
      <Language lang = "eng">
        <Warning>true</Warning>
        <DisplayName>Logging Format Truncated</DisplayName>
        <Description>Used when a logging statement format string terminates before the end of a conversion specifier.</Description>
        <HelpText>Used when a logging statement format string terminates before the end of a conversion specifier.</HelpText>
        <WarningText>Logging format string ends in middle of conversion specifier</WarningText>
      </Language>
      <Baselines/>
      <Settings>
        <Setting name = "Priority" editable = "true">Critical</Setting>
      </Settings>
      <Calculated/>
    </Configuration>
  </Metric>
  <Metric id = "PYLINT_LLS">
    <Configuration name = "Default">
      <Enabled>true</Enabled>
      <Visible>true</Visible>
      <Group>false</Group>
      <OriginalId>lowercase-l-suffix</OriginalId>
      <GroupMember>Format Rules</GroupMember>
      <Language lang = "eng">
        <Warning>true</Warning>
        <DisplayName>Lowercase L Suffix</DisplayName>
        <Description>Used when a lower case &quot;l&quot; is used to mark a long integer. You should use a upper case &quot;L&quot; since the letter &quot;l&quot; looks too much like the digit &quot;1&quot; This message can&apos;t be emitted when using Python &gt;= 3.0.</Description>
        <HelpText>Used when a lower case &quot;l&quot; is used to mark a long integer. You should use a upper case &quot;L&quot; since the letter &quot;l&quot; looks too much like the digit &quot;1&quot; This message can&apos;t be emitted when using Python &gt;= 3.0.</HelpText>
        <WarningText>Use of &quot;l&quot; as long integer identifier</WarningText>
      </Language>
      <Baselines/>
      <Settings>
        <Setting name = "Priority" editable = "true">Major</Setting>
      </Settings>
      <Calculated/>
    </Configuration>
  </Metric>
  <Metric id = "PYLINT_LNL">
    <Configuration name = "Default">
      <Enabled>true</Enabled>
      <Visible>true</Visible>
      <Group>false</Group>
      <OriginalId>logging-not-lazy</OriginalId>
      <GroupMember>Logging Rules</GroupMember>
      <Language lang = "eng">
        <Warning>true</Warning>
        <DisplayName>Logging Not Lazy</DisplayName>
        <Description>Used when a logging statement has a call form of &quot;logging.&lt;logging method&gt;(format_string % (format_args...))&quot;. Such calls should leave string interpolation to the logging method itself and be written &quot;logging.&lt;logging method&gt;(format_string, format_args...)&quot; so that the program may avoid incurring the cost of the interpolation in those cases in which no message will be logged. For more, see http://www.python.org/dev/peps/pep-0282/.</Description>
        <HelpText>Used when a logging statement has a call form of &quot;logging.&lt;logging method&gt;(format_string % (format_args...))&quot;. Such calls should leave string interpolation to the logging method itself and be written &quot;logging.&lt;logging method&gt;(format_string, format_args...)&quot; so that the program may avoid incurring the cost of the interpolation in those cases in which no message will be logged. For more, see http://www.python.org/dev/peps/pep-0282/.</HelpText>
        <WarningText>Specify string format arguments as logging function parameters</WarningText>
      </Language>
      <Baselines/>
      <Settings>
        <Setting name = "Priority" editable = "true">Major</Setting>
      </Settings>
      <Calculated/>
    </Configuration>
  </Metric>
  <Metric id = "PYLINT_LS">
    <Configuration name = "Default">
      <Enabled>true</Enabled>
      <Visible>true</Visible>
      <Group>false</Group>
      <OriginalId>long-suffix</OriginalId>
      <GroupMember>Python3 Rules</GroupMember>
      <Language lang = "eng">
        <Warning>true</Warning>
        <DisplayName>Long Suffix</DisplayName>
        <Description>Used when &quot;l&quot; or &quot;L&quot; is used to mark a long integer. This will not work in Python 3, since `int` and `long` types have merged. This message can&apos;t be emitted when using Python &gt;= 3.0.</Description>
        <HelpText>Used when &quot;l&quot; or &quot;L&quot; is used to mark a long integer. This will not work in Python 3, since `int` and `long` types have merged. This message can&apos;t be emitted when using Python &gt;= 3.0.</HelpText>
        <WarningText>Use of long suffix</WarningText>
      </Language>
      <Baselines/>
      <Settings>
        <Setting name = "Priority" editable = "true">Critical</Setting>
      </Settings>
      <Calculated/>
    </Configuration>
  </Metric>
  <Metric id = "PYLINT_LTFA">
    <Configuration name = "Default">
      <Enabled>true</Enabled>
      <Visible>true</Visible>
      <Group>false</Group>
      <OriginalId>logging-too-few-args</OriginalId>
      <GroupMember>Logging Rules</GroupMember>
      <Language lang = "eng">
        <Warning>true</Warning>
        <DisplayName>Logging Too Few Args</DisplayName>
        <Description>Used when a logging format string is given too many arguments</Description>
        <HelpText>Used when a logging format string is given too many arguments</HelpText>
        <WarningText>Not enough arguments for logging format string</WarningText>
      </Language>
      <Baselines/>
      <Settings>
        <Setting name = "Priority" editable = "true">Critical</Setting>
      </Settings>
      <Calculated/>
    </Configuration>
  </Metric>
  <Metric id = "PYLINT_LTL">
    <Configuration name = "Default">
      <Enabled>true</Enabled>
      <Visible>true</Visible>
      <Group>false</Group>
      <OriginalId>line-too-long</OriginalId>
      <GroupMember>Format Rules</GroupMember>
      <Language lang = "eng">
        <Warning>true</Warning>
        <DisplayName>Line Too Long</DisplayName>
        <Description>Used when a line is longer than a given number of characters.</Description>
        <HelpText>Used when a line is longer than a given number of characters.</HelpText>
        <WarningText>Line too long (%s/%s)</WarningText>
      </Language>
      <Baselines/>
      <Settings>
        <Setting name = "Priority" editable = "true">Minor</Setting>
      </Settings>
      <Calculated/>
    </Configuration>
  </Metric>
  <Metric id = "PYLINT_LTMA">
    <Configuration name = "Default">
      <Enabled>true</Enabled>
      <Visible>true</Visible>
      <Group>false</Group>
      <OriginalId>logging-too-many-args</OriginalId>
      <GroupMember>Logging Rules</GroupMember>
      <Language lang = "eng">
        <Warning>true</Warning>
        <DisplayName>Logging Too Many Args</DisplayName>
        <Description>Used when a logging format string is given too few arguments.</Description>
        <HelpText>Used when a logging format string is given too few arguments.</HelpText>
        <WarningText>Too many arguments for logging format string</WarningText>
      </Language>
      <Baselines/>
      <Settings>
        <Setting name = "Priority" editable = "true">Critical</Setting>
      </Settings>
      <Calculated/>
    </Configuration>
  </Metric>
  <Metric id = "PYLINT_LUF">
    <Configuration name = "Default">
      <Enabled>true</Enabled>
      <Visible>true</Visible>
      <Group>false</Group>
      <OriginalId>logging-unsupported-format</OriginalId>
      <GroupMember>Logging Rules</GroupMember>
      <Language lang = "eng">
        <Warning>true</Warning>
        <DisplayName>Logging Unsupported Format</DisplayName>
        <Description>Used when an unsupported format character is used in a logging statement format string.</Description>
        <HelpText>Used when an unsupported format character is used in a logging statement format string.</HelpText>
        <WarningText>Unsupported logging format character %r (%#02x) at index %d</WarningText>
      </Language>
      <Baselines/>
      <Settings>
        <Setting name = "Priority" editable = "true">Critical</Setting>
      </Settings>
      <Calculated/>
    </Configuration>
  </Metric>
  <Metric id = "PYLINT_LoE">
    <Configuration name = "Default">
      <Enabled>true</Enabled>
      <Visible>true</Visible>
      <Group>false</Group>
      <OriginalId>lost-exception</OriginalId>
      <GroupMember>Basic Rules</GroupMember>
      <Language lang = "eng">
        <Warning>true</Warning>
        <DisplayName>Lost Exception</DisplayName>
        <Description>Used when a break or a return statement is found inside the finally clause of a try...finally block: the exceptions raised in the try clause will be silently swallowed instead of being re-raised.</Description>
        <HelpText>Used when a break or a return statement is found inside the finally clause of a try...finally block: the exceptions raised in the try clause will be silently swallowed instead of being re-raised.</HelpText>
        <WarningText>%s statement in finally block may swallow exception</WarningText>
      </Language>
      <Baselines/>
      <Settings>
        <Setting name = "Priority" editable = "true">Major</Setting>
      </Settings>
      <Calculated/>
    </Configuration>
  </Metric>
  <Metric id = "PYLINT_MA">
    <Configuration name = "Default">
      <Enabled>true</Enabled>
      <Visible>true</Visible>
      <Group>false</Group>
      <OriginalId>metaclass-assignment</OriginalId>
      <GroupMember>Python3 Rules</GroupMember>
      <Language lang = "eng">
        <Warning>true</Warning>
        <DisplayName>Metaclass Assignment</DisplayName>
        <Description>Used when a metaclass is specified by assigning to __metaclass__ (Python 3 specifies the metaclass as a class statement argument) This message can&apos;t be emitted when using Python &gt;= 3.0.</Description>
        <HelpText>Used when a metaclass is specified by assigning to __metaclass__ (Python 3 specifies the metaclass as a class statement argument) This message can&apos;t be emitted when using Python &gt;= 3.0.</HelpText>
        <WarningText>Assigning to a class&apos; __metaclass__ attribute</WarningText>
      </Language>
      <Baselines/>
      <Settings>
        <Setting name = "Priority" editable = "true">Major</Setting>
      </Settings>
      <Calculated/>
    </Configuration>
  </Metric>
  <Metric id = "PYLINT_MCF">
    <Configuration name = "Default">
      <Enabled>false</Enabled>
      <Visible>true</Visible>
      <Group>false</Group>
      <OriginalId>method-check-failed</OriginalId>
      <GroupMember>Class Rules</GroupMember>
      <Language lang = "eng">
        <Warning>true</Warning>
        <DisplayName>Method Check Failed</DisplayName>
        <Description>Used when Pylint has been unable to check methods signature compatibility for an unexpected reason. Please report this kind if you don&apos;t make sense of it.</Description>
        <HelpText>Used when Pylint has been unable to check methods signature compatibility for an unexpected reason. Please report this kind if you don&apos;t make sense of it.</HelpText>
        <WarningText>Unable to check methods signature (%s / %s)</WarningText>
      </Language>
      <Baselines/>
      <Settings>
        <Setting name = "Priority" editable = "true">Blocker</Setting>
      </Settings>
      <Calculated/>
    </Configuration>
  </Metric>
  <Metric id = "PYLINT_MD">
    <Configuration name = "Default">
      <Enabled>true</Enabled>
      <Visible>true</Visible>
      <Group>false</Group>
      <OriginalId>missing-docstring</OriginalId>
      <GroupMember>Basic Rules</GroupMember>
      <Language lang = "eng">
        <Warning>true</Warning>
        <DisplayName>Missing Docstring</DisplayName>
        <Description>Used when a module, function, class or method has no docstring.Some special methods like __init__ doesn&apos;t necessary require a docstring.</Description>
        <HelpText>Used when a module, function, class or method has no docstring.Some special methods like __init__ doesn&apos;t necessary require a docstring.</HelpText>
        <WarningText>Missing %s docstring</WarningText>
      </Language>
      <Baselines/>
      <Settings>
        <Setting name = "Priority" editable = "true">Minor</Setting>
      </Settings>
      <Calculated/>
    </Configuration>
  </Metric>
  <Metric id = "PYLINT_MF">
    <Configuration name = "Default">
      <Enabled>true</Enabled>
      <Visible>true</Visible>
      <Group>false</Group>
      <OriginalId>misplaced-future</OriginalId>
      <GroupMember>Import Rules</GroupMember>
      <Language lang = "eng">
        <Warning>true</Warning>
        <DisplayName>Misplaced Future</DisplayName>
        <Description>Python 2.5 and greater require __future__ import to be the first non docstring statement in the module. This message can&apos;t be emitted when using Python &gt;= 3.0.</Description>
        <HelpText>Python 2.5 and greater require __future__ import to be the first non docstring statement in the module. This message can&apos;t be emitted when using Python &gt;= 3.0.</HelpText>
        <WarningText>__future__ import is not the first non docstring statement</WarningText>
      </Language>
      <Baselines/>
      <Settings>
        <Setting name = "Priority" editable = "true">Major</Setting>
      </Settings>
      <Calculated/>
    </Configuration>
  </Metric>
  <Metric id = "PYLINT_MFA">
    <Configuration name = "Default">
      <Enabled>true</Enabled>
      <Visible>true</Visible>
      <Group>false</Group>
      <OriginalId>missing-format-attribute</OriginalId>
      <GroupMember>String Rules</GroupMember>
      <Language lang = "eng">
        <Warning>true</Warning>
        <DisplayName>Missing Format Attribute</DisplayName>
        <Description>Used when a PEP 3101 format string uses an attribute specifier ({0.length}), but the argument passed for formatting doesn&apos;t have that attribute. This message can&apos;t be emitted when using Python &lt; 2.7.</Description>
        <HelpText>Used when a PEP 3101 format string uses an attribute specifier ({0.length}), but the argument passed for formatting doesn&apos;t have that attribute. This message can&apos;t be emitted when using Python &lt; 2.7.</HelpText>
        <WarningText>Missing format attribute %r in format specifier %r</WarningText>
      </Language>
      <Baselines/>
      <Settings>
        <Setting name = "Priority" editable = "true">Major</Setting>
      </Settings>
      <Calculated/>
    </Configuration>
  </Metric>
  <Metric id = "PYLINT_MFAK">
    <Configuration name = "Default">
      <Enabled>true</Enabled>
      <Visible>true</Visible>
      <Group>false</Group>
      <OriginalId>missing-format-argument-key</OriginalId>
      <GroupMember>String Rules</GroupMember>
      <Language lang = "eng">
        <Warning>true</Warning>
        <DisplayName>Missing Format Argument Key</DisplayName>
        <Description>Used when a PEP 3101 format string that uses named fields doesn&apos;t receive one or more required keywords. This message can&apos;t be emitted when using Python &lt; 2.7.</Description>
        <HelpText>Used when a PEP 3101 format string that uses named fields doesn&apos;t receive one or more required keywords. This message can&apos;t be emitted when using Python &lt; 2.7.</HelpText>
        <WarningText>Missing keyword argument %r for format string</WarningText>
      </Language>
      <Baselines/>
      <Settings>
        <Setting name = "Priority" editable = "true">Major</Setting>
      </Settings>
      <Calculated/>
    </Configuration>
  </Metric>
  <Metric id = "PYLINT_MFN">
    <Configuration name = "Default">
      <Enabled>true</Enabled>
      <Visible>true</Visible>
      <Group>false</Group>
      <OriginalId>missing-final-newline</OriginalId>
      <GroupMember>Format Rules</GroupMember>
      <Language lang = "eng">
        <Warning>true</Warning>
        <DisplayName>Missing Final Newline</DisplayName>
        <Description>Used when the last line in a file is missing a newline.</Description>
        <HelpText>Used when the last line in a file is missing a newline.</HelpText>
        <WarningText>Final newline missing</WarningText>
      </Language>
      <Baselines/>
      <Settings>
        <Setting name = "Priority" editable = "true">Minor</Setting>
      </Settings>
      <Calculated/>
    </Configuration>
  </Metric>
  <Metric id = "PYLINT_MFS">
    <Configuration name = "Default">
      <Enabled>true</Enabled>
      <Visible>true</Visible>
      <Group>false</Group>
      <OriginalId>mixed-format-string</OriginalId>
      <GroupMember>String Rules</GroupMember>
      <Language lang = "eng">
        <Warning>true</Warning>
        <DisplayName>Mixed Format String</DisplayName>
        <Description>Used when a format string contains both named (e.g. &apos;%(foo)d&apos;) and unnamed (e.g. &apos;%d&apos;) conversion specifiers. This is also used when a named conversion specifier contains * for the minimum field width and/or precision.</Description>
        <HelpText>Used when a format string contains both named (e.g. &apos;%(foo)d&apos;) and unnamed (e.g. &apos;%d&apos;) conversion specifiers. This is also used when a named conversion specifier contains * for the minimum field width and/or precision.</HelpText>
        <WarningText>Mixing named and unnamed conversion specifiers in format string</WarningText>
      </Language>
      <Baselines/>
      <Settings>
        <Setting name = "Priority" editable = "true">Critical</Setting>
      </Settings>
      <Calculated/>
    </Configuration>
  </Metric>
  <Metric id = "PYLINT_MFSK">
    <Configuration name = "Default">
      <Enabled>true</Enabled>
      <Visible>true</Visible>
      <Group>false</Group>
      <OriginalId>missing-format-string-key</OriginalId>
      <GroupMember>String Rules</GroupMember>
      <Language lang = "eng">
        <Warning>true</Warning>
        <DisplayName>Missing Format String Key</DisplayName>
        <Description>Used when a format string that uses named conversion specifiers is used with a dictionary that doesn&apos;t contain all the keys required by the format string.</Description>
        <HelpText>Used when a format string that uses named conversion specifiers is used with a dictionary that doesn&apos;t contain all the keys required by the format string.</HelpText>
        <WarningText>Missing key %r in format string dictionary</WarningText>
      </Language>
      <Baselines/>
      <Settings>
        <Setting name = "Priority" editable = "true">Critical</Setting>
      </Settings>
      <Calculated/>
    </Configuration>
  </Metric>
  <Metric id = "PYLINT_MH">
    <Configuration name = "Default">
      <Enabled>true</Enabled>
      <Visible>true</Visible>
      <Group>false</Group>
      <OriginalId>method-hidden</OriginalId>
      <GroupMember>Class Rules</GroupMember>
      <Language lang = "eng">
        <Warning>true</Warning>
        <DisplayName>Method Hidden</DisplayName>
        <Description>Used when a class defines a method which is hidden by an instance attribute from an ancestor class or set by some client code.</Description>
        <HelpText>Used when a class defines a method which is hidden by an instance attribute from an ancestor class or set by some client code.</HelpText>
        <WarningText>An attribute defined in %s line %s hides this method</WarningText>
      </Language>
      <Baselines/>
      <Settings>
        <Setting name = "Priority" editable = "true">Critical</Setting>
      </Settings>
      <Calculated/>
    </Configuration>
  </Metric>
  <Metric id = "PYLINT_MI">
    <Configuration name = "Default">
      <Enabled>true</Enabled>
      <Visible>true</Visible>
      <Group>false</Group>
      <OriginalId>mixed-indentation</OriginalId>
      <GroupMember>Format Rules</GroupMember>
      <Language lang = "eng">
        <Warning>true</Warning>
        <DisplayName>Mixed Indentation</DisplayName>
        <Description>Used when there are some mixed tabs and spaces in a module.</Description>
        <HelpText>Used when there are some mixed tabs and spaces in a module.</HelpText>
        <WarningText>Found indentation with %ss instead of %ss</WarningText>
      </Language>
      <Baselines/>
      <Settings>
        <Setting name = "Priority" editable = "true">Major</Setting>
      </Settings>
      <Calculated/>
    </Configuration>
  </Metric>
  <Metric id = "PYLINT_MIM">
    <Configuration name = "Default">
      <Enabled>true</Enabled>
      <Visible>true</Visible>
      <Group>false</Group>
      <OriginalId>missing-interface-method</OriginalId>
      <GroupMember>Class Rules</GroupMember>
      <Language lang = "eng">
        <Warning>true</Warning>
        <DisplayName>Missing Interface Method</DisplayName>
        <Description>Used when a method declared in an interface is missing from a class implementing this interface</Description>
        <HelpText>Used when a method declared in an interface is missing from a class implementing this interface</HelpText>
        <WarningText>Missing method %r from %s interface</WarningText>
      </Language>
      <Baselines/>
      <Settings>
        <Setting name = "Priority" editable = "true">Critical</Setting>
      </Settings>
      <Calculated/>
    </Configuration>
  </Metric>
  <Metric id = "PYLINT_MK">
    <Configuration name = "Default">
      <Enabled>true</Enabled>
      <Visible>true</Visible>
      <Group>false</Group>
      <OriginalId>missing-kwoa</OriginalId>
      <GroupMember>Typecheck Rules</GroupMember>
      <Language lang = "eng">
        <Warning>true</Warning>
        <DisplayName>Missing Kwoa</DisplayName>
        <Description>Used when a function call does not pass a mandatory keyword-only argument. This message can&apos;t be emitted when using Python &lt; 3.0.</Description>
        <HelpText>Used when a function call does not pass a mandatory keyword-only argument. This message can&apos;t be emitted when using Python &lt; 3.0.</HelpText>
        <WarningText>Missing mandatory keyword argument %r in %s call</WarningText>
      </Language>
      <Baselines/>
      <Settings>
        <Setting name = "Priority" editable = "true">Critical</Setting>
      </Settings>
      <Calculated/>
    </Configuration>
  </Metric>
  <Metric id = "PYLINT_MLE">
    <Configuration name = "Default">
      <Enabled>true</Enabled>
      <Visible>true</Visible>
      <Group>false</Group>
      <OriginalId>mixed-line-endings</OriginalId>
      <GroupMember>Format Rules</GroupMember>
      <Language lang = "eng">
        <Warning>true</Warning>
        <DisplayName>Mixed Line Endings</DisplayName>
        <Description>Used when there are mixed (LF and CRLF) newline signs in a file.</Description>
        <HelpText>Used when there are mixed (LF and CRLF) newline signs in a file.</HelpText>
        <WarningText>Mixed line endings LF and CRLF</WarningText>
      </Language>
      <Baselines/>
      <Settings>
        <Setting name = "Priority" editable = "true">Minor</Setting>
      </Settings>
      <Calculated/>
    </Configuration>
  </Metric>
  <Metric id = "PYLINT_MMA">
    <Configuration name = "Default">
      <Enabled>true</Enabled>
      <Visible>true</Visible>
      <Group>false</Group>
      <OriginalId>missing-module-attribute</OriginalId>
      <GroupMember>Basic Rules</GroupMember>
      <Language lang = "eng">
        <Warning>true</Warning>
        <DisplayName>Missing Module Attribute</DisplayName>
        <Description>Used when an attribute required for modules is missing.</Description>
        <HelpText>Used when an attribute required for modules is missing.</HelpText>
        <WarningText>Missing required attribute &quot;%s&quot;</WarningText>
      </Language>
      <Baselines/>
      <Settings>
        <Setting name = "Priority" editable = "true">Minor</Setting>
      </Settings>
      <Calculated/>
    </Configuration>
  </Metric>
  <Metric id = "PYLINT_MRA">
    <Configuration name = "Default">
      <Enabled>true</Enabled>
      <Visible>true</Visible>
      <Group>false</Group>
      <OriginalId>missing-reversed-argument</OriginalId>
      <GroupMember>Basic Rules</GroupMember>
      <Language lang = "eng">
        <Warning>true</Warning>
        <DisplayName>Missing Reversed Argument</DisplayName>
        <Description>Used when reversed() builtin didn&apos;t receive an argument.</Description>
        <HelpText>Used when reversed() builtin didn&apos;t receive an argument.</HelpText>
        <WarningText>Missing argument to reversed()</WarningText>
      </Language>
      <Baselines/>
      <Settings>
        <Setting name = "Priority" editable = "true">Critical</Setting>
      </Settings>
      <Calculated/>
    </Configuration>
  </Metric>
  <Metric id = "PYLINT_MS">
    <Configuration name = "Default">
      <Enabled>true</Enabled>
      <Visible>true</Visible>
      <Group>false</Group>
      <OriginalId>multiple-statements</OriginalId>
      <GroupMember>Format Rules</GroupMember>
      <Language lang = "eng">
        <Warning>true</Warning>
        <DisplayName>Multiple Statements</DisplayName>
        <Description>Used when more than on statement are found on the same line.</Description>
        <HelpText>Used when more than on statement are found on the same line.</HelpText>
        <WarningText>More than one statement on a single line</WarningText>
      </Language>
      <Baselines/>
      <Settings>
        <Setting name = "Priority" editable = "true">Minor</Setting>
      </Settings>
      <Calculated/>
    </Configuration>
  </Metric>
  <Metric id = "PYLINT_MSA">
    <Configuration name = "Default">
      <Enabled>true</Enabled>
      <Visible>true</Visible>
      <Group>false</Group>
      <OriginalId>missing-super-argument</OriginalId>
      <GroupMember>Newstyle Rules</GroupMember>
      <Language lang = "eng">
        <Warning>true</Warning>
        <DisplayName>Missing Super Argument</DisplayName>
        <Description>Used when the super builtin didn&apos;t receive an argument. This message can&apos;t be emitted when using Python &gt;= 3.0.</Description>
        <HelpText>Used when the super builtin didn&apos;t receive an argument. This message can&apos;t be emitted when using Python &gt;= 3.0.</HelpText>
        <WarningText>Missing argument to super()</WarningText>
      </Language>
      <Baselines/>
      <Settings>
        <Setting name = "Priority" editable = "true">Critical</Setting>
      </Settings>
      <Calculated/>
    </Configuration>
  </Metric>
  <Metric id = "PYLINT_NAI">
    <Configuration name = "Default">
      <Enabled>true</Enabled>
      <Visible>true</Visible>
      <Group>false</Group>
      <OriginalId>no-absolute-import</OriginalId>
      <GroupMember>Python3 Rules</GroupMember>
      <Language lang = "eng">
        <Warning>true</Warning>
        <DisplayName>No Absolute Import</DisplayName>
        <Description>Used when an import is not accompanied by `from __future__ import absolute_import` (default behaviour in Python 3) This message can&apos;t be emitted when using Python &gt;= 3.0.</Description>
        <HelpText>Used when an import is not accompanied by `from __future__ import absolute_import` (default behaviour in Python 3) This message can&apos;t be emitted when using Python &gt;= 3.0.</HelpText>
        <WarningText>import missing `from __future__ import absolute_import`</WarningText>
      </Language>
      <Baselines/>
      <Settings>
        <Setting name = "Priority" editable = "true">Major</Setting>
      </Settings>
      <Calculated/>
    </Configuration>
  </Metric>
  <Metric id = "PYLINT_NC">
    <Configuration name = "Default">
      <Enabled>true</Enabled>
      <Visible>true</Visible>
      <Group>false</Group>
      <OriginalId>not-callable</OriginalId>
      <GroupMember>Typecheck Rules</GroupMember>
      <Language lang = "eng">
        <Warning>true</Warning>
        <DisplayName>Not Callable</DisplayName>
        <Description>Used when an object being called has been inferred to a non callable object</Description>
        <HelpText>Used when an object being called has been inferred to a non callable object</HelpText>
        <WarningText>%s is not callable</WarningText>
      </Language>
      <Baselines/>
      <Settings>
        <Setting name = "Priority" editable = "true">Critical</Setting>
      </Settings>
      <Calculated/>
    </Configuration>
  </Metric>
  <Metric id = "PYLINT_NE">
    <Configuration name = "Default">
      <Enabled>true</Enabled>
      <Visible>true</Visible>
      <Group>false</Group>
      <OriginalId>nonstandard-exception</OriginalId>
      <GroupMember>Exception Rules</GroupMember>
      <Language lang = "eng">
        <Warning>true</Warning>
        <DisplayName>Nonstandard Exception</DisplayName>
        <Description>Used when a custom exception class is raised but doesn&apos;t inherit from the builtin &quot;Exception&quot; class. This message can&apos;t be emitted when using Python &gt;= 3.0.</Description>
        <HelpText>Used when a custom exception class is raised but doesn&apos;t inherit from the builtin &quot;Exception&quot; class. This message can&apos;t be emitted when using Python &gt;= 3.0.</HelpText>
        <WarningText>Exception doesn&apos;t inherit from standard &quot;Exception&quot; class</WarningText>
      </Language>
      <Baselines/>
      <Settings>
        <Setting name = "Priority" editable = "true">Major</Setting>
      </Settings>
      <Calculated/>
    </Configuration>
  </Metric>
  <Metric id = "PYLINT_NI">
    <Configuration name = "Default">
      <Enabled>true</Enabled>
      <Visible>true</Visible>
      <Group>false</Group>
      <OriginalId>no-init</OriginalId>
      <GroupMember>Class Rules</GroupMember>
      <Language lang = "eng">
        <Warning>true</Warning>
        <DisplayName>No Init</DisplayName>
        <Description>Used when a class has no __init__ method, neither its parent classes.</Description>
        <HelpText>Used when a class has no __init__ method, neither its parent classes.</HelpText>
        <WarningText>Class has no __init__ method</WarningText>
      </Language>
      <Baselines/>
      <Settings>
        <Setting name = "Priority" editable = "true">Major</Setting>
      </Settings>
      <Calculated/>
    </Configuration>
  </Metric>
  <Metric id = "PYLINT_NIL">
    <Configuration name = "Default">
      <Enabled>true</Enabled>
      <Visible>true</Visible>
      <Group>false</Group>
      <OriginalId>not-in-loop</OriginalId>
      <GroupMember>Basic Rules</GroupMember>
      <Language lang = "eng">
        <Warning>true</Warning>
        <DisplayName>Not In Loop</DisplayName>
        <Description>Used when break or continue keywords are used outside a loop.</Description>
        <HelpText>Used when break or continue keywords are used outside a loop.</HelpText>
        <WarningText>%r not properly in loop</WarningText>
      </Language>
      <Baselines/>
      <Settings>
        <Setting name = "Priority" editable = "true">Critical</Setting>
      </Settings>
      <Calculated/>
    </Configuration>
  </Metric>
  <Metric id = "PYLINT_NIR">
    <Configuration name = "Default">
      <Enabled>true</Enabled>
      <Visible>true</Visible>
      <Group>false</Group>
      <OriginalId>non-iterator-returned</OriginalId>
      <GroupMember>Class Rules</GroupMember>
      <Language lang = "eng">
        <Warning>true</Warning>
        <DisplayName>Non Iterator Returned</DisplayName>
        <Description>Used when an __iter__ method returns something which is not an iterable (i.e. has no `next` method)</Description>
        <HelpText>Used when an __iter__ method returns something which is not an iterable (i.e. has no `next` method)</HelpText>
        <WarningText>__iter__ returns non-iterator</WarningText>
      </Language>
      <Baselines/>
      <Settings>
        <Setting name = "Priority" editable = "true">Major</Setting>
      </Settings>
      <Calculated/>
    </Configuration>
  </Metric>
  <Metric id = "PYLINT_NM">
    <Configuration name = "Default">
      <Enabled>true</Enabled>
      <Visible>true</Visible>
      <Group>false</Group>
      <OriginalId>no-member</OriginalId>
      <GroupMember>Typecheck Rules</GroupMember>
      <Language lang = "eng">
        <Warning>true</Warning>
        <DisplayName>No Member</DisplayName>
        <Description>Used when a variable is accessed for an unexistent member.</Description>
        <HelpText>Used when a variable is accessed for an unexistent member.</HelpText>
        <WarningText>%s %r has no %r member</WarningText>
      </Language>
      <Baselines/>
      <Settings>
        <Setting name = "Priority" editable = "true">Critical</Setting>
      </Settings>
      <Calculated/>
    </Configuration>
  </Metric>
  <Metric id = "PYLINT_NMA">
    <Configuration name = "Default">
      <Enabled>true</Enabled>
      <Visible>true</Visible>
      <Group>false</Group>
      <OriginalId>no-method-argument</OriginalId>
      <GroupMember>Class Rules</GroupMember>
      <Language lang = "eng">
        <Warning>true</Warning>
        <DisplayName>No Method Argument</DisplayName>
        <Description>Used when a method which should have the bound instance as first argument has no argument defined.</Description>
        <HelpText>Used when a method which should have the bound instance as first argument has no argument defined.</HelpText>
        <WarningText>Method has no argument</WarningText>
      </Language>
      <Baselines/>
      <Settings>
        <Setting name = "Priority" editable = "true">Critical</Setting>
      </Settings>
      <Calculated/>
    </Configuration>
  </Metric>
  <Metric id = "PYLINT_NMC">
    <Configuration name = "Default">
      <Enabled>true</Enabled>
      <Visible>true</Visible>
      <Group>false</Group>
      <OriginalId>next-method-called</OriginalId>
      <GroupMember>Python3 Rules</GroupMember>
      <Language lang = "eng">
        <Warning>true</Warning>
        <DisplayName>Next Method Called</DisplayName>
        <Description>Used when an object&apos;s next() method is called (Python 3 uses the next() built-in function) This message can&apos;t be emitted when using Python &gt;= 3.0.</Description>
        <HelpText>Used when an object&apos;s next() method is called (Python 3 uses the next() built-in function) This message can&apos;t be emitted when using Python &gt;= 3.0.</HelpText>
        <WarningText>Called a next() method on an object</WarningText>
      </Language>
      <Baselines/>
      <Settings>
        <Setting name = "Priority" editable = "true">Major</Setting>
      </Settings>
      <Calculated/>
    </Configuration>
  </Metric>
  <Metric id = "PYLINT_NNIM">
    <Configuration name = "Default">
      <Enabled>true</Enabled>
      <Visible>true</Visible>
      <Group>false</Group>
      <OriginalId>no-name-in-module</OriginalId>
      <GroupMember>Variable Rules</GroupMember>
      <Language lang = "eng">
        <Warning>true</Warning>
        <DisplayName>No Name In Module</DisplayName>
        <Description>Used when a name cannot be found in a module.</Description>
        <HelpText>Used when a name cannot be found in a module.</HelpText>
        <WarningText>No name %r in module %r</WarningText>
      </Language>
      <Baselines/>
      <Settings>
        <Setting name = "Priority" editable = "true">Critical</Setting>
      </Settings>
      <Calculated/>
    </Configuration>
  </Metric>
  <Metric id = "PYLINT_NO">
    <Configuration name = "Default">
      <Enabled>true</Enabled>
      <Visible>true</Visible>
      <Group>false</Group>
      <OriginalId>nonexistent-operator</OriginalId>
      <GroupMember>Basic Rules</GroupMember>
      <Language lang = "eng">
        <Warning>true</Warning>
        <DisplayName>Nonexistent Operator</DisplayName>
        <Description>Used when you attempt to use the C-style pre-increment orpre-decrement operator -- and ++, which doesn&apos;t exist in Python.</Description>
        <HelpText>Used when you attempt to use the C-style pre-increment orpre-decrement operator -- and ++, which doesn&apos;t exist in Python.</HelpText>
        <WarningText>Use of the non-existent %s operator</WarningText>
      </Language>
      <Baselines/>
      <Settings>
        <Setting name = "Priority" editable = "true">Critical</Setting>
      </Settings>
      <Calculated/>
    </Configuration>
  </Metric>
  <Metric id = "PYLINT_NPIC">
    <Configuration name = "Default">
      <Enabled>true</Enabled>
      <Visible>true</Visible>
      <Group>false</Group>
      <OriginalId>non-parent-init-called</OriginalId>
      <GroupMember>Class Rules</GroupMember>
      <Language lang = "eng">
        <Warning>true</Warning>
        <DisplayName>Non Parent Init Called</DisplayName>
        <Description>Used when an __init__ method is called on a class which is not in the direct ancestors for the analysed class.</Description>
        <HelpText>Used when an __init__ method is called on a class which is not in the direct ancestors for the analysed class.</HelpText>
        <WarningText>__init__ method from a non direct base class %r is called</WarningText>
      </Language>
      <Baselines/>
      <Settings>
        <Setting name = "Priority" editable = "true">Major</Setting>
      </Settings>
      <Calculated/>
    </Configuration>
  </Metric>
  <Metric id = "PYLINT_NR">
    <Configuration name = "Default">
      <Enabled>true</Enabled>
      <Visible>true</Visible>
      <Group>false</Group>
      <OriginalId>notimplemented-raised</OriginalId>
      <GroupMember>Exception Rules</GroupMember>
      <Language lang = "eng">
        <Warning>true</Warning>
        <DisplayName>Notimplemented Raised</DisplayName>
        <Description>Used when NotImplemented is raised instead of NotImplementedError</Description>
        <HelpText>Used when NotImplemented is raised instead of NotImplementedError</HelpText>
        <WarningText>NotImplemented raised - should raise NotImplementedError</WarningText>
      </Language>
      <Baselines/>
      <Settings>
        <Setting name = "Priority" editable = "true">Critical</Setting>
      </Settings>
      <Calculated/>
    </Configuration>
  </Metric>
  <Metric id = "PYLINT_NSA">
    <Configuration name = "Default">
      <Enabled>true</Enabled>
      <Visible>true</Visible>
      <Group>false</Group>
      <OriginalId>no-self-argument</OriginalId>
      <GroupMember>Class Rules</GroupMember>
      <Language lang = "eng">
        <Warning>true</Warning>
        <DisplayName>No Self Argument</DisplayName>
        <Description>Used when a method has an attribute different the &quot;self&quot; as first argument. This is considered as an error since this is a so common convention that you shouldn&apos;t break it!</Description>
        <HelpText>Used when a method has an attribute different the &quot;self&quot; as first argument. This is considered as an error since this is a so common convention that you shouldn&apos;t break it!</HelpText>
        <WarningText>Method should have &quot;self&quot; as first argument</WarningText>
      </Language>
      <Baselines/>
      <Settings>
        <Setting name = "Priority" editable = "true">Critical</Setting>
      </Settings>
      <Calculated/>
    </Configuration>
  </Metric>
  <Metric id = "PYLINT_NSU">
    <Configuration name = "Default">
      <Enabled>true</Enabled>
      <Visible>true</Visible>
      <Group>false</Group>
      <OriginalId>no-self-use</OriginalId>
      <GroupMember>Class Rules</GroupMember>
      <Language lang = "eng">
        <Warning>true</Warning>
        <DisplayName>No Self Use</DisplayName>
        <Description>Used when a method doesn&apos;t use its bound instance, and so could be written as a function.</Description>
        <HelpText>Used when a method doesn&apos;t use its bound instance, and so could be written as a function.</HelpText>
        <WarningText>Method could be a function</WarningText>
      </Language>
      <Baselines/>
      <Settings>
        <Setting name = "Priority" editable = "true">Minor</Setting>
      </Settings>
      <Calculated/>
    </Configuration>
  </Metric>
  <Metric id = "PYLINT_NVFP">
    <Configuration name = "Default">
      <Enabled>true</Enabled>
      <Visible>true</Visible>
      <Group>false</Group>
      <OriginalId>no-value-for-parameter</OriginalId>
      <GroupMember>Typecheck Rules</GroupMember>
      <Language lang = "eng">
        <Warning>true</Warning>
        <DisplayName>No Value For Parameter</DisplayName>
        <Description>Used when a function call passes too few arguments.</Description>
        <HelpText>Used when a function call passes too few arguments.</HelpText>
        <WarningText>No value for argument %s in %s call</WarningText>
      </Language>
      <Baselines/>
      <Settings>
        <Setting name = "Priority" editable = "true">Critical</Setting>
      </Settings>
      <Calculated/>
    </Configuration>
  </Metric>
  <Metric id = "PYLINT_NoM">
    <Configuration name = "Default">
      <Enabled>true</Enabled>
      <Visible>true</Visible>
      <Group>false</Group>
      <OriginalId>nonzero-method</OriginalId>
      <GroupMember>Python3 Rules</GroupMember>
      <Language lang = "eng">
        <Warning>true</Warning>
        <DisplayName>Nonzero Method</DisplayName>
        <Description>Used when a __nonzero__ method is defined (method is not used by Python 3) This message can&apos;t be emitted when using Python &gt;= 3.0.</Description>
        <HelpText>Used when a __nonzero__ method is defined (method is not used by Python 3) This message can&apos;t be emitted when using Python &gt;= 3.0.</HelpText>
        <WarningText>__nonzero__ method defined</WarningText>
      </Language>
      <Baselines/>
      <Settings>
        <Setting name = "Priority" editable = "true">Major</Setting>
      </Settings>
      <Calculated/>
    </Configuration>
  </Metric>
  <Metric id = "PYLINT_OD">
    <Configuration name = "Default">
      <Enabled>true</Enabled>
      <Visible>true</Visible>
      <Group>false</Group>
      <OriginalId>old-division</OriginalId>
      <GroupMember>Python3 Rules</GroupMember>
      <Language lang = "eng">
        <Warning>true</Warning>
        <DisplayName>Old Division</DisplayName>
        <Description>Used for non-floor division w/o a float literal or ``from __future__ import division``(Python 3 returns a float for int division unconditionally) This message can&apos;t be emitted when using Python &gt;= 3.0.</Description>
        <HelpText>Used for non-floor division w/o a float literal or ``from __future__ import division``(Python 3 returns a float for int division unconditionally) This message can&apos;t be emitted when using Python &gt;= 3.0.</HelpText>
        <WarningText>division w/o __future__ statement</WarningText>
      </Language>
      <Baselines/>
      <Settings>
        <Setting name = "Priority" editable = "true">Major</Setting>
      </Settings>
      <Calculated/>
    </Configuration>
  </Metric>
  <Metric id = "PYLINT_OM">
    <Configuration name = "Default">
      <Enabled>true</Enabled>
      <Visible>true</Visible>
      <Group>false</Group>
      <OriginalId>oct-method</OriginalId>
      <GroupMember>Python3 Rules</GroupMember>
      <Language lang = "eng">
        <Warning>true</Warning>
        <DisplayName>Oct Method</DisplayName>
        <Description>Used when a __oct__ method is defined (method is not used by Python 3) This message can&apos;t be emitted when using Python &gt;= 3.0.</Description>
        <HelpText>Used when a __oct__ method is defined (method is not used by Python 3) This message can&apos;t be emitted when using Python &gt;= 3.0.</HelpText>
        <WarningText>__oct__ method defined</WarningText>
      </Language>
      <Baselines/>
      <Settings>
        <Setting name = "Priority" editable = "true">Major</Setting>
      </Settings>
      <Calculated/>
    </Configuration>
  </Metric>
  <Metric id = "PYLINT_ONO">
    <Configuration name = "Default">
      <Enabled>true</Enabled>
      <Visible>true</Visible>
      <Group>false</Group>
      <OriginalId>old-ne-operator</OriginalId>
      <GroupMember>Python3 Rules</GroupMember>
      <Language lang = "eng">
        <Warning>true</Warning>
        <DisplayName>Old Ne Operator</DisplayName>
        <Description>Used when the deprecated &quot;&lt;&gt;&quot; operator is used instead of &quot;!=&quot;. This is removed in Python 3. This message can&apos;t be emitted when using Python &gt;= 3.0.</Description>
        <HelpText>Used when the deprecated &quot;&lt;&gt;&quot; operator is used instead of &quot;!=&quot;. This is removed in Python 3. This message can&apos;t be emitted when using Python &gt;= 3.0.</HelpText>
        <WarningText>Use of the &lt;&gt; operator</WarningText>
      </Language>
      <Baselines/>
      <Settings>
        <Setting name = "Priority" editable = "true">Critical</Setting>
      </Settings>
      <Calculated/>
    </Configuration>
  </Metric>
  <Metric id = "PYLINT_OOL">
    <Configuration name = "Default">
      <Enabled>true</Enabled>
      <Visible>true</Visible>
      <Group>false</Group>
      <OriginalId>old-octal-literal</OriginalId>
      <GroupMember>Python3 Rules</GroupMember>
      <Language lang = "eng">
        <Warning>true</Warning>
        <DisplayName>Old Octal Literal</DisplayName>
        <Description>Usen when encountering the old octal syntax, removed in Python 3. To use the new syntax, prepend 0o on the number. This message can&apos;t be emitted when using Python &gt;= 3.0.</Description>
        <HelpText>Usen when encountering the old octal syntax, removed in Python 3. To use the new syntax, prepend 0o on the number. This message can&apos;t be emitted when using Python &gt;= 3.0.</HelpText>
        <WarningText>Use of old octal literal</WarningText>
      </Language>
      <Baselines/>
      <Settings>
        <Setting name = "Priority" editable = "true">Critical</Setting>
      </Settings>
      <Calculated/>
    </Configuration>
  </Metric>
  <Metric id = "PYLINT_ORS">
    <Configuration name = "Default">
      <Enabled>true</Enabled>
      <Visible>true</Visible>
      <Group>false</Group>
      <OriginalId>old-raise-syntax</OriginalId>
      <GroupMember>Python3 Rules</GroupMember>
      <Language lang = "eng">
        <Warning>true</Warning>
        <DisplayName>Old Raise Syntax</DisplayName>
        <Description>Used when the alternate raise syntax &apos;raise foo, bar&apos; is used instead of &apos;raise foo(bar)&apos;. This message can&apos;t be emitted when using Python &gt;= 3.0.</Description>
        <HelpText>Used when the alternate raise syntax &apos;raise foo, bar&apos; is used instead of &apos;raise foo(bar)&apos;. This message can&apos;t be emitted when using Python &gt;= 3.0.</HelpText>
        <WarningText>Use raise ErrorClass(args) instead of raise ErrorClass, args.</WarningText>
      </Language>
      <Baselines/>
      <Settings>
        <Setting name = "Priority" editable = "true">Critical</Setting>
      </Settings>
      <Calculated/>
    </Configuration>
  </Metric>
  <Metric id = "PYLINT_OSC">
    <Configuration name = "Default">
      <Enabled>true</Enabled>
      <Visible>true</Visible>
      <Group>false</Group>
      <OriginalId>old-style-class</OriginalId>
      <GroupMember>Newstyle Rules</GroupMember>
      <Language lang = "eng">
        <Warning>true</Warning>
        <DisplayName>Old Style Class</DisplayName>
        <Description>Used when a class is defined that does not inherit from anotherclass and does not inherit explicitly from &quot;object&quot;. This message can&apos;t be emitted when using Python &gt;= 3.0.</Description>
        <HelpText>Used when a class is defined that does not inherit from anotherclass and does not inherit explicitly from &quot;object&quot;. This message can&apos;t be emitted when using Python &gt;= 3.0.</HelpText>
        <WarningText>Old-style class defined.</WarningText>
      </Language>
      <Baselines/>
      <Settings>
        <Setting name = "Priority" editable = "true">Minor</Setting>
      </Settings>
      <Calculated/>
    </Configuration>
  </Metric>
  <Metric id = "PYLINT_PA">
    <Configuration name = "Default">
      <Enabled>true</Enabled>
      <Visible>true</Visible>
      <Group>false</Group>
      <OriginalId>protected-access</OriginalId>
      <GroupMember>Class Rules</GroupMember>
      <Language lang = "eng">
        <Warning>true</Warning>
        <DisplayName>Protected Access</DisplayName>
        <Description>Used when a protected member (i.e. class member with a name beginning with an underscore) is access outside the class or a descendant of the class where it&apos;s defined.</Description>
        <HelpText>Used when a protected member (i.e. class member with a name beginning with an underscore) is access outside the class or a descendant of the class where it&apos;s defined.</HelpText>
        <WarningText>Access to a protected member %s of a client class</WarningText>
      </Language>
      <Baselines/>
      <Settings>
        <Setting name = "Priority" editable = "true">Major</Setting>
      </Settings>
      <Calculated/>
    </Configuration>
  </Metric>
  <Metric id = "PYLINT_PE">
    <Configuration name = "Default">
      <Enabled>false</Enabled>
      <Visible>true</Visible>
      <Group>false</Group>
      <OriginalId>parse-error</OriginalId>
      <GroupMember>Pylint Checker Rules</GroupMember>
      <Language lang = "eng">
        <Warning>true</Warning>
        <DisplayName>Parse Error</DisplayName>
        <Description>Used when an exception occured while building the Astroid representation which could be handled by astroid.</Description>
        <HelpText>Used when an exception occured while building the Astroid representation which could be handled by astroid.</HelpText>
        <WarningText>error while code parsing: %s</WarningText>
      </Language>
      <Baselines/>
      <Settings>
        <Setting name = "Priority" editable = "true">Blocker</Setting>
      </Settings>
      <Calculated/>
    </Configuration>
  </Metric>
  <Metric id = "PYLINT_POOC">
    <Configuration name = "Default">
      <Enabled>true</Enabled>
      <Visible>true</Visible>
      <Group>false</Group>
      <OriginalId>property-on-old-class</OriginalId>
      <GroupMember>Newstyle Rules</GroupMember>
      <Language lang = "eng">
        <Warning>true</Warning>
        <DisplayName>Property On Old Class</DisplayName>
        <Description>Used when Pylint detect the use of the builtin &quot;property&quot; on an old style class while this is relying on new style classes features. This message can&apos;t be emitted when using Python &gt;= 3.0.</Description>
        <HelpText>Used when Pylint detect the use of the builtin &quot;property&quot; on an old style class while this is relying on new style classes features. This message can&apos;t be emitted when using Python &gt;= 3.0.</HelpText>
        <WarningText>Use of &quot;property&quot; on an old style class</WarningText>
      </Language>
      <Baselines/>
      <Settings>
        <Setting name = "Priority" editable = "true">Major</Setting>
      </Settings>
      <Calculated/>
    </Configuration>
  </Metric>
  <Metric id = "PYLINT_PS">
    <Configuration name = "Default">
      <Enabled>true</Enabled>
      <Visible>true</Visible>
      <Group>false</Group>
      <OriginalId>pointless-statement</OriginalId>
      <GroupMember>Basic Rules</GroupMember>
      <Language lang = "eng">
        <Warning>true</Warning>
        <DisplayName>Pointless Statement</DisplayName>
        <Description>Used when a statement doesn&apos;t have (or at least seems to) any effect.</Description>
        <HelpText>Used when a statement doesn&apos;t have (or at least seems to) any effect.</HelpText>
        <WarningText>Statement seems to have no effect</WarningText>
      </Language>
      <Baselines/>
      <Settings>
        <Setting name = "Priority" editable = "true">Major</Setting>
      </Settings>
      <Calculated/>
    </Configuration>
  </Metric>
  <Metric id = "PYLINT_PSS">
    <Configuration name = "Default">
      <Enabled>true</Enabled>
      <Visible>true</Visible>
      <Group>false</Group>
      <OriginalId>pointless-string-statement</OriginalId>
      <GroupMember>Basic Rules</GroupMember>
      <Language lang = "eng">
        <Warning>true</Warning>
        <DisplayName>Pointless String Statement</DisplayName>
        <Description>Used when a string is used as a statement (which of course has no effect). This is a particular case of W0104 with its own message so you can easily disable it if you&apos;re using those strings as documentation, instead of comments.</Description>
        <HelpText>Used when a string is used as a statement (which of course has no effect). This is a particular case of W0104 with its own message so you can easily disable it if you&apos;re using those strings as documentation, instead of comments.</HelpText>
        <WarningText>String statement has no effect</WarningText>
      </Language>
      <Baselines/>
      <Settings>
        <Setting name = "Priority" editable = "true">Major</Setting>
      </Settings>
      <Calculated/>
    </Configuration>
  </Metric>
  <Metric id = "PYLINT_PU">
    <Configuration name = "Default">
      <Enabled>true</Enabled>
      <Visible>true</Visible>
      <Group>false</Group>
      <OriginalId>parameter-unpacking</OriginalId>
      <GroupMember>Python3 Rules</GroupMember>
      <Language lang = "eng">
        <Warning>true</Warning>
        <DisplayName>Parameter Unpacking</DisplayName>
        <Description>Used when parameter unpacking is specified for a function(Python 3 doesn&apos;t allow it) This message can&apos;t be emitted when using Python &gt;= 3.0.</Description>
        <HelpText>Used when parameter unpacking is specified for a function(Python 3 doesn&apos;t allow it) This message can&apos;t be emitted when using Python &gt;= 3.0.</HelpText>
        <WarningText>Parameter unpacking specified</WarningText>
      </Language>
      <Baselines/>
      <Settings>
        <Setting name = "Priority" editable = "true">Critical</Setting>
      </Settings>
      <Calculated/>
    </Configuration>
  </Metric>
  <Metric id = "PYLINT_PoE">
    <Configuration name = "Default">
      <Enabled>true</Enabled>
      <Visible>true</Visible>
      <Group>false</Group>
      <OriginalId>pointless-except</OriginalId>
      <GroupMember>Exception Rules</GroupMember>
      <Language lang = "eng">
        <Warning>true</Warning>
        <DisplayName>Pointless Except</DisplayName>
        <Description>Used when an except clause does nothing but &quot;pass&quot; and there is no &quot;else&quot; clause.</Description>
        <HelpText>Used when an except clause does nothing but &quot;pass&quot; and there is no &quot;else&quot; clause.</HelpText>
        <WarningText>Except doesn&apos;t do anything</WarningText>
      </Language>
      <Baselines/>
      <Settings>
        <Setting name = "Priority" editable = "true">Major</Setting>
      </Settings>
      <Calculated/>
    </Configuration>
  </Metric>
  <Metric id = "PYLINT_PrS">
    <Configuration name = "Default">
      <Enabled>true</Enabled>
      <Visible>true</Visible>
      <Group>false</Group>
      <OriginalId>print-statement</OriginalId>
      <GroupMember>Python3 Rules</GroupMember>
      <Language lang = "eng">
        <Warning>true</Warning>
        <DisplayName>Print Statement</DisplayName>
        <Description>Used when a print statement is used (`print` is a function in Python 3) This message can&apos;t be emitted when using Python &gt;= 3.0.</Description>
        <HelpText>Used when a print statement is used (`print` is a function in Python 3) This message can&apos;t be emitted when using Python &gt;= 3.0.</HelpText>
        <WarningText>print statement used</WarningText>
      </Language>
      <Baselines/>
      <Settings>
        <Setting name = "Priority" editable = "true">Critical</Setting>
      </Settings>
      <Calculated/>
    </Configuration>
  </Metric>
  <Metric id = "PYLINT_R">
    <Configuration name = "Default">
      <Enabled>true</Enabled>
      <Visible>true</Visible>
      <Group>false</Group>
      <OriginalId>reimported</OriginalId>
      <GroupMember>Import Rules</GroupMember>
      <Language lang = "eng">
        <Warning>true</Warning>
        <DisplayName>Reimported</DisplayName>
        <Description>Used when a module is reimported multiple times.</Description>
        <HelpText>Used when a module is reimported multiple times.</HelpText>
        <WarningText>Reimport %r (imported line %s)</WarningText>
      </Language>
      <Baselines/>
      <Settings>
        <Setting name = "Priority" editable = "true">Major</Setting>
      </Settings>
      <Calculated/>
    </Configuration>
  </Metric>
  <Metric id = "PYLINT_RAIG">
    <Configuration name = "Default">
      <Enabled>true</Enabled>
      <Visible>true</Visible>
      <Group>false</Group>
      <OriginalId>return-arg-in-generator</OriginalId>
      <GroupMember>Basic Rules</GroupMember>
      <Language lang = "eng">
        <Warning>true</Warning>
        <DisplayName>Return Arg In Generator</DisplayName>
        <Description>Used when a &quot;return&quot; statement with an argument is found outside in a generator function or method (e.g. with some &quot;yield&quot; statements). This message can&apos;t be emitted when using Python &gt;= 3.3.</Description>
        <HelpText>Used when a &quot;return&quot; statement with an argument is found outside in a generator function or method (e.g. with some &quot;yield&quot; statements). This message can&apos;t be emitted when using Python &gt;= 3.3.</HelpText>
        <WarningText>Return with argument inside generator</WarningText>
      </Language>
      <Baselines/>
      <Settings>
        <Setting name = "Priority" editable = "true">Critical</Setting>
      </Settings>
      <Calculated/>
    </Configuration>
  </Metric>
  <Metric id = "PYLINT_RB">
    <Configuration name = "Default">
      <Enabled>true</Enabled>
      <Visible>true</Visible>
      <Group>false</Group>
      <OriginalId>raw_input-builtin</OriginalId>
      <GroupMember>Python3 Rules</GroupMember>
      <Language lang = "eng">
        <Warning>true</Warning>
        <DisplayName>Raw_input Builtin</DisplayName>
        <Description>Used when the raw_input built-in function is referenced (missing from Python 3) This message can&apos;t be emitted when using Python &gt;= 3.0.</Description>
        <HelpText>Used when the raw_input built-in function is referenced (missing from Python 3) This message can&apos;t be emitted when using Python &gt;= 3.0.</HelpText>
        <WarningText>raw_input built-in referenced</WarningText>
      </Language>
      <Baselines/>
      <Settings>
        <Setting name = "Priority" editable = "true">Major</Setting>
      </Settings>
      <Calculated/>
    </Configuration>
  </Metric>
  <Metric id = "PYLINT_RBT">
    <Configuration name = "Default">
      <Enabled>true</Enabled>
      <Visible>true</Visible>
      <Group>false</Group>
      <OriginalId>raising-bad-type</OriginalId>
      <GroupMember>Exception Rules</GroupMember>
      <Language lang = "eng">
        <Warning>true</Warning>
        <DisplayName>Raising Bad Type</DisplayName>
        <Description>Used when something which is neither a class, an instance or a string is raised (i.e. a `TypeError` will be raised).</Description>
        <HelpText>Used when something which is neither a class, an instance or a string is raised (i.e. a `TypeError` will be raised).</HelpText>
        <WarningText>Raising %s while only classes or instances are allowed</WarningText>
      </Language>
      <Baselines/>
      <Settings>
        <Setting name = "Priority" editable = "true">Critical</Setting>
      </Settings>
      <Calculated/>
    </Configuration>
  </Metric>
  <Metric id = "PYLINT_RCF">
    <Configuration name = "Default">
      <Enabled>false</Enabled>
      <Visible>true</Visible>
      <Group>false</Group>
      <OriginalId>raw-checker-failed</OriginalId>
      <GroupMember>Pylint Checker Rules</GroupMember>
      <Language lang = "eng">
        <Warning>true</Warning>
        <DisplayName>Raw Checker Failed</DisplayName>
        <Description>Used to inform that a built-in module has not been checked using the raw checkers.</Description>
        <HelpText>Used to inform that a built-in module has not been checked using the raw checkers.</HelpText>
        <WarningText>Unable to run raw checkers on built-in module %s</WarningText>
      </Language>
      <Baselines/>
      <Settings>
        <Setting name = "Priority" editable = "true">Minor</Setting>
      </Settings>
      <Calculated/>
    </Configuration>
  </Metric>
  <Metric id = "PYLINT_RI">
    <Configuration name = "Default">
      <Enabled>true</Enabled>
      <Visible>true</Visible>
      <Group>false</Group>
      <OriginalId>relative-import</OriginalId>
      <GroupMember>Import Rules</GroupMember>
      <Language lang = "eng">
        <Warning>true</Warning>
        <DisplayName>Relative Import</DisplayName>
        <Description>Used when an import relative to the package directory is detected. This message can&apos;t be emitted when using Python &gt;= 3.0.</Description>
        <HelpText>Used when an import relative to the package directory is detected. This message can&apos;t be emitted when using Python &gt;= 3.0.</HelpText>
        <WarningText>Relative import %r, should be %r</WarningText>
      </Language>
      <Baselines/>
      <Settings>
        <Setting name = "Priority" editable = "true">Major</Setting>
      </Settings>
      <Calculated/>
    </Configuration>
  </Metric>
  <Metric id = "PYLINT_RIH">
    <Configuration name = "Default">
      <Enabled>true</Enabled>
      <Visible>true</Visible>
      <Group>false</Group>
      <OriginalId>redefine-in-handler</OriginalId>
      <GroupMember>Variable Rules</GroupMember>
      <Language lang = "eng">
        <Warning>true</Warning>
        <DisplayName>Redefine In Handler</DisplayName>
        <Description>Used when an exception handler assigns the exception to an existing name</Description>
        <HelpText>Used when an exception handler assigns the exception to an existing name</HelpText>
        <WarningText>Redefining name %r from %s in exception handler</WarningText>
      </Language>
      <Baselines/>
      <Settings>
        <Setting name = "Priority" editable = "true">Major</Setting>
      </Settings>
      <Calculated/>
    </Configuration>
  </Metric>
  <Metric id = "PYLINT_RII">
    <Configuration name = "Default">
      <Enabled>true</Enabled>
      <Visible>true</Visible>
      <Group>false</Group>
      <OriginalId>return-in-init</OriginalId>
      <GroupMember>Basic Rules</GroupMember>
      <Language lang = "eng">
        <Warning>true</Warning>
        <DisplayName>Return In Init</DisplayName>
        <Description>Used when the special class method __init__ has an explicit return value.</Description>
        <HelpText>Used when the special class method __init__ has an explicit return value.</HelpText>
        <WarningText>Explicit return in __init__</WarningText>
      </Language>
      <Baselines/>
      <Settings>
        <Setting name = "Priority" editable = "true">Critical</Setting>
      </Settings>
      <Calculated/>
    </Configuration>
  </Metric>
  <Metric id = "PYLINT_RKA">
    <Configuration name = "Default">
      <Enabled>true</Enabled>
      <Visible>true</Visible>
      <Group>false</Group>
      <OriginalId>redundant-keyword-arg</OriginalId>
      <GroupMember>Typecheck Rules</GroupMember>
      <Language lang = "eng">
        <Warning>true</Warning>
        <DisplayName>Redundant Keyword Arg</DisplayName>
        <Description>Used when a function call would result in assigning multiple values to a function parameter, one value from a positional argument and one from a keyword argument.</Description>
        <HelpText>Used when a function call would result in assigning multiple values to a function parameter, one value from a positional argument and one from a keyword argument.</HelpText>
        <WarningText>Argument %r passed by position and keyword in %s call</WarningText>
      </Language>
      <Baselines/>
      <Settings>
        <Setting name = "Priority" editable = "true">Critical</Setting>
      </Settings>
      <Calculated/>
    </Configuration>
  </Metric>
  <Metric id = "PYLINT_RNE">
    <Configuration name = "Default">
      <Enabled>true</Enabled>
      <Visible>true</Visible>
      <Group>false</Group>
      <OriginalId>raising-non-exception</OriginalId>
      <GroupMember>Exception Rules</GroupMember>
      <Language lang = "eng">
        <Warning>true</Warning>
        <DisplayName>Raising Non Exception</DisplayName>
        <Description>Used when a new style class which doesn&apos;t inherit from BaseException is raised.</Description>
        <HelpText>Used when a new style class which doesn&apos;t inherit from BaseException is raised.</HelpText>
        <WarningText>Raising a new style class which doesn&apos;t inherit from BaseException</WarningText>
      </Language>
      <Baselines/>
      <Settings>
        <Setting name = "Priority" editable = "true">Critical</Setting>
      </Settings>
      <Calculated/>
    </Configuration>
  </Metric>
  <Metric id = "PYLINT_ROF">
    <Configuration name = "Default">
      <Enabled>true</Enabled>
      <Visible>true</Visible>
      <Group>false</Group>
      <OriginalId>return-outside-function</OriginalId>
      <GroupMember>Basic Rules</GroupMember>
      <Language lang = "eng">
        <Warning>true</Warning>
        <DisplayName>Return Outside Function</DisplayName>
        <Description>Used when a &quot;return&quot; statement is found outside a function or method.</Description>
        <HelpText>Used when a &quot;return&quot; statement is found outside a function or method.</HelpText>
        <WarningText>Return outside function</WarningText>
      </Language>
      <Baselines/>
      <Settings>
        <Setting name = "Priority" editable = "true">Critical</Setting>
      </Settings>
      <Calculated/>
    </Configuration>
  </Metric>
  <Metric id = "PYLINT_RON">
    <Configuration name = "Default">
      <Enabled>true</Enabled>
      <Visible>true</Visible>
      <Group>false</Group>
      <OriginalId>redefined-outer-name</OriginalId>
      <GroupMember>Variable Rules</GroupMember>
      <Language lang = "eng">
        <Warning>true</Warning>
        <DisplayName>Redefined Outer Name</DisplayName>
        <Description>Used when a variable&apos;s name hide a name defined in the outer scope.</Description>
        <HelpText>Used when a variable&apos;s name hide a name defined in the outer scope.</HelpText>
        <WarningText>Redefining name %r from outer scope (line %s)</WarningText>
      </Language>
      <Baselines/>
      <Settings>
        <Setting name = "Priority" editable = "true">Major</Setting>
      </Settings>
      <Calculated/>
    </Configuration>
  </Metric>
  <Metric id = "PYLINT_RS">
    <Configuration name = "Default">
      <Enabled>true</Enabled>
      <Visible>true</Visible>
      <Group>false</Group>
      <OriginalId>raising-string</OriginalId>
      <GroupMember>Python3 Rules</GroupMember>
      <Language lang = "eng">
        <Warning>true</Warning>
        <DisplayName>Raising String</DisplayName>
        <Description>Used when a string exception is raised. This will not work on Python 3. This message can&apos;t be emitted when using Python &gt;= 3.0.</Description>
        <HelpText>Used when a string exception is raised. This will not work on Python 3. This message can&apos;t be emitted when using Python &gt;= 3.0.</HelpText>
        <WarningText>Raising a string exception</WarningText>
      </Language>
      <Baselines/>
      <Settings>
        <Setting name = "Priority" editable = "true">Major</Setting>
      </Settings>
      <Calculated/>
    </Configuration>
  </Metric>
  <Metric id = "PYLINT_RUA">
    <Configuration name = "Default">
      <Enabled>true</Enabled>
      <Visible>true</Visible>
      <Group>false</Group>
      <OriginalId>redundant-unittest-assert</OriginalId>
      <GroupMember>Stdlib Rules</GroupMember>
      <Language lang = "eng">
        <Warning>true</Warning>
        <DisplayName>Redundant Unittest Assert</DisplayName>
        <Description>The first argument of assertTrue and assertFalse isa condition. If a constant is passed as parameter, thatcondition will be always true. In this case a warning should be emitted.</Description>
        <HelpText>The first argument of assertTrue and assertFalse isa condition. If a constant is passed as parameter, thatcondition will be always true. In this case a warning should be emitted.</HelpText>
        <WarningText>Redundant use of %s with constant value %r</WarningText>
      </Language>
      <Baselines/>
      <Settings>
        <Setting name = "Priority" editable = "true">Major</Setting>
      </Settings>
      <Calculated/>
    </Configuration>
  </Metric>
  <Metric id = "PYLINT_ReB">
    <Configuration name = "Default">
      <Enabled>true</Enabled>
      <Visible>true</Visible>
      <Group>false</Group>
      <OriginalId>redefined-builtin</OriginalId>
      <GroupMember>Variable Rules</GroupMember>
      <Language lang = "eng">
        <Warning>true</Warning>
        <DisplayName>Redefined Builtin</DisplayName>
        <Description>Used when a variable or function override a built-in.</Description>
        <HelpText>Used when a variable or function override a built-in.</HelpText>
        <WarningText>Redefining built-in %r</WarningText>
      </Language>
      <Baselines/>
      <Settings>
        <Setting name = "Priority" editable = "true">Major</Setting>
      </Settings>
      <Calculated/>
    </Configuration>
  </Metric>
  <Metric id = "PYLINT_RedB">
    <Configuration name = "Default">
      <Enabled>true</Enabled>
      <Visible>true</Visible>
      <Group>false</Group>
      <OriginalId>reduce-builtin</OriginalId>
      <GroupMember>Python3 Rules</GroupMember>
      <Language lang = "eng">
        <Warning>true</Warning>
        <DisplayName>Reduce Builtin</DisplayName>
        <Description>Used when the reduce built-in function is referenced (missing from Python 3) This message can&apos;t be emitted when using Python &gt;= 3.0.</Description>
        <HelpText>Used when the reduce built-in function is referenced (missing from Python 3) This message can&apos;t be emitted when using Python &gt;= 3.0.</HelpText>
        <WarningText>reduce built-in referenced</WarningText>
      </Language>
      <Baselines/>
      <Settings>
        <Setting name = "Priority" editable = "true">Major</Setting>
      </Settings>
      <Calculated/>
    </Configuration>
  </Metric>
  <Metric id = "PYLINT_RelB">
    <Configuration name = "Default">
      <Enabled>true</Enabled>
      <Visible>true</Visible>
      <Group>false</Group>
      <OriginalId>reload-builtin</OriginalId>
      <GroupMember>Python3 Rules</GroupMember>
      <Language lang = "eng">
        <Warning>true</Warning>
        <DisplayName>Reload Builtin</DisplayName>
        <Description>Used when the reload built-in function is referenced (missing from Python 3). You can use instead imp.reload or importlib.reload. This message can&apos;t be emitted when using Python &gt;= 3.0.</Description>
        <HelpText>Used when the reload built-in function is referenced (missing from Python 3). You can use instead imp.reload or importlib.reload. This message can&apos;t be emitted when using Python &gt;= 3.0.</HelpText>
        <WarningText>reload built-in referenced</WarningText>
      </Language>
      <Baselines/>
      <Settings>
        <Setting name = "Priority" editable = "true">Major</Setting>
      </Settings>
      <Calculated/>
    </Configuration>
  </Metric>
  <Metric id = "PYLINT_RoB">
    <Configuration name = "Default">
      <Enabled>true</Enabled>
      <Visible>true</Visible>
      <Group>false</Group>
      <OriginalId>round-builtin</OriginalId>
      <GroupMember>Python3 Rules</GroupMember>
      <Language lang = "eng">
        <Warning>true</Warning>
        <DisplayName>Round Builtin</DisplayName>
        <Description>Used when the round built-in is referenced (backwards-incompatible semantics in Python 3) This message can&apos;t be emitted when using Python &gt;= 3.0.</Description>
        <HelpText>Used when the round built-in is referenced (backwards-incompatible semantics in Python 3) This message can&apos;t be emitted when using Python &gt;= 3.0.</HelpText>
        <WarningText>round built-in referenced</WarningText>
      </Language>
      <Baselines/>
      <Settings>
        <Setting name = "Priority" editable = "true">Major</Setting>
      </Settings>
      <Calculated/>
    </Configuration>
  </Metric>
  <Metric id = "PYLINT_SA">
    <Configuration name = "Default">
      <Enabled>true</Enabled>
      <Visible>true</Visible>
      <Group>false</Group>
      <OriginalId>star-args</OriginalId>
      <GroupMember>Basic Rules</GroupMember>
      <Language lang = "eng">
        <Warning>true</Warning>
        <DisplayName>Star Args</DisplayName>
        <Description>Used when a function or method is called using `*args` or `**kwargs` to dispatch arguments. This doesn&apos;t improve readability and should be used with care.</Description>
        <HelpText>Used when a function or method is called using `*args` or `**kwargs` to dispatch arguments. This doesn&apos;t improve readability and should be used with care.</HelpText>
        <WarningText>Used * or ** magic</WarningText>
      </Language>
      <Baselines/>
      <Settings>
        <Setting name = "Priority" editable = "true">Major</Setting>
      </Settings>
      <Calculated/>
    </Configuration>
  </Metric>
  <Metric id = "PYLINT_SB">
    <Configuration name = "Default">
      <Enabled>true</Enabled>
      <Visible>true</Visible>
      <Group>false</Group>
      <OriginalId>standarderror-builtin</OriginalId>
      <GroupMember>Python3 Rules</GroupMember>
      <Language lang = "eng">
        <Warning>true</Warning>
        <DisplayName>Standarderror Builtin</DisplayName>
        <Description>Used when the StandardError built-in function is referenced (missing from Python 3) This message can&apos;t be emitted when using Python &gt;= 3.0.</Description>
        <HelpText>Used when the StandardError built-in function is referenced (missing from Python 3) This message can&apos;t be emitted when using Python &gt;= 3.0.</HelpText>
        <WarningText>StandardError built-in referenced</WarningText>
      </Language>
      <Baselines/>
      <Settings>
        <Setting name = "Priority" editable = "true">Major</Setting>
      </Settings>
      <Calculated/>
    </Configuration>
  </Metric>
  <Metric id = "PYLINT_SD">
    <Configuration name = "Default">
      <Enabled>true</Enabled>
      <Visible>true</Visible>
      <Group>false</Group>
      <OriginalId>signature-differs</OriginalId>
      <GroupMember>Class Rules</GroupMember>
      <Language lang = "eng">
        <Warning>true</Warning>
        <DisplayName>Signature Differs</DisplayName>
        <Description>Used when a method signature is different than in the implemented interface or in an overridden method.</Description>
        <HelpText>Used when a method signature is different than in the implemented interface or in an overridden method.</HelpText>
        <WarningText>Signature differs from %s %r method</WarningText>
      </Language>
      <Baselines/>
      <Settings>
        <Setting name = "Priority" editable = "true">Major</Setting>
      </Settings>
      <Calculated/>
    </Configuration>
  </Metric>
  <Metric id = "PYLINT_SE">
    <Configuration name = "Default">
      <Enabled>false</Enabled>
      <Visible>true</Visible>
      <Group>false</Group>
      <OriginalId>syntax-error</OriginalId>
      <GroupMember>Pylint Checker Rules</GroupMember>
      <Language lang = "eng">
        <Warning>true</Warning>
        <DisplayName>Syntax Error</DisplayName>
        <Description>Used when a syntax error is raised for a module.</Description>
        <HelpText>Used when a syntax error is raised for a module.</HelpText>
        <WarningText></WarningText>
      </Language>
      <Baselines/>
      <Settings>
        <Setting name = "Priority" editable = "true">Critical</Setting>
      </Settings>
      <Calculated/>
    </Configuration>
  </Metric>
  <Metric id = "PYLINT_SINC">
    <Configuration name = "Default">
      <Enabled>true</Enabled>
      <Visible>true</Visible>
      <Group>false</Group>
      <OriginalId>super-init-not-called</OriginalId>
      <GroupMember>Class Rules</GroupMember>
      <Language lang = "eng">
        <Warning>true</Warning>
        <DisplayName>Super Init Not Called</DisplayName>
        <Description>Used when an ancestor class method has an __init__ method which is not called by a derived class.</Description>
        <HelpText>Used when an ancestor class method has an __init__ method which is not called by a derived class.</HelpText>
        <WarningText>__init__ method from base class %r is not called</WarningText>
      </Language>
      <Baselines/>
      <Settings>
        <Setting name = "Priority" editable = "true">Major</Setting>
      </Settings>
      <Calculated/>
    </Configuration>
  </Metric>
  <Metric id = "PYLINT_SM">
    <Configuration name = "Default">
      <Enabled>true</Enabled>
      <Visible>true</Visible>
      <Group>false</Group>
      <OriginalId>setslice-method</OriginalId>
      <GroupMember>Python3 Rules</GroupMember>
      <Language lang = "eng">
        <Warning>true</Warning>
        <DisplayName>Setslice Method</DisplayName>
        <Description>Used when a __setslice__ method is defined (method is not used by Python 3) This message can&apos;t be emitted when using Python &gt;= 3.0.</Description>
        <HelpText>Used when a __setslice__ method is defined (method is not used by Python 3) This message can&apos;t be emitted when using Python &gt;= 3.0.</HelpText>
        <WarningText>__setslice__ method defined</WarningText>
      </Language>
      <Baselines/>
      <Settings>
        <Setting name = "Priority" editable = "true">Major</Setting>
      </Settings>
      <Calculated/>
    </Configuration>
  </Metric>
  <Metric id = "PYLINT_SOOC">
    <Configuration name = "Default">
      <Enabled>true</Enabled>
      <Visible>true</Visible>
      <Group>false</Group>
      <OriginalId>slots-on-old-class</OriginalId>
      <GroupMember>Newstyle Rules</GroupMember>
      <Language lang = "eng">
        <Warning>true</Warning>
        <DisplayName>Slots On Old Class</DisplayName>
        <Description>Used when an old style class uses the __slots__ attribute. This message can&apos;t be emitted when using Python &gt;= 3.0.</Description>
        <HelpText>Used when an old style class uses the __slots__ attribute. This message can&apos;t be emitted when using Python &gt;= 3.0.</HelpText>
        <WarningText>Use of __slots__ on an old style class</WarningText>
      </Language>
      <Baselines/>
      <Settings>
        <Setting name = "Priority" editable = "true">Critical</Setting>
      </Settings>
      <Calculated/>
    </Configuration>
  </Metric>
  <Metric id = "PYLINT_SP">
    <Configuration name = "Default">
      <Enabled>true</Enabled>
      <Visible>true</Visible>
      <Group>false</Group>
      <OriginalId>superfluous-parens</OriginalId>
      <GroupMember>Format Rules</GroupMember>
      <Language lang = "eng">
        <Warning>true</Warning>
        <DisplayName>Superfluous Parens</DisplayName>
        <Description>Used when a single item in parentheses follows an if, for, or other keyword.</Description>
        <HelpText>Used when a single item in parentheses follows an if, for, or other keyword.</HelpText>
        <WarningText>Unnecessary parens after %r keyword</WarningText>
      </Language>
      <Baselines/>
      <Settings>
        <Setting name = "Priority" editable = "true">Minor</Setting>
      </Settings>
      <Calculated/>
    </Configuration>
  </Metric>
  <Metric id = "PYLINT_SuM">
    <Configuration name = "Default">
      <Enabled>false</Enabled>
      <Visible>true</Visible>
      <Group>false</Group>
      <OriginalId>suppressed-message</OriginalId>
      <GroupMember>Pylint Checker Rules</GroupMember>
      <Language lang = "eng">
        <Warning>true</Warning>
        <DisplayName>Suppressed Message</DisplayName>
        <Description>A message was triggered on a line, but suppressed explicitly by a disable= comment in the file. This message is not generated for messages that are ignored due to configuration settings.</Description>
        <HelpText>A message was triggered on a line, but suppressed explicitly by a disable= comment in the file. This message is not generated for messages that are ignored due to configuration settings.</HelpText>
        <WarningText>Suppressed %s (from line %d)</WarningText>
      </Language>
      <Baselines/>
      <Settings>
        <Setting name = "Priority" editable = "true">Minor</Setting>
      </Settings>
      <Calculated/>
    </Configuration>
  </Metric>
  <Metric id = "PYLINT_SuOOC">
    <Configuration name = "Default">
      <Enabled>true</Enabled>
      <Visible>true</Visible>
      <Group>false</Group>
      <OriginalId>super-on-old-class</OriginalId>
      <GroupMember>Newstyle Rules</GroupMember>
      <Language lang = "eng">
        <Warning>true</Warning>
        <DisplayName>Super On Old Class</DisplayName>
        <Description>Used when an old style class uses the super builtin. This message can&apos;t be emitted when using Python &gt;= 3.0.</Description>
        <HelpText>Used when an old style class uses the super builtin. This message can&apos;t be emitted when using Python &gt;= 3.0.</HelpText>
        <WarningText>Use of super on an old style class</WarningText>
      </Language>
      <Baselines/>
      <Settings>
        <Setting name = "Priority" editable = "true">Critical</Setting>
      </Settings>
      <Calculated/>
    </Configuration>
  </Metric>
  <Metric id = "PYLINT_TFFA">
    <Configuration name = "Default">
      <Enabled>true</Enabled>
      <Visible>true</Visible>
      <Group>false</Group>
      <OriginalId>too-few-format-args</OriginalId>
      <GroupMember>String Rules</GroupMember>
      <Language lang = "eng">
        <Warning>true</Warning>
        <DisplayName>Too Few Format Args</DisplayName>
        <Description>Used when a format string that uses unnamed conversion specifiers is given too few arguments</Description>
        <HelpText>Used when a format string that uses unnamed conversion specifiers is given too few arguments</HelpText>
        <WarningText>Not enough arguments for format string</WarningText>
      </Language>
      <Baselines/>
      <Settings>
        <Setting name = "Priority" editable = "true">Critical</Setting>
      </Settings>
      <Calculated/>
    </Configuration>
  </Metric>
  <Metric id = "PYLINT_TFPM">
    <Configuration name = "Default">
      <Enabled>true</Enabled>
      <Visible>true</Visible>
      <Group>false</Group>
      <OriginalId>too-few-public-methods</OriginalId>
      <GroupMember>Design Rules</GroupMember>
      <Language lang = "eng">
        <Warning>true</Warning>
        <DisplayName>Too Few Public Methods</DisplayName>
        <Description>Used when class has too few public methods, so be sure it&apos;s really worth it.</Description>
        <HelpText>Used when class has too few public methods, so be sure it&apos;s really worth it.</HelpText>
        <WarningText>Too few public methods (%s/%s)</WarningText>
      </Language>
      <Baselines/>
      <Settings>
        <Setting name = "Priority" editable = "true">Minor</Setting>
      </Settings>
      <Calculated/>
    </Configuration>
  </Metric>
  <Metric id = "PYLINT_TFS">
    <Configuration name = "Default">
      <Enabled>true</Enabled>
      <Visible>true</Visible>
      <Group>false</Group>
      <OriginalId>truncated-format-string</OriginalId>
      <GroupMember>String Rules</GroupMember>
      <Language lang = "eng">
        <Warning>true</Warning>
        <DisplayName>Truncated Format String</DisplayName>
        <Description>Used when a format string terminates before the end of a conversion specifier.</Description>
        <HelpText>Used when a format string terminates before the end of a conversion specifier.</HelpText>
        <WarningText>Format string ends in middle of conversion specifier</WarningText>
      </Language>
      <Baselines/>
      <Settings>
        <Setting name = "Priority" editable = "true">Critical</Setting>
      </Settings>
      <Calculated/>
    </Configuration>
  </Metric>
  <Metric id = "PYLINT_TMA">
    <Configuration name = "Default">
      <Enabled>true</Enabled>
      <Visible>true</Visible>
      <Group>false</Group>
      <OriginalId>too-many-ancestors</OriginalId>
      <GroupMember>Design Rules</GroupMember>
      <Language lang = "eng">
        <Warning>true</Warning>
        <DisplayName>Too Many Ancestors</DisplayName>
        <Description>Used when class has too many parent classes, try to reduce this to get a simpler (and so easier to use) class.</Description>
        <HelpText>Used when class has too many parent classes, try to reduce this to get a simpler (and so easier to use) class.</HelpText>
        <WarningText>Too many ancestors (%s/%s)</WarningText>
      </Language>
      <Baselines/>
      <Settings>
        <Setting name = "Priority" editable = "true">Minor</Setting>
      </Settings>
      <Calculated/>
    </Configuration>
  </Metric>
  <Metric id = "PYLINT_TMB">
    <Configuration name = "Default">
      <Enabled>true</Enabled>
      <Visible>true</Visible>
      <Group>false</Group>
      <OriginalId>too-many-branches</OriginalId>
      <GroupMember>Design Rules</GroupMember>
      <Language lang = "eng">
        <Warning>true</Warning>
        <DisplayName>Too Many Branches</DisplayName>
        <Description>Used when a function or method has too many branches, making it hard to follow.</Description>
        <HelpText>Used when a function or method has too many branches, making it hard to follow.</HelpText>
        <WarningText>Too many branches (%s/%s)</WarningText>
      </Language>
      <Baselines/>
      <Settings>
        <Setting name = "Priority" editable = "true">Minor</Setting>
      </Settings>
      <Calculated/>
    </Configuration>
  </Metric>
  <Metric id = "PYLINT_TMFA">
    <Configuration name = "Default">
      <Enabled>true</Enabled>
      <Visible>true</Visible>
      <Group>false</Group>
      <OriginalId>too-many-format-args</OriginalId>
      <GroupMember>String Rules</GroupMember>
      <Language lang = "eng">
        <Warning>true</Warning>
        <DisplayName>Too Many Format Args</DisplayName>
        <Description>Used when a format string that uses unnamed conversion specifiers is given too many arguments.</Description>
        <HelpText>Used when a format string that uses unnamed conversion specifiers is given too many arguments.</HelpText>
        <WarningText>Too many arguments for format string</WarningText>
      </Language>
      <Baselines/>
      <Settings>
        <Setting name = "Priority" editable = "true">Critical</Setting>
      </Settings>
      <Calculated/>
    </Configuration>
  </Metric>
  <Metric id = "PYLINT_TMIA">
    <Configuration name = "Default">
      <Enabled>true</Enabled>
      <Visible>true</Visible>
      <Group>false</Group>
      <OriginalId>too-many-instance-attributes</OriginalId>
      <GroupMember>Design Rules</GroupMember>
      <Language lang = "eng">
        <Warning>true</Warning>
        <DisplayName>Too Many Instance Attributes</DisplayName>
        <Description>Used when class has too many instance attributes, try to reduce this to get a simpler (and so easier to use) class.</Description>
        <HelpText>Used when class has too many instance attributes, try to reduce this to get a simpler (and so easier to use) class.</HelpText>
        <WarningText>Too many instance attributes (%s/%s)</WarningText>
      </Language>
      <Baselines/>
      <Settings>
        <Setting name = "Priority" editable = "true">Minor</Setting>
      </Settings>
      <Calculated/>
    </Configuration>
  </Metric>
  <Metric id = "PYLINT_TML">
    <Configuration name = "Default">
      <Enabled>true</Enabled>
      <Visible>true</Visible>
      <Group>false</Group>
      <OriginalId>too-many-lines</OriginalId>
      <GroupMember>Format Rules</GroupMember>
      <Language lang = "eng">
        <Warning>true</Warning>
        <DisplayName>Too Many Lines</DisplayName>
        <Description>Used when a module has too much lines, reducing its readability.</Description>
        <HelpText>Used when a module has too much lines, reducing its readability.</HelpText>
        <WarningText>Too many lines in module (%s/%s)</WarningText>
      </Language>
      <Baselines/>
      <Settings>
        <Setting name = "Priority" editable = "true">Minor</Setting>
      </Settings>
      <Calculated/>
    </Configuration>
  </Metric>
  <Metric id = "PYLINT_TMPM">
    <Configuration name = "Default">
      <Enabled>true</Enabled>
      <Visible>true</Visible>
      <Group>false</Group>
      <OriginalId>too-many-public-methods</OriginalId>
      <GroupMember>Design Rules</GroupMember>
      <Language lang = "eng">
        <Warning>true</Warning>
        <DisplayName>Too Many Public Methods</DisplayName>
        <Description>Used when class has too many public methods, try to reduce this to get a simpler (and so easier to use) class.</Description>
        <HelpText>Used when class has too many public methods, try to reduce this to get a simpler (and so easier to use) class.</HelpText>
        <WarningText>Too many public methods (%s/%s)</WarningText>
      </Language>
      <Baselines/>
      <Settings>
        <Setting name = "Priority" editable = "true">Minor</Setting>
      </Settings>
      <Calculated/>
    </Configuration>
  </Metric>
  <Metric id = "PYLINT_TMRS">
    <Configuration name = "Default">
      <Enabled>true</Enabled>
      <Visible>true</Visible>
      <Group>false</Group>
      <OriginalId>too-many-return-statements</OriginalId>
      <GroupMember>Design Rules</GroupMember>
      <Language lang = "eng">
        <Warning>true</Warning>
        <DisplayName>Too Many Return Statements</DisplayName>
        <Description>Used when a function or method has too many return statement, making it hard to follow.</Description>
        <HelpText>Used when a function or method has too many return statement, making it hard to follow.</HelpText>
        <WarningText>Too many return statements (%s/%s)</WarningText>
      </Language>
      <Baselines/>
      <Settings>
        <Setting name = "Priority" editable = "true">Minor</Setting>
      </Settings>
      <Calculated/>
    </Configuration>
  </Metric>
  <Metric id = "PYLINT_TMS">
    <Configuration name = "Default">
      <Enabled>true</Enabled>
      <Visible>true</Visible>
      <Group>false</Group>
      <OriginalId>too-many-statements</OriginalId>
      <GroupMember>Design Rules</GroupMember>
      <Language lang = "eng">
        <Warning>true</Warning>
        <DisplayName>Too Many Statements</DisplayName>
        <Description>Used when a function or method has too many statements. You should then split it in smaller functions / methods.</Description>
        <HelpText>Used when a function or method has too many statements. You should then split it in smaller functions / methods.</HelpText>
        <WarningText>Too many statements (%s/%s)</WarningText>
      </Language>
      <Baselines/>
      <Settings>
        <Setting name = "Priority" editable = "true">Minor</Setting>
      </Settings>
      <Calculated/>
    </Configuration>
  </Metric>
  <Metric id = "PYLINT_TW">
    <Configuration name = "Default">
      <Enabled>true</Enabled>
      <Visible>true</Visible>
      <Group>false</Group>
      <OriginalId>trailing-whitespace</OriginalId>
      <GroupMember>Format Rules</GroupMember>
      <Language lang = "eng">
        <Warning>true</Warning>
        <DisplayName>Trailing Whitespace</DisplayName>
        <Description>Used when there is whitespace between the end of a line and the newline.</Description>
        <HelpText>Used when there is whitespace between the end of a line and the newline.</HelpText>
        <WarningText>Trailing whitespace</WarningText>
      </Language>
      <Baselines/>
      <Settings>
        <Setting name = "Priority" editable = "true">Minor</Setting>
      </Settings>
      <Calculated/>
    </Configuration>
  </Metric>
  <Metric id = "PYLINT_ToMA">
    <Configuration name = "Default">
      <Enabled>true</Enabled>
      <Visible>true</Visible>
      <Group>false</Group>
      <OriginalId>too-many-arguments</OriginalId>
      <GroupMember>Design Rules</GroupMember>
      <Language lang = "eng">
        <Warning>true</Warning>
        <DisplayName>Too Many Arguments</DisplayName>
        <Description>Used when a function or method takes too many arguments.</Description>
        <HelpText>Used when a function or method takes too many arguments.</HelpText>
        <WarningText>Too many arguments (%s/%s)</WarningText>
      </Language>
      <Baselines/>
      <Settings>
        <Setting name = "Priority" editable = "true">Minor</Setting>
      </Settings>
      <Calculated/>
    </Configuration>
  </Metric>
  <Metric id = "PYLINT_ToMFA">
    <Configuration name = "Default">
      <Enabled>true</Enabled>
      <Visible>true</Visible>
      <Group>false</Group>
      <OriginalId>too-many-function-args</OriginalId>
      <GroupMember>Typecheck Rules</GroupMember>
      <Language lang = "eng">
        <Warning>true</Warning>
        <DisplayName>Too Many Function Args</DisplayName>
        <Description>Used when a function call passes too many positional arguments.</Description>
        <HelpText>Used when a function call passes too many positional arguments.</HelpText>
        <WarningText>Too many positional arguments for %s call</WarningText>
      </Language>
      <Baselines/>
      <Settings>
        <Setting name = "Priority" editable = "true">Critical</Setting>
      </Settings>
      <Calculated/>
    </Configuration>
  </Metric>
  <Metric id = "PYLINT_ToML">
    <Configuration name = "Default">
      <Enabled>true</Enabled>
      <Visible>true</Visible>
      <Group>false</Group>
      <OriginalId>too-many-locals</OriginalId>
      <GroupMember>Design Rules</GroupMember>
      <Language lang = "eng">
        <Warning>true</Warning>
        <DisplayName>Too Many Locals</DisplayName>
        <Description>Used when a function or method has too many local variables.</Description>
        <HelpText>Used when a function or method has too many local variables.</HelpText>
        <WarningText>Too many local variables (%s/%s)</WarningText>
      </Language>
      <Baselines/>
      <Settings>
        <Setting name = "Priority" editable = "true">Minor</Setting>
      </Settings>
      <Calculated/>
    </Configuration>
  </Metric>
  <Metric id = "PYLINT_U">
    <Configuration name = "Default">
      <Enabled>true</Enabled>
      <Visible>true</Visible>
      <Group>false</Group>
      <OriginalId>unreachable</OriginalId>
      <GroupMember>Basic Rules</GroupMember>
      <Language lang = "eng">
        <Warning>true</Warning>
        <DisplayName>Unreachable</DisplayName>
        <Description>Used when there is some code behind a &quot;return&quot; or &quot;raise&quot; statement, which will never be accessed.</Description>
        <HelpText>Used when there is some code behind a &quot;return&quot; or &quot;raise&quot; statement, which will never be accessed.</HelpText>
        <WarningText>Unreachable code</WarningText>
      </Language>
      <Baselines/>
      <Settings>
        <Setting name = "Priority" editable = "true">Major</Setting>
      </Settings>
      <Calculated/>
    </Configuration>
  </Metric>
  <Metric id = "PYLINT_UA">
    <Configuration name = "Default">
      <Enabled>true</Enabled>
      <Visible>true</Visible>
      <Group>false</Group>
      <OriginalId>unused-argument</OriginalId>
      <GroupMember>Variable Rules</GroupMember>
      <Language lang = "eng">
        <Warning>true</Warning>
        <DisplayName>Unused Argument</DisplayName>
        <Description>Used when a function or method argument is not used.</Description>
        <HelpText>Used when a function or method argument is not used.</HelpText>
        <WarningText>Unused argument %r</WarningText>
      </Language>
      <Baselines/>
      <Settings>
        <Setting name = "Priority" editable = "true">Major</Setting>
      </Settings>
      <Calculated/>
    </Configuration>
  </Metric>
  <Metric id = "PYLINT_UAV">
    <Configuration name = "Default">
      <Enabled>true</Enabled>
      <Visible>true</Visible>
      <Group>false</Group>
      <OriginalId>undefined-all-variable</OriginalId>
      <GroupMember>Variable Rules</GroupMember>
      <Language lang = "eng">
        <Warning>true</Warning>
        <DisplayName>Undefined All Variable</DisplayName>
        <Description>Used when an undefined variable name is referenced in __all__.</Description>
        <HelpText>Used when an undefined variable name is referenced in __all__.</HelpText>
        <WarningText>Undefined variable name %r in __all__</WarningText>
      </Language>
      <Baselines/>
      <Settings>
        <Setting name = "Priority" editable = "true">Critical</Setting>
      </Settings>
      <Calculated/>
    </Configuration>
  </Metric>
  <Metric id = "PYLINT_UB">
    <Configuration name = "Default">
      <Enabled>true</Enabled>
      <Visible>true</Visible>
      <Group>false</Group>
      <OriginalId>unicode-builtin</OriginalId>
      <GroupMember>Python3 Rules</GroupMember>
      <Language lang = "eng">
        <Warning>true</Warning>
        <DisplayName>Unicode Builtin</DisplayName>
        <Description>Used when the unicode built-in function is referenced (missing from Python 3) This message can&apos;t be emitted when using Python &gt;= 3.0.</Description>
        <HelpText>Used when the unicode built-in function is referenced (missing from Python 3) This message can&apos;t be emitted when using Python &gt;= 3.0.</HelpText>
        <WarningText>unicode built-in referenced</WarningText>
      </Language>
      <Baselines/>
      <Settings>
        <Setting name = "Priority" editable = "true">Major</Setting>
      </Settings>
      <Calculated/>
    </Configuration>
  </Metric>
  <Metric id = "PYLINT_UBA">
    <Configuration name = "Default">
      <Enabled>true</Enabled>
      <Visible>true</Visible>
      <Group>false</Group>
      <OriginalId>used-before-assignment</OriginalId>
      <GroupMember>Variable Rules</GroupMember>
      <Language lang = "eng">
        <Warning>true</Warning>
        <DisplayName>Used Before Assignment</DisplayName>
        <Description>Used when a local variable is accessed before it&apos;s assignment.</Description>
        <HelpText>Used when a local variable is accessed before it&apos;s assignment.</HelpText>
        <WarningText>Using variable %r before assignment</WarningText>
      </Language>
      <Baselines/>
      <Settings>
        <Setting name = "Priority" editable = "true">Critical</Setting>
      </Settings>
      <Calculated/>
    </Configuration>
  </Metric>
  <Metric id = "PYLINT_UEOL">
    <Configuration name = "Default">
      <Enabled>true</Enabled>
      <Visible>true</Visible>
      <Group>false</Group>
      <OriginalId>useless-else-on-loop</OriginalId>
      <GroupMember>Basic Rules</GroupMember>
      <Language lang = "eng">
        <Warning>true</Warning>
        <DisplayName>Useless Else On Loop</DisplayName>
        <Description>Loops should only have an else clause if they can exit early with a break statement, otherwise the statements under else should be on the same scope as the loop itself.</Description>
        <HelpText>Loops should only have an else clause if they can exit early with a break statement, otherwise the statements under else should be on the same scope as the loop itself.</HelpText>
        <WarningText>Else clause on loop without a break statement</WarningText>
      </Language>
      <Baselines/>
      <Settings>
        <Setting name = "Priority" editable = "true">Major</Setting>
      </Settings>
      <Calculated/>
    </Configuration>
  </Metric>
  <Metric id = "PYLINT_UFSA">
    <Configuration name = "Default">
      <Enabled>true</Enabled>
      <Visible>true</Visible>
      <Group>false</Group>
      <OriginalId>unused-format-string-argument</OriginalId>
      <GroupMember>String Rules</GroupMember>
      <Language lang = "eng">
        <Warning>true</Warning>
        <DisplayName>Unused Format String Argument</DisplayName>
        <Description>Used when a PEP 3101 format string that uses named fields is used with an argument that is not required by the format string. This message can&apos;t be emitted when using Python &lt; 2.7.</Description>
        <HelpText>Used when a PEP 3101 format string that uses named fields is used with an argument that is not required by the format string. This message can&apos;t be emitted when using Python &lt; 2.7.</HelpText>
        <WarningText>Unused format argument %r</WarningText>
      </Language>
      <Baselines/>
      <Settings>
        <Setting name = "Priority" editable = "true">Major</Setting>
      </Settings>
      <Calculated/>
    </Configuration>
  </Metric>
  <Metric id = "PYLINT_UFSK">
    <Configuration name = "Default">
      <Enabled>true</Enabled>
      <Visible>true</Visible>
      <Group>false</Group>
      <OriginalId>unused-format-string-key</OriginalId>
      <GroupMember>String Rules</GroupMember>
      <Language lang = "eng">
        <Warning>true</Warning>
        <DisplayName>Unused Format String Key</DisplayName>
        <Description>Used when a format string that uses named conversion specifiers is used with a dictionary that conWtains keys not required by the format string.</Description>
        <HelpText>Used when a format string that uses named conversion specifiers is used with a dictionary that conWtains keys not required by the format string.</HelpText>
        <WarningText>Unused key %r in format string dictionary</WarningText>
      </Language>
      <Baselines/>
      <Settings>
        <Setting name = "Priority" editable = "true">Major</Setting>
      </Settings>
      <Calculated/>
    </Configuration>
  </Metric>
  <Metric id = "PYLINT_UI">
    <Configuration name = "Default">
      <Enabled>false</Enabled>
      <Visible>true</Visible>
      <Group>false</Group>
      <OriginalId>unresolved-interface</OriginalId>
      <GroupMember>Class Rules</GroupMember>
      <Language lang = "eng">
        <Warning>true</Warning>
        <DisplayName>Unresolved Interface</DisplayName>
        <Description>Used when a Pylint as failed to find interfaces implemented by a class</Description>
        <HelpText>Used when a Pylint as failed to find interfaces implemented by a class</HelpText>
        <WarningText>failed to resolve interfaces implemented by %s (%s)</WarningText>
      </Language>
      <Baselines/>
      <Settings>
        <Setting name = "Priority" editable = "true">Blocker</Setting>
      </Settings>
      <Calculated/>
    </Configuration>
  </Metric>
  <Metric id = "PYLINT_UIE">
    <Configuration name = "Default">
      <Enabled>true</Enabled>
      <Visible>true</Visible>
      <Group>false</Group>
      <OriginalId>unpacking-in-except</OriginalId>
      <GroupMember>Python3 Rules</GroupMember>
      <Language lang = "eng">
        <Warning>true</Warning>
        <DisplayName>Unpacking In Except</DisplayName>
        <Description>Python3 will not allow implicit unpacking of exceptions in except clauses. See http://www.python.org/dev/peps/pep-3110/ This message can&apos;t be emitted when using Python &gt;= 3.0.</Description>
        <HelpText>Python3 will not allow implicit unpacking of exceptions in except clauses. See http://www.python.org/dev/peps/pep-3110/ This message can&apos;t be emitted when using Python &gt;= 3.0.</HelpText>
        <WarningText>Implicit unpacking of exceptions is not supported in Python 3</WarningText>
      </Language>
      <Baselines/>
      <Settings>
        <Setting name = "Priority" editable = "true">Critical</Setting>
      </Settings>
      <Calculated/>
    </Configuration>
  </Metric>
  <Metric id = "PYLINT_UIO">
    <Configuration name = "Default">
      <Enabled>false</Enabled>
      <Visible>true</Visible>
      <Group>false</Group>
      <OriginalId>unrecognized-inline-option</OriginalId>
      <GroupMember>Pylint Checker Rules</GroupMember>
      <Language lang = "eng">
        <Warning>true</Warning>
        <DisplayName>Unrecognized Inline Option</DisplayName>
        <Description>Used when an unknown inline option is encountered.</Description>
        <HelpText>Used when an unknown inline option is encountered.</HelpText>
        <WarningText>Unrecognized file option %r</WarningText>
      </Language>
      <Baselines/>
      <Settings>
        <Setting name = "Priority" editable = "true">Critical</Setting>
      </Settings>
      <Calculated/>
    </Configuration>
  </Metric>
  <Metric id = "PYLINT_UKA">
    <Configuration name = "Default">
      <Enabled>true</Enabled>
      <Visible>true</Visible>
      <Group>false</Group>
      <OriginalId>unexpected-keyword-arg</OriginalId>
      <GroupMember>Typecheck Rules</GroupMember>
      <Language lang = "eng">
        <Warning>true</Warning>
        <DisplayName>Unexpected Keyword Arg</DisplayName>
        <Description>Used when a function call passes a keyword argument that doesn&apos;t correspond to one of the function&apos;s parameter names.</Description>
        <HelpText>Used when a function call passes a keyword argument that doesn&apos;t correspond to one of the function&apos;s parameter names.</HelpText>
        <WarningText>Unexpected keyword argument %r in %s call</WarningText>
      </Language>
      <Baselines/>
      <Settings>
        <Setting name = "Priority" editable = "true">Critical</Setting>
      </Settings>
      <Calculated/>
    </Configuration>
  </Metric>
  <Metric id = "PYLINT_UL">
    <Configuration name = "Default">
      <Enabled>true</Enabled>
      <Visible>true</Visible>
      <Group>false</Group>
      <OriginalId>unnecessary-lambda</OriginalId>
      <GroupMember>Basic Rules</GroupMember>
      <Language lang = "eng">
        <Warning>true</Warning>
        <DisplayName>Unnecessary Lambda</DisplayName>
        <Description>Used when the body of a lambda expression is a function call on the same argument list as the lambda itself; such lambda expressions are in all but a few cases replaceable with the function being called in the body of the lambda.</Description>
        <HelpText>Used when the body of a lambda expression is a function call on the same argument list as the lambda itself; such lambda expressions are in all but a few cases replaceable with the function being called in the body of the lambda.</HelpText>
        <WarningText>Lambda may not be necessary</WarningText>
      </Language>
      <Baselines/>
      <Settings>
        <Setting name = "Priority" editable = "true">Major</Setting>
      </Settings>
      <Calculated/>
    </Configuration>
  </Metric>
  <Metric id = "PYLINT_ULEF">
    <Configuration name = "Default">
      <Enabled>true</Enabled>
      <Visible>true</Visible>
      <Group>false</Group>
      <OriginalId>unexpected-line-ending-format</OriginalId>
      <GroupMember>Format Rules</GroupMember>
      <Language lang = "eng">
        <Warning>true</Warning>
        <DisplayName>Unexpected Line Ending Format</DisplayName>
        <Description>Used when there is different newline than expected.</Description>
        <HelpText>Used when there is different newline than expected.</HelpText>
        <WarningText>Unexpected line ending format. There is &apos;%s&apos; while it should be &apos;%s&apos;.</WarningText>
      </Language>
      <Baselines/>
      <Settings>
        <Setting name = "Priority" editable = "true">Minor</Setting>
      </Settings>
      <Calculated/>
    </Configuration>
  </Metric>
  <Metric id = "PYLINT_ULV">
    <Configuration name = "Default">
      <Enabled>true</Enabled>
      <Visible>true</Visible>
      <Group>false</Group>
      <OriginalId>undefined-loop-variable</OriginalId>
      <GroupMember>Variable Rules</GroupMember>
      <Language lang = "eng">
        <Warning>true</Warning>
        <DisplayName>Undefined Loop Variable</DisplayName>
        <Description>Used when an loop variable (i.e. defined by a for loop or a list comprehension or a generator expression) is used outside the loop.</Description>
        <HelpText>Used when an loop variable (i.e. defined by a for loop or a list comprehension or a generator expression) is used outside the loop.</HelpText>
        <WarningText>Using possibly undefined loop variable %r</WarningText>
      </Language>
      <Baselines/>
      <Settings>
        <Setting name = "Priority" editable = "true">Major</Setting>
      </Settings>
      <Calculated/>
    </Configuration>
  </Metric>
  <Metric id = "PYLINT_UNS">
    <Configuration name = "Default">
      <Enabled>true</Enabled>
      <Visible>true</Visible>
      <Group>false</Group>
      <OriginalId>unpacking-non-sequence</OriginalId>
      <GroupMember>Variable Rules</GroupMember>
      <Language lang = "eng">
        <Warning>true</Warning>
        <DisplayName>Unpacking Non Sequence</DisplayName>
        <Description>Used when something which is not a sequence is used in an unpack assignment</Description>
        <HelpText>Used when something which is not a sequence is used in an unpack assignment</HelpText>
        <WarningText>Attempting to unpack a non-sequence%s</WarningText>
      </Language>
      <Baselines/>
      <Settings>
        <Setting name = "Priority" editable = "true">Major</Setting>
      </Settings>
      <Calculated/>
    </Configuration>
  </Metric>
  <Metric id = "PYLINT_UP">
    <Configuration name = "Default">
      <Enabled>true</Enabled>
      <Visible>true</Visible>
      <Group>false</Group>
      <OriginalId>unnecessary-pass</OriginalId>
      <GroupMember>Basic Rules</GroupMember>
      <Language lang = "eng">
        <Warning>true</Warning>
        <DisplayName>Unnecessary Pass</DisplayName>
        <Description>Used when a &quot;pass&quot; statement that can be avoided is encountered.</Description>
        <HelpText>Used when a &quot;pass&quot; statement that can be avoided is encountered.</HelpText>
        <WarningText>Unnecessary pass statement</WarningText>
      </Language>
      <Baselines/>
      <Settings>
        <Setting name = "Priority" editable = "true">Major</Setting>
      </Settings>
      <Calculated/>
    </Configuration>
  </Metric>
  <Metric id = "PYLINT_US">
    <Configuration name = "Default">
      <Enabled>true</Enabled>
      <Visible>true</Visible>
      <Group>false</Group>
      <OriginalId>unnecessary-semicolon</OriginalId>
      <GroupMember>Format Rules</GroupMember>
      <Language lang = "eng">
        <Warning>true</Warning>
        <DisplayName>Unnecessary Semicolon</DisplayName>
        <Description>Used when a statement is ended by a semi-colon (&quot;;&quot;), which isn&apos;t necessary (that&apos;s python, not C ;).</Description>
        <HelpText>Used when a statement is ended by a semi-colon (&quot;;&quot;), which isn&apos;t necessary (that&apos;s python, not C ;).</HelpText>
        <WarningText>Unnecessary semicolon</WarningText>
      </Language>
      <Baselines/>
      <Settings>
        <Setting name = "Priority" editable = "true">Major</Setting>
      </Settings>
      <Calculated/>
    </Configuration>
  </Metric>
  <Metric id = "PYLINT_UTU">
    <Configuration name = "Default">
      <Enabled>true</Enabled>
      <Visible>true</Visible>
      <Group>false</Group>
      <OriginalId>unbalanced-tuple-unpacking</OriginalId>
      <GroupMember>Variable Rules</GroupMember>
      <Language lang = "eng">
        <Warning>true</Warning>
        <DisplayName>Unbalanced Tuple Unpacking</DisplayName>
        <Description>Used when there is an unbalanced tuple unpacking in assignment</Description>
        <HelpText>Used when there is an unbalanced tuple unpacking in assignment</HelpText>
        <WarningText>Possible unbalanced tuple unpacking with sequence%s: left side has %d label(s), right side has %d value(s)</WarningText>
      </Language>
      <Baselines/>
      <Settings>
        <Setting name = "Priority" editable = "true">Major</Setting>
      </Settings>
      <Calculated/>
    </Configuration>
  </Metric>
  <Metric id = "PYLINT_UV">
    <Configuration name = "Default">
      <Enabled>true</Enabled>
      <Visible>true</Visible>
      <Group>false</Group>
      <OriginalId>undefined-variable</OriginalId>
      <GroupMember>Variable Rules</GroupMember>
      <Language lang = "eng">
        <Warning>true</Warning>
        <DisplayName>Undefined Variable</DisplayName>
        <Description>Used when an undefined variable is accessed.</Description>
        <HelpText>Used when an undefined variable is accessed.</HelpText>
        <WarningText>Undefined variable %r</WarningText>
      </Language>
      <Baselines/>
      <Settings>
        <Setting name = "Priority" editable = "true">Critical</Setting>
      </Settings>
      <Calculated/>
    </Configuration>
  </Metric>
  <Metric id = "PYLINT_UWI">
    <Configuration name = "Default">
      <Enabled>true</Enabled>
      <Visible>true</Visible>
      <Group>false</Group>
      <OriginalId>unused-wildcard-import</OriginalId>
      <GroupMember>Variable Rules</GroupMember>
      <Language lang = "eng">
        <Warning>true</Warning>
        <DisplayName>Unused Wildcard Import</DisplayName>
        <Description>Used when an imported module or variable is not used from a &apos;from X import *&apos; style import.</Description>
        <HelpText>Used when an imported module or variable is not used from a &apos;from X import *&apos; style import.</HelpText>
        <WarningText>Unused import %s from wildcard import</WarningText>
      </Language>
      <Baselines/>
      <Settings>
        <Setting name = "Priority" editable = "true">Major</Setting>
      </Settings>
      <Calculated/>
    </Configuration>
  </Metric>
  <Metric id = "PYLINT_UnI">
    <Configuration name = "Default">
      <Enabled>true</Enabled>
      <Visible>true</Visible>
      <Group>false</Group>
      <OriginalId>unused-import</OriginalId>
      <GroupMember>Variable Rules</GroupMember>
      <Language lang = "eng">
        <Warning>true</Warning>
        <DisplayName>Unused Import</DisplayName>
        <Description>Used when an imported module or variable is not used.</Description>
        <HelpText>Used when an imported module or variable is not used.</HelpText>
        <WarningText>Unused %s</WarningText>
      </Language>
      <Baselines/>
      <Settings>
        <Setting name = "Priority" editable = "true">Major</Setting>
      </Settings>
      <Calculated/>
    </Configuration>
  </Metric>
  <Metric id = "PYLINT_UnV">
    <Configuration name = "Default">
      <Enabled>true</Enabled>
      <Visible>true</Visible>
      <Group>false</Group>
      <OriginalId>unused-variable</OriginalId>
      <GroupMember>Variable Rules</GroupMember>
      <Language lang = "eng">
        <Warning>true</Warning>
        <DisplayName>Unused Variable</DisplayName>
        <Description>Used when a variable is defined but not used.</Description>
        <HelpText>Used when a variable is defined but not used.</HelpText>
        <WarningText>Unused variable %r</WarningText>
      </Language>
      <Baselines/>
      <Settings>
        <Setting name = "Priority" editable = "true">Major</Setting>
      </Settings>
      <Calculated/>
    </Configuration>
  </Metric>
  <Metric id = "PYLINT_UsS">
    <Configuration name = "Default">
      <Enabled>false</Enabled>
      <Visible>true</Visible>
      <Group>false</Group>
      <OriginalId>useless-suppression</OriginalId>
      <GroupMember>Pylint Checker Rules</GroupMember>
      <Language lang = "eng">
        <Warning>true</Warning>
        <DisplayName>Useless Suppression</DisplayName>
        <Description>Reported when a message is explicitly disabled for a line or a block of code, but never triggered.</Description>
        <HelpText>Reported when a message is explicitly disabled for a line or a block of code, but never triggered.</HelpText>
        <WarningText>Useless suppression of %s</WarningText>
      </Language>
      <Baselines/>
      <Settings>
        <Setting name = "Priority" editable = "true">Minor</Setting>
      </Settings>
      <Calculated/>
    </Configuration>
  </Metric>
  <Metric id = "PYLINT_WI">
    <Configuration name = "Default">
      <Enabled>true</Enabled>
      <Visible>true</Visible>
      <Group>false</Group>
      <OriginalId>wildcard-import</OriginalId>
      <GroupMember>Import Rules</GroupMember>
      <Language lang = "eng">
        <Warning>true</Warning>
        <DisplayName>Wildcard Import</DisplayName>
        <Description>Used when `from module import *` is detected.</Description>
        <HelpText>Used when `from module import *` is detected.</HelpText>
        <WarningText>Wildcard import %s</WarningText>
      </Language>
      <Baselines/>
      <Settings>
        <Setting name = "Priority" editable = "true">Major</Setting>
      </Settings>
      <Calculated/>
    </Configuration>
  </Metric>
  <Metric id = "PYLINT_WSIC">
    <Configuration name = "Default">
      <Enabled>true</Enabled>
      <Visible>true</Visible>
      <Group>false</Group>
      <OriginalId>wrong-spelling-in-comment</OriginalId>
      <GroupMember>Spelling Rules</GroupMember>
      <Language lang = "eng">
        <Warning>true</Warning>
        <DisplayName>Wrong Spelling In Comment</DisplayName>
        <Description>Used when a word in comment is not spelled correctly.</Description>
        <HelpText>Used when a word in comment is not spelled correctly.</HelpText>
        <WarningText>Wrong spelling of a word &apos;%s&apos; in a comment:</WarningText>
      </Language>
      <Baselines/>
      <Settings>
        <Setting name = "Priority" editable = "true">Minor</Setting>
      </Settings>
      <Calculated/>
    </Configuration>
  </Metric>
  <Metric id = "PYLINT_WSID">
    <Configuration name = "Default">
      <Enabled>true</Enabled>
      <Visible>true</Visible>
      <Group>false</Group>
      <OriginalId>wrong-spelling-in-docstring</OriginalId>
      <GroupMember>Spelling Rules</GroupMember>
      <Language lang = "eng">
        <Warning>true</Warning>
        <DisplayName>Wrong Spelling In Docstring</DisplayName>
        <Description>Used when a word in docstring is not spelled correctly.</Description>
        <HelpText>Used when a word in docstring is not spelled correctly.</HelpText>
        <WarningText>Wrong spelling of a word &apos;%s&apos; in a docstring:</WarningText>
      </Language>
      <Baselines/>
      <Settings>
        <Setting name = "Priority" editable = "true">Minor</Setting>
      </Settings>
      <Calculated/>
    </Configuration>
  </Metric>
  <Metric id = "PYLINT_XB">
    <Configuration name = "Default">
      <Enabled>true</Enabled>
      <Visible>true</Visible>
      <Group>false</Group>
      <OriginalId>xrange-builtin</OriginalId>
      <GroupMember>Python3 Rules</GroupMember>
      <Language lang = "eng">
        <Warning>true</Warning>
        <DisplayName>Xrange Builtin</DisplayName>
        <Description>Used when the xrange built-in function is referenced (missing from Python 3) This message can&apos;t be emitted when using Python &gt;= 3.0.</Description>
        <HelpText>Used when the xrange built-in function is referenced (missing from Python 3) This message can&apos;t be emitted when using Python &gt;= 3.0.</HelpText>
        <WarningText>xrange built-in referenced</WarningText>
      </Language>
      <Baselines/>
      <Settings>
        <Setting name = "Priority" editable = "true">Major</Setting>
      </Settings>
      <Calculated/>
    </Configuration>
  </Metric>
  <Metric id = "PYLINT_YOF">
    <Configuration name = "Default">
      <Enabled>true</Enabled>
      <Visible>true</Visible>
      <Group>false</Group>
      <OriginalId>yield-outside-function</OriginalId>
      <GroupMember>Basic Rules</GroupMember>
      <Language lang = "eng">
        <Warning>true</Warning>
        <DisplayName>Yield Outside Function</DisplayName>
        <Description>Used when a &quot;yield&quot; statement is found outside a function or method.</Description>
        <HelpText>Used when a &quot;yield&quot; statement is found outside a function or method.</HelpText>
        <WarningText>Yield outside function</WarningText>
      </Language>
      <Baselines/>
      <Settings>
        <Setting name = "Priority" editable = "true">Critical</Setting>
      </Settings>
      <Calculated/>
    </Configuration>
  </Metric>
  <Metric id = "Pylint Checker Rules">
    <Configuration name = "Default">
      <Enabled>false</Enabled>
      <Visible>true</Visible>
      <Group>summarized</Group>
      <Language lang = "eng">
        <Warning>true</Warning>
        <DisplayName>Pylint Checker Rules</DisplayName>
        <Description>Pylint Checker Rules</Description>
        <HelpText>Pylint Checker Rules</HelpText>
      </Language>
      <Baselines/>
      <Settings>
        <Setting name = "Priority" editable = "true">Minor</Setting>
      </Settings>
      <Calculated/>
    </Configuration>
  </Metric>
  <Metric id = "Python3 Rules">
    <Configuration name = "Default">
      <Enabled>true</Enabled>
      <Visible>true</Visible>
      <Group>summarized</Group>
      <Language lang = "eng">
        <Warning>true</Warning>
        <DisplayName>Python3 Rules</DisplayName>
        <Description>Python3 Rules</Description>
        <HelpText>Python3 Rules</HelpText>
      </Language>
      <Baselines/>
      <Settings>
        <Setting name = "Priority" editable = "true">Minor</Setting>
      </Settings>
      <Calculated/>
    </Configuration>
  </Metric>
  <Metric id = "Similarity Rules">
    <Configuration name = "Default">
      <Enabled>false</Enabled>
      <Visible>true</Visible>
      <Group>summarized</Group>
      <Language lang = "eng">
        <Warning>true</Warning>
        <DisplayName>Similarity Rules</DisplayName>
        <Description>Similarity Rules</Description>
        <HelpText>Similarity Rules</HelpText>
      </Language>
      <Baselines/>
      <Settings>
        <Setting name = "Priority" editable = "true">Minor</Setting>
      </Settings>
      <Calculated/>
    </Configuration>
  </Metric>
  <Metric id = "Spelling Rules">
    <Configuration name = "Default">
      <Enabled>true</Enabled>
      <Visible>true</Visible>
      <Group>summarized</Group>
      <Language lang = "eng">
        <Warning>true</Warning>
        <DisplayName>Spelling Rules</DisplayName>
        <Description>Spelling Rules</Description>
        <HelpText>Spelling Rules</HelpText>
      </Language>
      <Baselines/>
      <Settings>
        <Setting name = "Priority" editable = "true">Minor</Setting>
      </Settings>
      <Calculated/>
    </Configuration>
  </Metric>
  <Metric id = "Stdlib Rules">
    <Configuration name = "Default">
      <Enabled>true</Enabled>
      <Visible>true</Visible>
      <Group>summarized</Group>
      <Language lang = "eng">
        <Warning>true</Warning>
        <DisplayName>Stdlib Rules</DisplayName>
        <Description>Stdlib Rules</Description>
        <HelpText>Stdlib Rules</HelpText>
      </Language>
      <Baselines/>
      <Settings>
        <Setting name = "Priority" editable = "true">Minor</Setting>
      </Settings>
      <Calculated/>
    </Configuration>
  </Metric>
  <Metric id = "String Constant Rules">
    <Configuration name = "Default">
      <Enabled>true</Enabled>
      <Visible>true</Visible>
      <Group>summarized</Group>
      <Language lang = "eng">
        <Warning>true</Warning>
        <DisplayName>String Constant Rules</DisplayName>
        <Description>String Constant Rules</Description>
        <HelpText>String Constant Rules</HelpText>
      </Language>
      <Baselines/>
      <Settings>
        <Setting name = "Priority" editable = "true">Minor</Setting>
      </Settings>
      <Calculated/>
    </Configuration>
  </Metric>
  <Metric id = "String Rules">
    <Configuration name = "Default">
      <Enabled>true</Enabled>
      <Visible>true</Visible>
      <Group>summarized</Group>
      <Language lang = "eng">
        <Warning>true</Warning>
        <DisplayName>String Rules</DisplayName>
        <Description>String Rules</Description>
        <HelpText>String Rules</HelpText>
      </Language>
      <Baselines/>
      <Settings>
        <Setting name = "Priority" editable = "true">Minor</Setting>
      </Settings>
      <Calculated/>
    </Configuration>
  </Metric>
  <Metric id = "Typecheck Rules">
    <Configuration name = "Default">
      <Enabled>true</Enabled>
      <Visible>true</Visible>
      <Group>summarized</Group>
      <Language lang = "eng">
        <Warning>true</Warning>
        <DisplayName>Typecheck Rules</DisplayName>
        <Description>Typecheck Rules</Description>
        <HelpText>Typecheck Rules</HelpText>
      </Language>
      <Baselines/>
      <Settings>
        <Setting name = "Priority" editable = "true">Minor</Setting>
      </Settings>
      <Calculated/>
    </Configuration>
  </Metric>
  <Metric id = "Variable Rules">
    <Configuration name = "Default">
      <Enabled>true</Enabled>
      <Visible>true</Visible>
      <Group>summarized</Group>
      <Language lang = "eng">
        <Warning>true</Warning>
        <DisplayName>Variable Rules</DisplayName>
        <Description>Variable Rules</Description>
        <HelpText>Variable Rules</HelpText>
      </Language>
      <Baselines/>
      <Settings>
        <Setting name = "Priority" editable = "true">Minor</Setting>
      </Settings>
      <Calculated/>
    </Configuration>
  </Metric>
</Rul>
